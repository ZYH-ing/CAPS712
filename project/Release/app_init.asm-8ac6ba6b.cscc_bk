.stabs "D:\\ZXV\\负责项目\\CAPS712\\CAPS712_20250626_V2\\source\\app\\",0x64,0,0,0
.stabs "D:\\ZXV\\负责项目\\CAPS712\\CAPS712_20250626_V2\\source\\app\\app_init.c",0x64,0,0,0
.stabs "int:t1=r1;-32768;32767;",0x80,0,0,0
.stabs "unsigned int:t2=r2;0;65535;",0x80,0,0,0
.stabs "long int:t3=r3;-2147483648;2147483647;",0x80,0,0,0
.stabs "unsigned long int:t4=r4;0;4294967295;",0x80,0,0,0
.stabs "long long unsigned int:t6=r6;0;4294967295;",0x80,0,0,0
.stabs "short int:t7=r7;-32768;32767;",0x80,0,0,0
.stabs "short unsigned int:t8=r8;0;65535;",0x80,0,0,0
.stabs "char:t9=r9;-128;127;",0x80,0,0,0
.stabs "unsigned char:t10=r10;0;255;",0x80,0,0,0
.stabs "_Bool:t11=r11;0;1;",0x80,0,0,0
.stabs "sbit:t12=r12;0;1;",0x80,0,0,0
.stabs "float:t13=r13;4;0;",0x80,0,0,0
.stabs "double:t14=r14;4;0;",0x80,0,0,0
.stabs "long double:t15=r15;4;0;",0x80,0,0,0
.stabs "void:t16=r10;0;255;",0x80,0,0,0
.stabs "pdo_src_list_h:G17=ar18;0;6;19=ar20;0;1;21=22=4;;",0x20,0,0,_pdo_src_list_h
.stabs "source_capabilities_extended_message:G23=ar24;0;23;25=26=27=10;;;",0x20,0,0,_source_capabilities_extended_message
.stabs "status_message:G28=ar29;0;4;30=31=32=10;;;",0x20,0,0,_status_message
.stabs "battery_capabilities_message:G33=ar34;0;8;35=36=37=10;;;",0x20,0,0,_battery_capabilities_message
.stabs "pdo_sourcecap:G38=ar39;0;6;40=41=42=4;;;",0x20,0,0,_pdo_sourcecap
.stabs "pdo_sourcecap_45:G43=ar44;0;6;45=46=47=4;;;",0x20,0,0,_pdo_sourcecap_45
.stabs "pdo_sourcecap_30:G48=ar49;0;6;50=51=52=4;;;",0x20,0,0,_pdo_sourcecap_30
.stabs "pdo_sourcecap_18:G53=ar54;0;6;55=56=57=4;;;",0x20,0,0,_pdo_sourcecap_18
.stabs "multi_src_list:G58=ar59;0;3;60=ar61;0;1;62=63=4;;",0x20,0,0,_multi_src_list
.stabs "pdo_sinkcap:G64=ar65;0;1;66=67=68=4;;;",0x20,0,0,_pdo_sinkcap
.stabs "pdo_sinkcap_9:G69=ar70;0;1;71=72=73=4;;;",0x20,0,0,_pdo_sinkcap_9
.stabs "Vbat_Tab:G74=ar75;0;20;76=77=78=10;;;",0x20,0,0,_Vbat_Tab
.stabs "VbatDisP_Tab:G79=ar80;0;22;81=82=83=10;;;",0x20,0,0,_VbatDisP_Tab
.stabs "TypeOfTemp:T84=s10Temp_IN:85=10;;,0,8;DischargeTemp_OK:86=10;;,8,16;DischargeTemp_High:87=10;;,16,24;DischargeTemp_Low:88=10;;,24,32;ChargeTemp_OK:89=10;;,32,40;ChargeTemp_High:90=10;;,40,48;ChargeTemp_Low:91=10;;,48,56;Discharge_TempNG_cnt:92=10;;,56,64;Charge_TempNG_cnt:93=10;;,64,72;Charge_TempRE_cnt:94=10;;,72,80;;", 0x80, 0, 0, 0
.stabs "Temp:G84;",0x20,0,0,_Temp
.stabs "Frist_start_sink:G10;",0x20,0,0,_Frist_start_sink
.stabs "Charge_low_power_F:G10;",0x20,0,0,_Charge_low_power_F
.stabs "Charge_low_power_CNT:G10;",0x20,0,0,_Charge_low_power_CNT
.stabs "Charge_bat_low_power_F:G10;",0x20,0,0,_Charge_bat_low_power_F
.stabs "Charge_bat_low_power_CNT:G10;",0x20,0,0,_Charge_bat_low_power_CNT
.stabs "Charge_HIG_Vbat_F:G10;",0x20,0,0,_Charge_HIG_Vbat_F
.stabs "Charge_low_Vbat_CNT:G10;",0x20,0,0,_Charge_low_Vbat_CNT
.stabs "uart_read_temp:G10;",0x20,0,0,_uart_read_temp
.stabs "A1_closeTIME:G2;",0x20,0,0,_A1_closeTIME
.stabs "Car_low_bat_cnt:G10;",0x20,0,0,_Car_low_bat_cnt
.stabs "Temp_limit_discharge:G10;",0x20,0,0,_Temp_limit_discharge
.stabs "Temp_limit_I:G10;",0x20,0,0,_Temp_limit_I
.stabs "Temp_limit_count:G10;",0x20,0,0,_Temp_limit_count
.stabs "Temp_close_limit_count:G10;",0x20,0,0,_Temp_close_limit_count
.stabs "Bat_Protest_cnt:G10;",0x20,0,0,_Bat_Protest_cnt
.stabs "Bat_low_sleep_flage:G10;",0x20,0,0,_Bat_low_sleep_flage
.stabs "hour2_dis_flage:G10;",0x20,0,0,_hour2_dis_flage
.stabs "Flash_Bat_Vol_data:G10;",0x20,0,0,_Flash_Bat_Vol_data
.stabs "Flash_Bat_Value_data:G10;",0x20,0,0,_Flash_Bat_Value_data
.stabs "Flash_Bat_RCR_data:G10;",0x20,0,0,_Flash_Bat_RCR_data
.stabs "hour2_dis_cnt:G2;",0x20,0,0,_hour2_dis_cnt
.stabs "ADD_IBAT_cnt:G2;",0x20,0,0,_ADD_IBAT_cnt
.stabs "ADD_percent_accu:G10;",0x20,0,0,_ADD_percent_accu
.stabs "CA_IN_Frist_No_Soure:G10;",0x20,0,0,_CA_IN_Frist_No_Soure
.stabs "BAT_CO_OPEN_CNT:G10;",0x20,0,0,_BAT_CO_OPEN_CNT
.stabs "Self_inspe_CNT:G10;",0x20,0,0,_Self_inspe_CNT
.stabs "car_low_bater_Cnt:G10;",0x20,0,0,_car_low_bater_Cnt
.stabs "car_OK_Flage:G10;",0x20,0,0,_car_OK_Flage
.stabs "DIS_low_bater_Cnt:G10;",0x20,0,0,_DIS_low_bater_Cnt
.stabs "open_to_12hour_Cnt:G2;",0x20,0,0,_open_to_12hour_Cnt
.stabs "Port_NTC_NG_LOW_POWER_Flage:G10;",0x20,0,0,_Port_NTC_NG_LOW_POWER_Flage
.stabs "Port_NTC_NG_LOW_POWER_Cnt:G10;",0x20,0,0,_Port_NTC_NG_LOW_POWER_Cnt
.stabs "I_All_IN_Do:G2;",0x20,0,0,_I_All_IN_Do
.stabs "BAT_real:G10;",0x20,0,0,_BAT_real
.stabs "BAT_cnt_recor:G10;",0x20,0,0,_BAT_cnt_recor
.stabs "LCD_display_3S_Cnt:G1",0x20,0,0,_LCD_display_3S_Cnt
.stabs "pdo_src_list:G95=ar96;0;6;97=ar98;0;1;99=4;",0x20,0,0,_pdo_src_list
.stabs "R_data_tx:G10;",0x20,0,0,_R_data_tx
.stabs "R_count_tx:G10;",0x20,0,0,_R_count_tx
.stabs "bat_full_cnt:G10;",0x20,0,0,_bat_full_cnt
.stabs "R_SysMode_OK:G10;",0x20,0,0,_R_SysMode_OK
.stabs "R_SysMode_OK_bak:G10;",0x20,0,0,_R_SysMode_OK_bak
.stabs "R_SysMode_BE:G10;",0x20,0,0,_R_SysMode_BE
.stabs "Charge_up_Cnt:G10;",0x20,0,0,_Charge_up_Cnt
.stabs "DisCharge_down_Cnt:G10;",0x20,0,0,_DisCharge_down_Cnt
.stabs "Bat_low_Cnt:G10;",0x20,0,0,_Bat_low_Cnt
.stabs "Bat_low_RE_Cnt:G10;",0x20,0,0,_Bat_low_RE_Cnt
.stabs "Bat_low2_Cnt:G10;",0x20,0,0,_Bat_low2_Cnt
.stabs "Discharge_MinCur:G10;",0x20,0,0,_Discharge_MinCur
.stabs "R_DisCharge_SmallCurCnt:G10;",0x20,0,0,_R_DisCharge_SmallCurCnt
.stabs "R_DisCharge_OutTime:G10;",0x20,0,0,_R_DisCharge_OutTime
.stabs "R_Charge_level:G10;",0x20,0,0,_R_Charge_level
.stabs "R_Charge_level_up_Cnt:G10;",0x20,0,0,_R_Charge_level_up_Cnt
.stabs "R_Charge_level_down_Cnt:G10;",0x20,0,0,_R_Charge_level_down_Cnt
.stabs "MiroB_charge_Cnt:G10;",0x20,0,0,_MiroB_charge_Cnt
.stabs "MiroB_dis_Cnt:G10;",0x20,0,0,_MiroB_dis_Cnt
.stabs "V_NO_Cha_flage:G10;",0x20,0,0,_V_NO_Cha_flage
.stabs "V_NO_Charge:G10;",0x20,0,0,_V_NO_Charge
.stabs "V_NO_BAT_Charge:G10;",0x20,0,0,_V_NO_BAT_Charge
.stabs "V_NO_BAT_Cnt:G10;",0x20,0,0,_V_NO_BAT_Cnt
.stabs "SOS_lighting_stop:G10;",0x20,0,0,_SOS_lighting_stop
.stabs "bat_dis_full_cnt:G10;",0x20,0,0,_bat_dis_full_cnt
.stabs "statusKeyFlag:G10;",0x20,0,0,_statusKeyFlag
.stabs "Be_statusKeyFlag:G10;",0x20,0,0,_Be_statusKeyFlag
.stabs "flash_count:G10",0x20,0,0,_flash_count
.stabs "sos_state:G10",0x20,0,0,_sos_state
.stabs "sos_count:G10",0x20,0,0,_sos_count
.stabs "TYPEC_sleep_time_cnt:G2;",0x20,0,0,_TYPEC_sleep_time_cnt
.stabs "TYPEC_sleep_distime_cnt:G10;",0x20,0,0,_TYPEC_sleep_distime_cnt
.stabs "CA_Test_do_no_Slepp:G10;",0x20,0,0,_CA_Test_do_no_Slepp
.stabs "delay_Check_C_Vol:G10;",0x20,0,0,_delay_Check_C_Vol
.stabs "Charge_Bat_Start_Cnt:G10;",0x20,0,0,_Charge_Bat_Start_Cnt
.stabs "Frist_Bat_Connect:G10;",0x20,0,0,_Frist_Bat_Connect
.stabs "Frist_Bat_100ms_Cnt:G10;",0x20,0,0,_Frist_Bat_100ms_Cnt
.stabs "Car_Cont_NG_Flage:G10;",0x20,0,0,_Car_Cont_NG_Flage
.include "instV2/csccCond.inc"
.include "instV2/csccCmp.inc"
.include "instV2/csccShift.inc"
	_app_peripheral_init_sec .section rom
	.global	_app_peripheral_init
_app_peripheral_init:
Lfunc_begin0:
.stabs "app_peripheral_init:f:16", 0x24,0,0,_app_peripheral_init
.stabn 0xc0, 0, 0, _app_peripheral_init
.stabn 0xe0, 0, 0, _app_peripheral_init
LM0:
.stabn	0x44, 0, 354, LM0-_app_peripheral_init
Lfunc_begin1:
LM1:
.stabn	0x44, 0, 357, LM1-_app_peripheral_init
	banksel 0
	call _SystemInit
LM2:
.stabn	0x44, 0, 359, LM2-_app_peripheral_init
	call _syscfg_init
LM3:
.stabn	0x44, 0, 363, LM3-_app_peripheral_init
	call _timer0_init
LM4:
.stabn	0x44, 0, 368, LM4-_app_peripheral_init
	clrf _PT1+0
LM5:
.stabn	0x44, 0, 369, LM5-_app_peripheral_init
	movlw 0xf0
	movwf _PT1EN+0
LM6:
.stabn	0x44, 0, 370, LM6-_app_peripheral_init
	movlw 9
	movwf _PT1PU+0
LM7:
.stabn	0x44, 0, 373, LM7-_app_peripheral_init
	clrf _PT2+0
LM8:
.stabn	0x44, 0, 374, LM8-_app_peripheral_init
	movlw 36
	movwf _PT2EN+0
LM9:
.stabn	0x44, 0, 375, LM9-_app_peripheral_init
	movlw 0x80
	movwf _PT2PU+0
LM10:
.stabn	0x44, 0, 377, LM10-_app_peripheral_init
	movlw 32
	movwf _PT3+0
LM11:
.stabn	0x44, 0, 378, LM11-_app_peripheral_init
	movlw 120
	movwf _PT3EN+0
LM12:
.stabn	0x44, 0, 377, LM12-_app_peripheral_init
	movlw 32
LM13:
.stabn	0x44, 0, 379, LM13-_app_peripheral_init
	movwf _PT3PU+0
LM14:
.stabn	0x44, 0, 382, LM14-_app_peripheral_init
	movlw 100
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM15:
.stabn	0x44, 0, 384, LM15-_app_peripheral_init
Ltmp0:
	bsf _PT1EN5, _PT1EN5
	bsf _PT15, _PT15
Ltmp1:
LM16:
.stabn	0x44, 0, 386, LM16-_app_peripheral_init
	call _mod_display_init
LM17:
.stabn	0x44, 0, 389, LM17-_app_peripheral_init
	bsf BSR,1
	clrf _inoutput_data+13
LM18:
.stabn	0x44, 0, 390, LM18-_app_peripheral_init
	clrf _inoutput_data+14
LM19:
.stabn	0x44, 0, 391, LM19-_app_peripheral_init
	clrf _inoutput_data+16
LM20:
.stabn	0x44, 0, 392, LM20-_app_peripheral_init
	clrf _inoutput_data+17
LM21:
.stabn	0x44, 0, 394, LM21-_app_peripheral_init
	clrf _inoutput_data+7
LM22:
.stabn	0x44, 0, 395, LM22-_app_peripheral_init
	clrf _inoutput_data+8
LM23:
.stabn	0x44, 0, 396, LM23-_app_peripheral_init
	clrf _inoutput_data+10
LM24:
.stabn	0x44, 0, 398, LM24-_app_peripheral_init
	banksel _BAT_CO_OPEN_CNT
	clrf _BAT_CO_OPEN_CNT+0
LM25:
.stabn	0x44, 0, 382, LM25-_app_peripheral_init
	movlw 100
LM26:
.stabn	0x44, 0, 422, LM26-_app_peripheral_init
	bcf BSR,0
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM27:
.stabn	0x44, 0, 423, LM27-_app_peripheral_init
	movlw 1
	movwfl _BAT_Pro_Charge+0
LBB0_1:
LM28:
.stabn	0x44, 0, 426, LM28-_app_peripheral_init
Ltmp2:
	call _mod_SC8886_init
LM29:
.stabn	0x44, 0, 427, LM29-_app_peripheral_init
	movlw 10
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM30:
.stabn	0x44, 0, 428, LM30-_app_peripheral_init
	movlw 52
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _app_peripheral_init.temp.+0
LM31:
.stabn	0x44, 0, 430, LM31-_app_peripheral_init
	sublw 0xac
	bne LBB0_3
LBB0_2:
LM32:
.stabn	0x44, 0, 432, LM32-_app_peripheral_init
Ltmp3:
	goto LBB0_4
Ltmp4:
LBB0_3:
LM33:
.stabn	0x44, 0, 435, LM33-_app_peripheral_init
	bsf _PT1EN4, _PT1EN4
	bsf _PT14, _PT14
Ltmp5:
LM34:
.stabn	0x44, 0, 424, LM34-_app_peripheral_init
	goto LBB0_1
LBB0_4:
LM35:
.stabn	0x44, 0, 438, LM35-_app_peripheral_init
Ltmp6:
	bsf _PT1EN4, _PT1EN4
	bcf _PT14, _PT14
Ltmp7:
LM36:
.stabn	0x44, 0, 440, LM36-_app_peripheral_init
	movlw LOW(_h_typeca+0)
	movwf _peripheral_typec_init.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _peripheral_typec_init.args.+1
	call _peripheral_typec_init
LM37:
.stabn	0x44, 0, 441, LM37-_app_peripheral_init
	movlw LOW(_h_typecb+0)
	movwf _peripheral_typec_init.args.+0
	movlw HIGH8(_h_typecb+0)
	movwf _peripheral_typec_init.args.+1
	call _peripheral_typec_init
LM38:
.stabn	0x44, 0, 444, LM38-_app_peripheral_init
	call _peripheral_pd_init
LM39:
.stabn	0x44, 0, 449, LM39-_app_peripheral_init
	call _multi_protocol_init
LM40:
.stabn	0x44, 0, 453, LM40-_app_peripheral_init
	bsf BSR,2
	clrf _multi_protocol+0
LM41:
.stabn	0x44, 0, 455, LM41-_app_peripheral_init
	movlw 1
LM42:
.stabn	0x44, 0, 454, LM42-_app_peripheral_init
	movwf _multi_protocol+2
LM43:
.stabn	0x44, 0, 455, LM43-_app_peripheral_init
	movwf _multi_protocol+3
LM44:
.stabn	0x44, 0, 457, LM44-_app_peripheral_init
	clrf _multi_protocol+4
LM45:
.stabn	0x44, 0, 458, LM45-_app_peripheral_init
	clrf _multi_protocol+5
LM46:
.stabn	0x44, 0, 459, LM46-_app_peripheral_init
	clrf _multi_protocol+6
LM47:
.stabn	0x44, 0, 455, LM47-_app_peripheral_init
	movlw 1
LM48:
.stabn	0x44, 0, 462, LM48-_app_peripheral_init
	movwf _multi_protocol+7
LM49:
.stabn	0x44, 0, 463, LM49-_app_peripheral_init
	movwf _multi_protocol+8
LM50:
.stabn	0x44, 0, 464, LM50-_app_peripheral_init
	movwf _multi_protocol+9
LM51:
.stabn	0x44, 0, 465, LM51-_app_peripheral_init
	movlw 3
	movwf _multi_protocol+10
LM52:
.stabn	0x44, 0, 455, LM52-_app_peripheral_init
	movlw 1
LM53:
.stabn	0x44, 0, 469, LM53-_app_peripheral_init
	movwf _multi_protocol+11
LM54:
.stabn	0x44, 0, 470, LM54-_app_peripheral_init
	movwf _multi_protocol+12
LM55:
.stabn	0x44, 0, 471, LM55-_app_peripheral_init
	clrf _multi_protocol+13
LM56:
.stabn	0x44, 0, 473, LM56-_app_peripheral_init
	movlw 104
	movwf _multi_protocol+14
LM57:
.stabn	0x44, 0, 455, LM57-_app_peripheral_init
	movlw 1
LM58:
.stabn	0x44, 0, 473, LM58-_app_peripheral_init
	movwf _multi_protocol+15
LM59:
.stabn	0x44, 0, 455, LM59-_app_peripheral_init
	movlw 1
LM60:
.stabn	0x44, 0, 476, LM60-_app_peripheral_init
	movwf _multi_protocol+16
LM61:
.stabn	0x44, 0, 477, LM61-_app_peripheral_init
	movwf _multi_protocol+17
LM62:
.stabn	0x44, 0, 479, LM62-_app_peripheral_init
	clrf _multi_protocol+18
LM63:
.stabn	0x44, 0, 481, LM63-_app_peripheral_init
	movlw 2
	movwf _multi_protocol+19
LM64:
.stabn	0x44, 0, 455, LM64-_app_peripheral_init
	movlw 1
LM65:
.stabn	0x44, 0, 484, LM65-_app_peripheral_init
	movwf _multi_protocol+20
LM66:
.stabn	0x44, 0, 485, LM66-_app_peripheral_init
	movlw 26
	movwf _multi_protocol+21
LM67:
.stabn	0x44, 0, 455, LM67-_app_peripheral_init
	movlw 1
LM68:
.stabn	0x44, 0, 488, LM68-_app_peripheral_init
	movwf _multi_protocol+22
LM69:
.stabn	0x44, 0, 489, LM69-_app_peripheral_init
	movwf _multi_protocol+23
LM70:
.stabn	0x44, 0, 491, LM70-_app_peripheral_init
	clrf _multi_protocol+24
LM71:
.stabn	0x44, 0, 465, LM71-_app_peripheral_init
	movlw 3
LM72:
.stabn	0x44, 0, 492, LM72-_app_peripheral_init
	movwf _multi_protocol+25
LM73:
.stabn	0x44, 0, 455, LM73-_app_peripheral_init
	movlw 1
LM74:
.stabn	0x44, 0, 495, LM74-_app_peripheral_init
	movwf _multi_protocol+26
LM75:
.stabn	0x44, 0, 496, LM75-_app_peripheral_init
	movwf _multi_protocol+27
LM76:
.stabn	0x44, 0, 497, LM76-_app_peripheral_init
	movwf _multi_protocol+28
LM77:
.stabn	0x44, 0, 498, LM77-_app_peripheral_init
	movwf _multi_protocol+29
LM78:
.stabn	0x44, 0, 499, LM78-_app_peripheral_init
	movwf _multi_protocol+30
LM79:
.stabn	0x44, 0, 500, LM79-_app_peripheral_init
	movwf _multi_protocol+31
LM80:
.stabn	0x44, 0, 501, LM80-_app_peripheral_init
	movwf _multi_protocol+32
LM81:
.stabn	0x44, 0, 502, LM81-_app_peripheral_init
	movlw 20
	movwf _multi_protocol+33
LM82:
.stabn	0x44, 0, 455, LM82-_app_peripheral_init
	movlw 1
LM83:
.stabn	0x44, 0, 504, LM83-_app_peripheral_init
	movwf _multi_protocol+1
LM84:
.stabn	0x44, 0, 509, LM84-_app_peripheral_init
	call _wdt_init
LM85:
.stabn	0x44, 0, 512, LM85-_app_peripheral_init
	call _timer2_init
LM86:
.stabn	0x44, 0, 516, LM86-_app_peripheral_init
	call _uart_init
LM87:
.stabn	0x44, 0, 520, LM87-_app_peripheral_init
	call _mod_adc_convert_init
LM88:
.stabn	0x44, 0, 521, LM88-_app_peripheral_init
	return
Ltmp8:
Lfunc_end0:
Lfunc_end1:
LM89:
.stabn 0xc0,0,0, LM1-_app_peripheral_init
.stabs "SC8886_data_8:10;",0x80,0,0,_app_peripheral_init.temp.+0
.stabn 0xe0,0,0, LM88-_app_peripheral_init
.stabf LM89-_app_peripheral_init

	_peripheral_typec_init_sec .section rom
	.global	_peripheral_typec_init
_peripheral_typec_init:
Lfunc_begin2:
.stabs "peripheral_typec_init:f:16", 0x24,0,0,_peripheral_typec_init
.stabn 0xc0, 0, 0, _peripheral_typec_init
.stabn 0xe0, 0, 0, _peripheral_typec_init
LM90:
.stabn	0x44, 0, 524, LM90-_peripheral_typec_init
Lfunc_begin3:
	banksel 0
	movfw _peripheral_typec_init.args.+0
	movwf _peripheral_typec_init.temp.+0
	movfw _peripheral_typec_init.args.+1
LM91:
.stabn	0x44, 0, 546, LM91-_peripheral_typec_init
Ltmp9:
	movwf _peripheral_typec_init.temp.+1
	movlw LOW(_h_typeca+0)
Ltmp10:
	movwf _peripheral_typec_init.temp.+2
	xorwf _peripheral_typec_init.temp.+0, W
Ltmp11:
	movwf _peripheral_typec_init.temp.+2
	movlw HIGH8(_h_typeca+0)
Ltmp12:
	movwf _peripheral_typec_init.temp.+3
	xorwf _peripheral_typec_init.temp.+1, W
	iorwf _peripheral_typec_init.temp.+2, W
	sublw 0
	bne LBB1_2
LBB1_1:
LM92:
.stabn	0x44, 0, 548, LM92-_peripheral_typec_init
Ltmp13:
	movfw _peripheral_typec_init.temp.+0
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+1
	movwf FSR0H
	movlw 0
	movwf IND0
LM93:
.stabn	0x44, 0, 549, LM93-_peripheral_typec_init
	movlw 6
	addwf _peripheral_typec_init.temp.+0, W
LM94:
.stabn	0x44, 0, 548, LM94-_peripheral_typec_init
	movwf _peripheral_typec_init.temp.+2
	movlw 0
LM95:
.stabn	0x44, 0, 549, LM95-_peripheral_typec_init
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 3
	movwf IND0
LM96:
.stabn	0x44, 0, 550, LM96-_peripheral_typec_init
	goto LBB1_3
Ltmp14:
LBB1_2:
LM97:
.stabn	0x44, 0, 553, LM97-_peripheral_typec_init
	movfw _peripheral_typec_init.temp.+0
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+1
	movwf FSR0H
	movlw 1
	movwf IND0
LM98:
.stabn	0x44, 0, 554, LM98-_peripheral_typec_init
	movlw 6
	addwf _peripheral_typec_init.temp.+0, W
	movwf _peripheral_typec_init.temp.+2
	movlw 0
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 3
	movwf IND0
Ltmp15:
LBB1_3:
LM99:
.stabn	0x44, 0, 556, LM99-_peripheral_typec_init
	movlw 1
	addwf _peripheral_typec_init.temp.+0, W
	movwf _peripheral_typec_init.temp.+2
	movlw 0
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM100:
.stabn	0x44, 0, 559, LM100-_peripheral_typec_init
Ltmp16:
	movfwl _SYS_in_Sleep_F+0
Ltmp17:
	sublw 0
	beq LBB1_5
LBB1_4:
LM101:
.stabn	0x44, 0, 560, LM101-_peripheral_typec_init
Ltmp18:
	movlw 3
	addwf _peripheral_typec_init.temp.+0, W
	movwf _peripheral_typec_init.temp.+2
	movlw 0
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 0
	movwf IND0
	goto LBB1_6
LBB1_5:
LM102:
.stabn	0x44, 0, 562, LM102-_peripheral_typec_init
	movlw 3
	addwf _peripheral_typec_init.temp.+0, W
	movwf _peripheral_typec_init.temp.+2
	movlw 0
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
Ltmp19:
LBB1_6:
LM103:
.stabn	0x44, 0, 564, LM103-_peripheral_typec_init
	movlw 2
	addwf _peripheral_typec_init.temp.+0, W
	movwf _peripheral_typec_init.temp.+2
	movlw 0
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM104:
.stabn	0x44, 0, 565, LM104-_peripheral_typec_init
	movlw 5
	addwf _peripheral_typec_init.temp.+0, W
LM105:
.stabn	0x44, 0, 564, LM105-_peripheral_typec_init
	movwf _peripheral_typec_init.temp.+2
	movlw 0
LM106:
.stabn	0x44, 0, 565, LM106-_peripheral_typec_init
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 3
	movwf IND0
LM107:
.stabn	0x44, 0, 567, LM107-_peripheral_typec_init
	movlw 7
	addwf _peripheral_typec_init.temp.+0, W
LM108:
.stabn	0x44, 0, 564, LM108-_peripheral_typec_init
	movwf _peripheral_typec_init.temp.+2
	movlw 0
LM109:
.stabn	0x44, 0, 567, LM109-_peripheral_typec_init
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 0
	movwf IND0
LM110:
.stabn	0x44, 0, 568, LM110-_peripheral_typec_init
	movlw 8
	addwf _peripheral_typec_init.temp.+0, W
LM111:
.stabn	0x44, 0, 564, LM111-_peripheral_typec_init
	movwf _peripheral_typec_init.temp.+2
	movlw 0
LM112:
.stabn	0x44, 0, 568, LM112-_peripheral_typec_init
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 0xe8
	movwf IND0
	fsr0_add FSR0, 1
	movlw 3
	movwf IND0
LM113:
.stabn	0x44, 0, 570, LM113-_peripheral_typec_init
	movlw 10
	addwf _peripheral_typec_init.temp.+0, W
LM114:
.stabn	0x44, 0, 564, LM114-_peripheral_typec_init
	movwf _peripheral_typec_init.temp.+2
	movlw 0
LM115:
.stabn	0x44, 0, 570, LM115-_peripheral_typec_init
	addwfc _peripheral_typec_init.temp.+1, W
	movwf _peripheral_typec_init.temp.+3
	movfw _peripheral_typec_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_init.temp.+3
	movwf FSR0H
	movlw 0xfa
	movwf IND0
	fsr0_add FSR0, 1
	movlw 0
	movwf IND0
LM116:
.stabn	0x44, 0, 572, LM116-_peripheral_typec_init
	movfw _peripheral_typec_init.temp.+0
	movwf _typec_init.args.+0
	movfw _peripheral_typec_init.temp.+1
	movwf _typec_init.args.+1
	call _typec_init
LM117:
.stabn	0x44, 0, 573, LM117-_peripheral_typec_init
	return
Ltmp20:
Lfunc_end2:
Lfunc_end3:
.stabs "typec_param_input_t:T104=s12instance:105=106=10;;;,0,8;b_huawei_support:107=108=10;;;,8,16;b_vbus_isexist:109=110=10;;;,16,24;b_power_on:111=112=10;;;,24,32;b_low_battery:113=114=10;;;,32,40;current_source:115=116=10;;;,40,48;port_type:117=118=10;;;,48,56;b_tim_attachwaitsnk_en:119=120=10;;;,56,64;tim_attachwaitsnk_x1ms:121=122=2;;;,64,80;tim_drp_try:123=124=2;;;,80,96;;", 0x80, 0, 0, 0
.stabs "typec_param_output_t:T126=s5b_emarker_isexist:127=128=10;;;,0,8;state:129=130=10;;;,8,16;current_capacity:131=132=2;;;,16,32;cc_pin_sel:133=134=10;;;,32,40;;", 0x80, 0, 0, 0
.stabs "typec_param_private_t:T136=s18t_breaker:137=138=2;;;,0,16;auto_status:139=140=10;;;,16,24;auto_status_copy:141=142=10;;;,24,32;t_isexist:143=144=2;;;,32,48;t_isnotexist:145=146=2;;;,48,64;t_cc_magic:147=148=2;;;,64,80;state_copy:149=150=10;;;,80,88;t_try_src_times:151=152=10;;;,88,96;t_typec_halted:153=154=2;;;,96,112;cnt_typec_halted:155=156=10;;;,112,120;callback_switch_branch:157=158=10;;;,120,128;b_trysrc_insurance_n:159=160=10;;;,128,136;b_typec_hard_reset_lock:161=162=10;;;,136,144;;", 0x80, 0, 0, 0
.stabs "typec_handle_t:T102=s35input:103=104;;,0,96;output:125=126;;,96,136;private:135=136;;,136,280;;", 0x80, 0, 0, 0
LM118:
.stabn 0xc0,0,0, LM90-_peripheral_typec_init
.stabs "p_h_typec:100=*101=102;;",0x80,0,0,_peripheral_typec_init.args.+0
.stabn 0xe0,0,0, LM117-_peripheral_typec_init
.stabf LM118-_peripheral_typec_init

	_peripheral_pd_init_sec .section rom
	.global	_peripheral_pd_init
_peripheral_pd_init:
Lfunc_begin4:
.stabs "peripheral_pd_init:f:16", 0x24,0,0,_peripheral_pd_init
.stabn 0xc0, 0, 0, _peripheral_pd_init
.stabn 0xe0, 0, 0, _peripheral_pd_init
LM119:
.stabn	0x44, 0, 604, LM119-_peripheral_pd_init
Lfunc_begin5:
LM120:
.stabn	0x44, 0, 614, LM120-_peripheral_pd_init
	banksel 0
	bsf BSR,1
	clrf _h_pd+0
LM121:
.stabn	0x44, 0, 615, LM121-_peripheral_pd_init
	clrf _h_pd+3
LM122:
.stabn	0x44, 0, 616, LM122-_peripheral_pd_init
	clrf _h_pd+2
LM123:
.stabn	0x44, 0, 617, LM123-_peripheral_pd_init
	clrf _h_pd+5
LM124:
.stabn	0x44, 0, 618, LM124-_peripheral_pd_init
	clrf _h_pd+4
LM125:
.stabn	0x44, 0, 619, LM125-_peripheral_pd_init
	clrf _h_pd+1
LM126:
.stabn	0x44, 0, 621, LM126-_peripheral_pd_init
	movlw 82
	bsf BSR,0
	movwf _h_pd_of+3
	movlw 3
	movwf _h_pd_of+4
LM127:
.stabn	0x44, 0, 623, LM127-_peripheral_pd_init
	clrf _h_pd_of+5
LM128:
.stabn	0x44, 0, 625, LM128-_peripheral_pd_init
	movlw 0xc8
	movwf _h_pd_of+6
	clrf _h_pd_of+7
LM129:
.stabn	0x44, 0, 627, LM129-_peripheral_pd_init
	movlw 5
	bcf BSR,0
	movwf _h_pd+6
LM130:
.stabn	0x44, 0, 628, LM130-_peripheral_pd_init
	movlw 6
	movwf _h_pd+7
LM131:
.stabn	0x44, 0, 629, LM131-_peripheral_pd_init
	movlw 2
	movwf _h_pd+36
LM132:
.stabn	0x44, 0, 631, LM132-_peripheral_pd_init
Ltmp21:
	movlw 1
	bcf BSR,1
	movwf _FSR0H+0
	movlw LOW(_pdo_src_list+0)
	movwf _FSR0+0
	movlw HIGH8(_pdo_src_list_h+0)
	movwf _EADRH+0
	movlw LOW(_pdo_src_list_h+0)
	movwf _EADRL+0
	movlw 56
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp22:
LM133:
.stabn	0x44, 0, 632, LM133-_peripheral_pd_init
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _peripheral_pd_init.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _peripheral_pd_init.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp23:
LM134:
.stabn	0x44, 0, 633, LM134-_peripheral_pd_init
	movlw LOW(_h_pd+0)
	addlw 37
	movwf _peripheral_pd_init.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _peripheral_pd_init.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sinkcap+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sinkcap+0)
	movwf _EADRL+0
	movlw 8
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp24:
LM135:
.stabn	0x44, 0, 634, LM135-_peripheral_pd_init
	movlw LOW(_pdo_sinkcap+0)
	addlw 4
	movwf _peripheral_pd_init.temp.+0
	movlw HIGH8(_pdo_sinkcap+0)
	addlwc 0
	movwf _peripheral_pd_init.temp.+1
	movlw LOW(_h_pd+0)
	addlw 65
	movwf _peripheral_pd_init.temp.+2
	movlw 5
	movwf _FSR0H+0
	movfw _peripheral_pd_init.temp.+2
	movwf _FSR0+0
	movfw _peripheral_pd_init.temp.+1
	movwf _EADRH+0
	movfw _peripheral_pd_init.temp.+0
	movwf _EADRL+0
	movlw 4
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp25:
LM136:
.stabn	0x44, 0, 643, LM136-_peripheral_pd_init
	call _pd_init
LM137:
.stabn	0x44, 0, 645, LM137-_peripheral_pd_init
	movlw 3
LM138:
.stabn	0x44, 0, 644, LM138-_peripheral_pd_init
	bsf BSR,1
	movwf _h_pd+107
LM139:
.stabn	0x44, 0, 645, LM139-_peripheral_pd_init
	movwf _h_pd+108
LM140:
.stabn	0x44, 0, 647, LM140-_peripheral_pd_init
	movfw _h_pd+107
	movwfl _fwlib_pd_electric_set.args.+0
	movfw _h_pd+108
	movwfl _fwlib_pd_electric_set.args.+1
LM141:
.stabn	0x44, 0, 646, LM141-_peripheral_pd_init
	movlw 4
	movwf _h_pd+109
LM142:
.stabn	0x44, 0, 647, LM142-_peripheral_pd_init
	movwfl _fwlib_pd_electric_set.args.+2
	call _fwlib_pd_electric_set
LM143:
.stabn	0x44, 0, 670, LM143-_peripheral_pd_init
	return
Ltmp26:
Lfunc_end4:
Lfunc_end5:
LM144:
.stabf LM144-_peripheral_pd_init

	_peripheral_typec_UFP_init_sec .section rom
	.global	_peripheral_typec_UFP_init
_peripheral_typec_UFP_init:
Lfunc_begin6:
.stabs "peripheral_typec_UFP_init:f:16", 0x24,0,0,_peripheral_typec_UFP_init
.stabn 0xc0, 0, 0, _peripheral_typec_UFP_init
.stabn 0xe0, 0, 0, _peripheral_typec_UFP_init
LM145:
.stabn	0x44, 0, 576, LM145-_peripheral_typec_UFP_init
Lfunc_begin7:
	banksel 0
	movfw _peripheral_typec_UFP_init.args.+1
LM146:
.stabn	0x44, 0, 577, LM146-_peripheral_typec_UFP_init
Ltmp27:
	movwf _peripheral_typec_UFP_init.temp.+1
	movfw _peripheral_typec_UFP_init.args.+0
	movwf _peripheral_typec_UFP_init.temp.+0
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_UFP_init.args.+1
	movwf FSR0H
	movlw 0
	movwf IND0
LM147:
.stabn	0x44, 0, 579, LM147-_peripheral_typec_UFP_init
	movlw 1
	addwf _peripheral_typec_UFP_init.temp.+0, W
LM148:
.stabn	0x44, 0, 577, LM148-_peripheral_typec_UFP_init
	movwf _peripheral_typec_UFP_init.temp.+2
	movlw 0
LM149:
.stabn	0x44, 0, 579, LM149-_peripheral_typec_UFP_init
	addwfc _peripheral_typec_UFP_init.temp.+1, W
	movwf _peripheral_typec_UFP_init.temp.+3
	movfw _peripheral_typec_UFP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_UFP_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM150:
.stabn	0x44, 0, 581, LM150-_peripheral_typec_UFP_init
	movlw 2
	addwf _peripheral_typec_UFP_init.temp.+0, W
LM151:
.stabn	0x44, 0, 577, LM151-_peripheral_typec_UFP_init
	movwf _peripheral_typec_UFP_init.temp.+2
	movlw 0
LM152:
.stabn	0x44, 0, 581, LM152-_peripheral_typec_UFP_init
	addwfc _peripheral_typec_UFP_init.temp.+1, W
	movwf _peripheral_typec_UFP_init.temp.+3
	movfw _peripheral_typec_UFP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_UFP_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM153:
.stabn	0x44, 0, 584, LM153-_peripheral_typec_UFP_init
	movlw 5
	addwf _peripheral_typec_UFP_init.temp.+0, W
LM154:
.stabn	0x44, 0, 577, LM154-_peripheral_typec_UFP_init
	movwf _peripheral_typec_UFP_init.temp.+2
	movlw 0
LM155:
.stabn	0x44, 0, 584, LM155-_peripheral_typec_UFP_init
	addwfc _peripheral_typec_UFP_init.temp.+1, W
	movwf _peripheral_typec_UFP_init.temp.+3
	movfw _peripheral_typec_UFP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_UFP_init.temp.+3
	movwf FSR0H
	movlw 0
	movwf IND0
LM156:
.stabn	0x44, 0, 585, LM156-_peripheral_typec_UFP_init
	movlw 6
	addwf _peripheral_typec_UFP_init.temp.+0, W
LM157:
.stabn	0x44, 0, 577, LM157-_peripheral_typec_UFP_init
	movwf _peripheral_typec_UFP_init.temp.+2
	movlw 0
LM158:
.stabn	0x44, 0, 585, LM158-_peripheral_typec_UFP_init
	addwfc _peripheral_typec_UFP_init.temp.+1, W
	movwf _peripheral_typec_UFP_init.temp.+3
	movfw _peripheral_typec_UFP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_UFP_init.temp.+3
	movwf FSR0H
	movlw 0
	movwf IND0
LM159:
.stabn	0x44, 0, 586, LM159-_peripheral_typec_UFP_init
	movfw _peripheral_typec_UFP_init.temp.+0
	movwf _typec_init.args.+0
	movfw _peripheral_typec_UFP_init.temp.+1
	movwf _typec_init.args.+1
	call _typec_init
LM160:
.stabn	0x44, 0, 587, LM160-_peripheral_typec_UFP_init
	return
Ltmp28:
Lfunc_end6:
Lfunc_end7:
LM161:
.stabn 0xc0,0,0, LM145-_peripheral_typec_UFP_init
.stabs "p_h_typec:163=*164=102;;",0x80,0,0,_peripheral_typec_UFP_init.args.+0
.stabn 0xe0,0,0, LM160-_peripheral_typec_UFP_init
.stabf LM161-_peripheral_typec_UFP_init

	_peripheral_typec_DRP_init_sec .section rom
	.global	_peripheral_typec_DRP_init
_peripheral_typec_DRP_init:
Lfunc_begin8:
.stabs "peripheral_typec_DRP_init:f:16", 0x24,0,0,_peripheral_typec_DRP_init
.stabn 0xc0, 0, 0, _peripheral_typec_DRP_init
.stabn 0xe0, 0, 0, _peripheral_typec_DRP_init
LM162:
.stabn	0x44, 0, 590, LM162-_peripheral_typec_DRP_init
Lfunc_begin9:
	banksel 0
	movfw _peripheral_typec_DRP_init.args.+1
LM163:
.stabn	0x44, 0, 591, LM163-_peripheral_typec_DRP_init
Ltmp29:
	movwf _peripheral_typec_DRP_init.temp.+1
	movfw _peripheral_typec_DRP_init.args.+0
	movwf _peripheral_typec_DRP_init.temp.+0
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_DRP_init.args.+1
	movwf FSR0H
	movlw 0
	movwf IND0
LM164:
.stabn	0x44, 0, 593, LM164-_peripheral_typec_DRP_init
	movlw 1
	addwf _peripheral_typec_DRP_init.temp.+0, W
LM165:
.stabn	0x44, 0, 591, LM165-_peripheral_typec_DRP_init
	movwf _peripheral_typec_DRP_init.temp.+2
	movlw 0
LM166:
.stabn	0x44, 0, 593, LM166-_peripheral_typec_DRP_init
	addwfc _peripheral_typec_DRP_init.temp.+1, W
	movwf _peripheral_typec_DRP_init.temp.+3
	movfw _peripheral_typec_DRP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_DRP_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM167:
.stabn	0x44, 0, 595, LM167-_peripheral_typec_DRP_init
	movlw 2
	addwf _peripheral_typec_DRP_init.temp.+0, W
LM168:
.stabn	0x44, 0, 591, LM168-_peripheral_typec_DRP_init
	movwf _peripheral_typec_DRP_init.temp.+2
	movlw 0
LM169:
.stabn	0x44, 0, 595, LM169-_peripheral_typec_DRP_init
	addwfc _peripheral_typec_DRP_init.temp.+1, W
	movwf _peripheral_typec_DRP_init.temp.+3
	movfw _peripheral_typec_DRP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_DRP_init.temp.+3
	movwf FSR0H
	movlw 1
	movwf IND0
LM170:
.stabn	0x44, 0, 596, LM170-_peripheral_typec_DRP_init
	movlw 5
	addwf _peripheral_typec_DRP_init.temp.+0, W
LM171:
.stabn	0x44, 0, 591, LM171-_peripheral_typec_DRP_init
	movwf _peripheral_typec_DRP_init.temp.+2
	movlw 0
LM172:
.stabn	0x44, 0, 596, LM172-_peripheral_typec_DRP_init
	addwfc _peripheral_typec_DRP_init.temp.+1, W
	movwf _peripheral_typec_DRP_init.temp.+3
	movfw _peripheral_typec_DRP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_DRP_init.temp.+3
	movwf FSR0H
	movlw 3
	movwf IND0
LM173:
.stabn	0x44, 0, 597, LM173-_peripheral_typec_DRP_init
	movlw 6
	addwf _peripheral_typec_DRP_init.temp.+0, W
LM174:
.stabn	0x44, 0, 591, LM174-_peripheral_typec_DRP_init
	movwf _peripheral_typec_DRP_init.temp.+2
	movlw 0
LM175:
.stabn	0x44, 0, 597, LM175-_peripheral_typec_DRP_init
	addwfc _peripheral_typec_DRP_init.temp.+1, W
	movwf _peripheral_typec_DRP_init.temp.+3
	movfw _peripheral_typec_DRP_init.temp.+2
	movwf FSR0
	fsr0_add FSR0, 0
	movfw _peripheral_typec_DRP_init.temp.+3
	movwf FSR0H
	movlw 3
	movwf IND0
LM176:
.stabn	0x44, 0, 600, LM176-_peripheral_typec_DRP_init
	movfw _peripheral_typec_DRP_init.temp.+0
	movwf _typec_init.args.+0
	movfw _peripheral_typec_DRP_init.temp.+1
	movwf _typec_init.args.+1
	call _typec_init
LM177:
.stabn	0x44, 0, 601, LM177-_peripheral_typec_DRP_init
	return
Ltmp30:
Lfunc_end8:
Lfunc_end9:
LM178:
.stabn 0xc0,0,0, LM162-_peripheral_typec_DRP_init
.stabs "p_h_typec:165=*166=102;;",0x80,0,0,_peripheral_typec_DRP_init.args.+0
.stabn 0xe0,0,0, LM177-_peripheral_typec_DRP_init
.stabf LM178-_peripheral_typec_DRP_init

	_Start_data_init_sec .section rom
	.global	_Start_data_init
_Start_data_init:
Lfunc_begin10:
.stabs "Start_data_init:f:16", 0x24,0,0,_Start_data_init
.stabn 0xc0, 0, 0, _Start_data_init
.stabn 0xe0, 0, 0, _Start_data_init
LM179:
.stabn	0x44, 0, 685, LM179-_Start_data_init
Lfunc_begin11:
LM180:
.stabn	0x44, 0, 686, LM180-_Start_data_init
	banksel 0
	clrf _LedData_OK+0
LM181:
.stabn	0x44, 0, 687, LM181-_Start_data_init
	clrf _BatCap_Value+0
LM182:
.stabn	0x44, 0, 688, LM182-_Start_data_init
	clrf _BatCap_Value_Be+0
LM183:
.stabn	0x44, 0, 691, LM183-_Start_data_init
	clrf _Err_diply_check_time_cnt+0
LM184:
.stabn	0x44, 0, 692, LM184-_Start_data_init
	bsf BSR,1
	clrf _CA_IN_Flage+0
LM185:
.stabn	0x44, 0, 693, LM185-_Start_data_init
	clrf _CB_IN_Flage+0
LM186:
.stabn	0x44, 0, 694, LM186-_Start_data_init
	clrf _MirB_IN_Flage+0
LM187:
.stabn	0x44, 0, 695, LM187-_Start_data_init
	banksel _Mode_charge_adc
	clrf _Mode_charge_adc+0
LM188:
.stabn	0x44, 0, 696, LM188-_Start_data_init
	bcf BSR,0
	clrf _Charge_Start+0
LM189:
.stabn	0x44, 0, 697, LM189-_Start_data_init
	clrf _PD_curr_Pro_cnt+0
LM190:
.stabn	0x44, 0, 698, LM190-_Start_data_init
	clrf _USBA_curr_Pro_cnt+0
LM191:
.stabn	0x44, 0, 701, LM191-_Start_data_init
	call _Flash_Read_Deal
LM192:
.stabn	0x44, 0, 702, LM192-_Start_data_init
	movlw 1
	movwfl _Self_inspe_CNT+0
LM193:
.stabn	0x44, 0, 703, LM193-_Start_data_init
Ltmp31:
	movfw _Bat_low_Cnt+0
Ltmp32:
	sublw 30
	bgt LBB5_2
LBB5_1:
LM194:
.stabn	0x44, 0, 705, LM194-_Start_data_init
Ltmp33:
	movlw 40
	movwf _Bat_low_Cnt+0
LM195:
.stabn	0x44, 0, 706, LM195-_Start_data_init
	movlw 1
	movwf _Err_diply+0
LM196:
.stabn	0x44, 0, 707, LM196-_Start_data_init
	clrf _Err_diply_check_time_cnt+0
LM197:
.stabn	0x44, 0, 708, LM197-_Start_data_init
	movlw 21
	movwf _discharge_displed+0
LM198:
.stabn	0x44, 0, 706, LM198-_Start_data_init
	movlw 1
LM199:
.stabn	0x44, 0, 709, LM199-_Start_data_init
	banksel _LCD_display_3S_Cnt
	movwf _LCD_display_3S_Cnt+0
	clrf _LCD_display_3S_Cnt+1
LM200:
.stabn	0x44, 0, 710, LM200-_Start_data_init
	goto LBB5_3
Ltmp34:
LBB5_2:
LM201:
.stabn	0x44, 0, 713, LM201-_Start_data_init
	clrf _Err_diply+0
LM202:
.stabn	0x44, 0, 714, LM202-_Start_data_init
	clrf _Err_diply_check_time_cnt+0
LM203:
.stabn	0x44, 0, 715, LM203-_Start_data_init
	movlw 1
	movwf _discharge_displed+0
LM204:
.stabn	0x44, 0, 716, LM204-_Start_data_init
	movlw 2
	movwf _UTX_8_data1+0
Ltmp35:
LBB5_3:
LM205:
.stabn	0x44, 0, 720, LM205-_Start_data_init
	banksel _R_DisCharge_SmallCurCnt
	clrf _R_DisCharge_SmallCurCnt+0
LM206:
.stabn	0x44, 0, 721, LM206-_Start_data_init
	clrf _Discharge_MinCur+0
LM207:
.stabn	0x44, 0, 722, LM207-_Start_data_init
	clrf _sleepcnt+0
LM208:
.stabn	0x44, 0, 723, LM208-_Start_data_init
	bsf BSR,0
	clrf _Temp_car_ST+0
LM209:
.stabn	0x44, 0, 724, LM209-_Start_data_init
	clrf _car_ST+0
LM210:
.stabn	0x44, 0, 725, LM210-_Start_data_init
	clrf _f_car_jump+0
LM211:
.stabn	0x44, 0, 727, LM211-_Start_data_init
	movlw 1
LM212:
.stabn	0x44, 0, 726, LM212-_Start_data_init
	bcf BSR,0
	movwf _Temp+1
LM213:
.stabn	0x44, 0, 727, LM213-_Start_data_init
	movwf _Temp+4
LM214:
.stabn	0x44, 0, 728, LM214-_Start_data_init
	bsf BSR,0
	clrf _V_NO_Cha_flage+0
LM215:
.stabn	0x44, 0, 729, LM215-_Start_data_init
	bcf _user_flag+0, 2
LM216:
.stabn	0x44, 0, 730, LM216-_Start_data_init
	clrf _V_NO_BAT_Charge+0
LM217:
.stabn	0x44, 0, 731, LM217-_Start_data_init
	clrf _Bat_Protest_cnt+0
LM218:
.stabn	0x44, 0, 732, LM218-_Start_data_init
	clrf _bat_low_pwm_Cnt+0
LM219:
.stabn	0x44, 0, 733, LM219-_Start_data_init
	clrf _bat_full_pwm_do+0
LM220:
.stabn	0x44, 0, 734, LM220-_Start_data_init
	clrf _bat_full_pwm_Cnt+0
LM221:
.stabn	0x44, 0, 735, LM221-_Start_data_init
	clrf _bat_full_8hour_Cnt+0
LM222:
.stabn	0x44, 0, 736, LM222-_Start_data_init
	clrf _Sleep_up_shor_do+0
LM223:
.stabn	0x44, 0, 737, LM223-_Start_data_init
	clrf _Charge_low_power_F+0
LM224:
.stabn	0x44, 0, 739, LM224-_Start_data_init
	clrf _SOS_lighting_stop+0
LM225:
.stabn	0x44, 0, 727, LM225-_Start_data_init
	movlw 1
LM226:
.stabn	0x44, 0, 740, LM226-_Start_data_init
	movwf _Sleep_up_close_Car_ignition+0
LM227:
.stabn	0x44, 0, 741, LM227-_Start_data_init
	clrf _bat_full_do_to_charge+0
LM228:
.stabn	0x44, 0, 742, LM228-_Start_data_init
	clrf _statusKeyFlag+0
LM229:
.stabn	0x44, 0, 743, LM229-_Start_data_init
	clrf _Be_statusKeyFlag+0
LM230:
.stabn	0x44, 0, 744, LM230-_Start_data_init
	clrf _Into_IAP_Flage+0
LM231:
.stabn	0x44, 0, 745, LM231-_Start_data_init
	clrf _WHITE_ON+0
LM232:
.stabn	0x44, 0, 746, LM232-_Start_data_init
	clrf _RED_ON+0
LM233:
.stabn	0x44, 0, 747, LM233-_Start_data_init
	clrf _SOS_LEVEL+0
LM234:
.stabn	0x44, 0, 748, LM234-_Start_data_init
	clrf _TYPE_CA_18W_Flage+0
LM235:
.stabn	0x44, 0, 749, LM235-_Start_data_init
	clrf _Bat_low_sleep_flage+0
LM236:
.stabn	0x44, 0, 750, LM236-_Start_data_init
	banksel _CA_rutren
	clrf _CA_rutren+0
LM237:
.stabn	0x44, 0, 751, LM237-_Start_data_init
	banksel _CA_Test_do_no_Slepp
	clrf _CA_Test_do_no_Slepp+0
LM238:
.stabn	0x44, 0, 753, LM238-_Start_data_init
	bcf BSR,0
	clrf _TX_time_change+0
	clrf _TX_time_change+1
LM239:
.stabn	0x44, 0, 755, LM239-_Start_data_init
	bsf BSR,0
	clrf _WHITE_ON+0
LM240:
.stabn	0x44, 0, 756, LM240-_Start_data_init
	clrf _RED_ON+0
LM241:
.stabn	0x44, 0, 757, LM241-_Start_data_init
	clrf _SOS_LEVEL+0
LM242:
.stabn	0x44, 0, 758, LM242-_Start_data_init
	clrf _TCA_EN_ON+0
LM243:
.stabn	0x44, 0, 759, LM243-_Start_data_init
	clrf _CAR_LEVEL+0
LM244:
.stabn	0x44, 0, 760, LM244-_Start_data_init
	clrf _LED_STATU+0
LM245:
.stabn	0x44, 0, 761, LM245-_Start_data_init
	clrf _LED_LEVEL+0
LM246:
.stabn	0x44, 0, 762, LM246-_Start_data_init
	clrf _f_err_ot+0
LM247:
.stabn	0x44, 0, 763, LM247-_Start_data_init
	banksel _Car_lighting_bright
	clrf _Car_lighting_bright+0
LM248:
.stabn	0x44, 0, 764, LM248-_Start_data_init
	banksel _SYS_in_Sleep_F
	clrf _SYS_in_Sleep_F+0
LM249:
.stabn	0x44, 0, 765, LM249-_Start_data_init
	clrf _Foece_Sleep_Time_S+0
LM250:
.stabn	0x44, 0, 766, LM250-_Start_data_init
	clrf _Foece_Sleep_Time_Min+0
	clrf _Foece_Sleep_Time_Min+1
LM251:
.stabn	0x44, 0, 767, LM251-_Start_data_init
	clrf _Foece_Sleep_Time_Mon+0
LM252:
.stabn	0x44, 0, 773, LM252-_Start_data_init
	clrf _iap_detect+0
LM253:
.stabn	0x44, 0, 774, LM253-_Start_data_init
	clrf _iap_detect+1
LM254:
.stabn	0x44, 0, 775, LM254-_Start_data_init
	clrf _iap_detect+2
LM255:
.stabn	0x44, 0, 776, LM255-_Start_data_init
	clrf _Charge_OCP_Flage+0
LM256:
.stabn	0x44, 0, 777, LM256-_Start_data_init
	clrf _Charge_OCP_cnt+0
LM257:
.stabn	0x44, 0, 778, LM257-_Start_data_init
	clrf _Charge_Close_En_cnt+0
LM258:
.stabn	0x44, 0, 779, LM258-_Start_data_init
	clrf _hour2_dis_flage+0
LM259:
.stabn	0x44, 0, 780, LM259-_Start_data_init
	clrf _hour2_dis_cnt+0
	clrf _hour2_dis_cnt+1
LM260:
.stabn	0x44, 0, 781, LM260-_Start_data_init
	clrf _ADD_IBAT_cnt+0
	clrf _ADD_IBAT_cnt+1
LM261:
.stabn	0x44, 0, 783, LM261-_Start_data_init
	clrf _USBA_EN_BK+0
LM262:
.stabn	0x44, 0, 727, LM262-_Start_data_init
	movlw 1
LM263:
.stabn	0x44, 0, 784, LM263-_Start_data_init
	movwf _Charge_Bat_Start_Cnt+0
LM264:
.stabn	0x44, 0, 786, LM264-_Start_data_init
	movwfl _F_A1_ON+0
LM265:
.stabn	0x44, 0, 787, LM265-_Start_data_init
	clrf _UP_data_2402_Flage+0
LM266:
.stabn	0x44, 0, 788, LM266-_Start_data_init
	clrf _CA_IN_Frist_No_Soure+0
LM267:
.stabn	0x44, 0, 789, LM267-_Start_data_init
	clrf _Frist_Bat_Connect+0
LM268:
.stabn	0x44, 0, 790, LM268-_Start_data_init
	clrf _Charge_HIG_Vbat_F+0
LM269:
.stabn	0x44, 0, 791, LM269-_Start_data_init
	clrf _DIS_low_bater_Cnt+0
LM270:
.stabn	0x44, 0, 793, LM270-_Start_data_init
	bcf BSR,0
	clrf _Bat_low_RE_Cnt+0
LM271:
.stabn	0x44, 0, 795, LM271-_Start_data_init
	banksel _Car_Cont_NG_Flage
	clrf _Car_Cont_NG_Flage+0
LM272:
.stabn	0x44, 0, 797, LM272-_Start_data_init
	clrf _LED_test_mode_Cnt2+0
LM273:
.stabn	0x44, 0, 798, LM273-_Start_data_init
	clrf _LED_test_mode_Cnt+0
LM274:
.stabn	0x44, 0, 799, LM274-_Start_data_init
	banksel 0
	return
Ltmp36:
Lfunc_end10:
Lfunc_end11:
LM275:
.stabf LM275-_Start_data_init

	_Flash_Read_Deal_sec .section rom
	.global	_Flash_Read_Deal
_Flash_Read_Deal:
Lfunc_begin12:
.stabs "Flash_Read_Deal:f:16", 0x24,0,0,_Flash_Read_Deal
.stabn 0xc0, 0, 0, _Flash_Read_Deal
.stabn 0xe0, 0, 0, _Flash_Read_Deal
LM276:
.stabn	0x44, 0, 3100, LM276-_Flash_Read_Deal
Lfunc_begin13:
LM277:
.stabn	0x44, 0, 3111, LM277-_Flash_Read_Deal
	banksel 0
	movlw 1
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwfl _Flash_Bat_RCR_data+0
LM278:
.stabn	0x44, 0, 3112, LM278-_Flash_Read_Deal
Ltmp37:
	sublw 0xaa
	beq LBB6_2
LBB6_1:
	movfwl _Flash_Bat_RCR_data+0
Ltmp38:
	sublw 85
	bne LBB6_9
LBB6_2:
LM279:
.stabn	0x44, 0, 3116, LM279-_Flash_Read_Deal
Ltmp39:
	movlw 2
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwfl _Flash_Bat_Value_data+0
LM280:
.stabn	0x44, 0, 3117, LM280-_Flash_Read_Deal
	movlw 3
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwfl _Flash_Bat_Vol_data+0
LM281:
.stabn	0x44, 0, 3118, LM281-_Flash_Read_Deal
	movlw 4
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwf _Bat_low_Cnt+0
LM282:
.stabn	0x44, 0, 3123, LM282-_Flash_Read_Deal
	clrf _Power_Value_Update+0
LM283:
.stabn	0x44, 0, 3124, LM283-_Flash_Read_Deal
	movlw 1
	movwfl _Flash_bat_Vol_Start_check+0
LM284:
.stabn	0x44, 0, 3131, LM284-_Flash_Read_Deal
	movlw 6
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwfl _BAT_cnt_recor+0
LM285:
.stabn	0x44, 0, 3133, LM285-_Flash_Read_Deal
	sublw 0
	beq LBB6_7
LBB6_3:
LM286:
.stabn	0x44, 0, 3136, LM286-_Flash_Read_Deal
Ltmp40:
	movfwl _BAT_cnt_recor+0
Ltmp41:
	sublw 19
	bgt LBB6_5
LBB6_4:
LM287:
.stabn	0x44, 0, 3137, LM287-_Flash_Read_Deal
Ltmp42:
	banksel _BAT_cnt_recor
	clrf _BAT_cnt_recor+0
	goto LBB6_6
LBB6_5:
LM288:
.stabn	0x44, 0, 3139, LM288-_Flash_Read_Deal
	banksel _BAT_cnt_recor
	incf _BAT_cnt_recor+0, F
Ltmp43:
LBB6_6:
LM289:
.stabn	0x44, 0, 3140, LM289-_Flash_Read_Deal
	goto LBB6_8
Ltmp44:
LBB6_7:
LM290:
.stabn	0x44, 0, 3143, LM290-_Flash_Read_Deal
	movlw 1
	movwfl _BAT_cnt_recor+0
Ltmp45:
LBB6_8:
LM291:
.stabn	0x44, 0, 3145, LM291-_Flash_Read_Deal
	goto LBB6_10
Ltmp46:
LBB6_9:
LM292:
.stabn	0x44, 0, 3148, LM292-_Flash_Read_Deal
	bsf BSR,0
	clrf _Flash_Bat_Value_data+0
LM293:
.stabn	0x44, 0, 3149, LM293-_Flash_Read_Deal
	clrf _Flash_Bat_Vol_data+0
LM294:
.stabn	0x44, 0, 3150, LM294-_Flash_Read_Deal
	bcf BSR,0
	clrf _Bat_low_Cnt+0
LM295:
.stabn	0x44, 0, 3151, LM295-_Flash_Read_Deal
	movlw 1
	movwf _Power_Value_Update+0
LM296:
.stabn	0x44, 0, 3152, LM296-_Flash_Read_Deal
	bsf BSR,0
	clrf _Flash_bat_Vol_Start_check+0
Ltmp47:
LBB6_10:
LM297:
.stabn	0x44, 0, 3154, LM297-_Flash_Read_Deal
	banksel _Flash_Bat_Value_data
	movfw _Flash_Bat_Value_data+0
	bcf BSR,0
	movwf _BatCap_Value+0
LM298:
.stabn	0x44, 0, 3156, LM298-_Flash_Read_Deal
	movlw 7
	movwf _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwfl _Change_lauge_Flage+0
LM299:
.stabn	0x44, 0, 3157, LM299-_Flash_Read_Deal
	sublw 4
	bgt LBB6_12
LBB6_11:
LM300:
.stabn	0x44, 0, 3158, LM300-_Flash_Read_Deal
Ltmp48:
	movlw 1
	movwfl _Change_lauge_Flage+0
Ltmp49:
LBB6_12:
LM301:
.stabn	0x44, 0, 3160, LM301-_Flash_Read_Deal
	movfw _BatCap_Value+0
Ltmp50:
	sublw 101
	bgt LBB6_14
LBB6_13:
LM302:
.stabn	0x44, 0, 3162, LM302-_Flash_Read_Deal
Ltmp51:
	clrf _BatCap_Value+0
LM303:
.stabn	0x44, 0, 3163, LM303-_Flash_Read_Deal
	bsf BSR,0
	clrf _Flash_Bat_Value_data+0
LM304:
.stabn	0x44, 0, 3164, LM304-_Flash_Read_Deal
	clrf _Flash_Bat_Vol_data+0
LM305:
.stabn	0x44, 0, 3165, LM305-_Flash_Read_Deal
	bcf BSR,0
	clrf _Bat_low_Cnt+0
LM306:
.stabn	0x44, 0, 3166, LM306-_Flash_Read_Deal
	movlw 1
	movwf _Power_Value_Update+0
LM307:
.stabn	0x44, 0, 3167, LM307-_Flash_Read_Deal
	bsf BSR,0
	clrf _Flash_bat_Vol_Start_check+0
Ltmp52:
LBB6_14:
LM308:
.stabn	0x44, 0, 3182, LM308-_Flash_Read_Deal
	movlw 10
	banksel _delay_ms.args.
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM309:
.stabn	0x44, 0, 3183, LM309-_Flash_Read_Deal
	movlw 1
	movwf _iic_transmit_24C02_byte.args.+0
	movlw 85
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM310:
.stabn	0x44, 0, 3184, LM310-_Flash_Read_Deal
	movlw 10
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM311:
.stabn	0x44, 0, 3185, LM311-_Flash_Read_Deal
	return
Ltmp53:
Lfunc_end12:
Lfunc_end13:
LM312:
.stabn 0xc0,0,0, LM277-_Flash_Read_Deal
.stabs "temp8data:10;",0x80,0,0,_Flash_Read_Deal.temp.+0
.stabn 0xe0,0,0, LM311-_Flash_Read_Deal
.stabf LM312-_Flash_Read_Deal

	_Sleep_up_data_init_sec .section rom
	.global	_Sleep_up_data_init
_Sleep_up_data_init:
Lfunc_begin14:
.stabs "Sleep_up_data_init:f:16", 0x24,0,0,_Sleep_up_data_init
.stabn 0xc0, 0, 0, _Sleep_up_data_init
.stabn 0xe0, 0, 0, _Sleep_up_data_init
LM313:
.stabn	0x44, 0, 801, LM313-_Sleep_up_data_init
Lfunc_begin15:
LM314:
.stabn	0x44, 0, 802, LM314-_Sleep_up_data_init
	banksel 0
	clrf _Err_diply+0
LM315:
.stabn	0x44, 0, 803, LM315-_Sleep_up_data_init
	clrf _Err_diply_check_time_cnt+0
LM316:
.stabn	0x44, 0, 805, LM316-_Sleep_up_data_init
	clrf _R_DisCharge_SmallCurCnt+0
LM317:
.stabn	0x44, 0, 806, LM317-_Sleep_up_data_init
	clrf _R_DisCharge_OutTime+0
LM318:
.stabn	0x44, 0, 815, LM318-_Sleep_up_data_init
	bsf BSR,0
	clrf _Temp_car_ST+0
LM319:
.stabn	0x44, 0, 816, LM319-_Sleep_up_data_init
	clrf _car_ST+0
LM320:
.stabn	0x44, 0, 817, LM320-_Sleep_up_data_init
	clrf _f_car_jump+0
LM321:
.stabn	0x44, 0, 820, LM321-_Sleep_up_data_init
	movlw 1
	movwfl _Temp+4
LM322:
.stabn	0x44, 0, 822, LM322-_Sleep_up_data_init
	clrf _V_NO_Cha_flage+0
LM323:
.stabn	0x44, 0, 823, LM323-_Sleep_up_data_init
	bcf _user_flag+0, 2
LM324:
.stabn	0x44, 0, 824, LM324-_Sleep_up_data_init
	clrf _Bat_Protest_cnt+0
LM325:
.stabn	0x44, 0, 825, LM325-_Sleep_up_data_init
	clrf _V_NO_BAT_Charge+0
LM326:
.stabn	0x44, 0, 826, LM326-_Sleep_up_data_init
	clrf _bat_low_pwm_Cnt+0
LM327:
.stabn	0x44, 0, 827, LM327-_Sleep_up_data_init
	clrf _bat_full_pwm_do+0
LM328:
.stabn	0x44, 0, 828, LM328-_Sleep_up_data_init
	clrf _bat_full_pwm_Cnt+0
LM329:
.stabn	0x44, 0, 829, LM329-_Sleep_up_data_init
	clrf _bat_full_8hour_Cnt+0
LM330:
.stabn	0x44, 0, 830, LM330-_Sleep_up_data_init
	clrf _Charge_low_power_F+0
LM331:
.stabn	0x44, 0, 820, LM331-_Sleep_up_data_init
	movlw 1
LM332:
.stabn	0x44, 0, 831, LM332-_Sleep_up_data_init
	movwf _Sleep_up_close_Car_ignition+0
LM333:
.stabn	0x44, 0, 833, LM333-_Sleep_up_data_init
	clrf _bat_full_do_to_charge+0
LM334:
.stabn	0x44, 0, 834, LM334-_Sleep_up_data_init
	clrf _statusKeyFlag+0
LM335:
.stabn	0x44, 0, 835, LM335-_Sleep_up_data_init
	clrf _Be_statusKeyFlag+0
LM336:
.stabn	0x44, 0, 836, LM336-_Sleep_up_data_init
	clrf _Into_IAP_Flage+0
LM337:
.stabn	0x44, 0, 837, LM337-_Sleep_up_data_init
	clrf _TYPE_CA_18W_Flage+0
LM338:
.stabn	0x44, 0, 838, LM338-_Sleep_up_data_init
	clrf _Bat_low_sleep_flage+0
LM339:
.stabn	0x44, 0, 839, LM339-_Sleep_up_data_init
	banksel _CA_rutren
	clrf _CA_rutren+0
LM340:
.stabn	0x44, 0, 840, LM340-_Sleep_up_data_init
	banksel _CA_Test_do_no_Slepp
	clrf _CA_Test_do_no_Slepp+0
LM341:
.stabn	0x44, 0, 841, LM341-_Sleep_up_data_init
	clrf _Charge_OCP_Flage+0
LM342:
.stabn	0x44, 0, 842, LM342-_Sleep_up_data_init
	clrf _Charge_OCP_cnt+0
LM343:
.stabn	0x44, 0, 843, LM343-_Sleep_up_data_init
	clrf _Charge_Close_En_cnt+0
LM344:
.stabn	0x44, 0, 844, LM344-_Sleep_up_data_init
	clrf _hour2_dis_flage+0
LM345:
.stabn	0x44, 0, 845, LM345-_Sleep_up_data_init
	clrf _hour2_dis_cnt+0
	clrf _hour2_dis_cnt+1
LM346:
.stabn	0x44, 0, 846, LM346-_Sleep_up_data_init
	clrf _ADD_IBAT_cnt+0
	clrf _ADD_IBAT_cnt+1
LM347:
.stabn	0x44, 0, 847, LM347-_Sleep_up_data_init
	clrf _USBA_EN_BK+0
LM348:
.stabn	0x44, 0, 848, LM348-_Sleep_up_data_init
	clrf _Flash_bat_Vol_Start_check+0
LM349:
.stabn	0x44, 0, 820, LM349-_Sleep_up_data_init
	movlw 1
LM350:
.stabn	0x44, 0, 849, LM350-_Sleep_up_data_init
	movwfl _F_A1_ON+0
LM351:
.stabn	0x44, 0, 850, LM351-_Sleep_up_data_init
	clrf _UP_data_2402_Flage+0
LM352:
.stabn	0x44, 0, 851, LM352-_Sleep_up_data_init
	clrf _CA_IN_Frist_No_Soure+0
LM353:
.stabn	0x44, 0, 852, LM353-_Sleep_up_data_init
	clrf _BAT_CO_OPEN_CNT+0
LM354:
.stabn	0x44, 0, 853, LM354-_Sleep_up_data_init
	clrf _Frist_Bat_Connect+0
LM355:
.stabn	0x44, 0, 854, LM355-_Sleep_up_data_init
	clrf _Charge_HIG_Vbat_F+0
LM356:
.stabn	0x44, 0, 856, LM356-_Sleep_up_data_init
	bsf BSR,1
	clrf _Car_Cont_NG_Flage+0
LM357:
.stabn	0x44, 0, 858, LM357-_Sleep_up_data_init
	clrf _LED_test_mode_Cnt2+0
LM358:
.stabn	0x44, 0, 859, LM358-_Sleep_up_data_init
	clrf _LED_test_mode_Cnt+0
LM359:
.stabn	0x44, 0, 860, LM359-_Sleep_up_data_init
	banksel 0
	return
Ltmp54:
Lfunc_end14:
Lfunc_end15:
LM360:
.stabf LM360-_Sleep_up_data_init

	_BSP_VBat_Jud_sec .section rom
	.global	_BSP_VBat_Jud
_BSP_VBat_Jud:
Lfunc_begin16:
.stabs "BSP_VBat_Jud:f:16", 0x24,0,0,_BSP_VBat_Jud
.stabn 0xc0, 0, 0, _BSP_VBat_Jud
.stabn 0xe0, 0, 0, _BSP_VBat_Jud
LM361:
.stabn	0x44, 0, 862, LM361-_BSP_VBat_Jud
Lfunc_begin17:
LM362:
.stabn	0x44, 0, 863, LM362-_BSP_VBat_Jud
	banksel 0
	return
Ltmp55:
Lfunc_end16:
Lfunc_end17:
LM363:
.stabf LM363-_BSP_VBat_Jud

	_Charge_bat_Full_check_sec .section rom
	.global	_Charge_bat_Full_check
_Charge_bat_Full_check:
Lfunc_begin18:
.stabs "Charge_bat_Full_check:f:16", 0x24,0,0,_Charge_bat_Full_check
.stabn 0xc0, 0, 0, _Charge_bat_Full_check
.stabn 0xe0, 0, 0, _Charge_bat_Full_check
LM364:
.stabn	0x44, 0, 865, LM364-_Charge_bat_Full_check
Lfunc_begin19:
LM365:
.stabn	0x44, 0, 867, LM365-_Charge_bat_Full_check
	banksel 0
	movfwl _coulomb_data+13
Ltmp56:
	sublw 0
	bne LBB9_16
LBB9_1:
LM366:
.stabn	0x44, 0, 870, LM366-_Charge_bat_Full_check
Ltmp57:
	movfwl _bat_full_8hour_Cnt+0
Ltmp58:
	sublw 0
	beq LBB9_7
LBB9_2:
LM367:
.stabn	0x44, 0, 872, LM367-_Charge_bat_Full_check
Ltmp59:
	movlw 1
	bsf BSR,0
	addwf _bat_full_1hour_Cnt+0, F
LM368:
.stabn	0x44, 0, 874, LM368-_Charge_bat_Full_check
Ltmp60:
	movfw _bat_full_1hour_Cnt+0
	movwfl _hex_greater_than_compare.args.+0
Ltmp61:
LM369:
.stabn	0x44, 0, 872, LM369-_Charge_bat_Full_check
	movlw 0
	addwfc _bat_full_1hour_Cnt+1, F
LM370:
.stabn	0x44, 0, 874, LM370-_Charge_bat_Full_check
Ltmp62:
	movfw _bat_full_1hour_Cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0xa0
	movwf _hex_greater_than_compare.args.+2
	movlw 0x8c
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp63:
	sublw 0
	beq LBB9_4
LBB9_3:
LM371:
.stabn	0x44, 0, 876, LM371-_Charge_bat_Full_check
Ltmp64:
	bsf BSR,0
	clrf _bat_full_1hour_Cnt+0
	clrf _bat_full_1hour_Cnt+1
LM372:
.stabn	0x44, 0, 877, LM372-_Charge_bat_Full_check
	incf _bat_full_8hour_Cnt+0, F
Ltmp65:
LBB9_4:
LM373:
.stabn	0x44, 0, 879, LM373-_Charge_bat_Full_check
	banksel _bat_full_8hour_Cnt
	movfw _bat_full_8hour_Cnt+0
Ltmp66:
	sublw 9
	bgt LBB9_6
LBB9_5:
LM374:
.stabn	0x44, 0, 881, LM374-_Charge_bat_Full_check
Ltmp67:
	clrf _bat_full_8hour_Cnt+0
LM375:
.stabn	0x44, 0, 884, LM375-_Charge_bat_Full_check
	movlw 100
	movwfl _BatCap_Value+0
LM376:
.stabn	0x44, 0, 886, LM376-_Charge_bat_Full_check
	movlw 1
LM377:
.stabn	0x44, 0, 885, LM377-_Charge_bat_Full_check
	movwfl _coulomb_data+13
LM378:
.stabn	0x44, 0, 886, LM378-_Charge_bat_Full_check
	movwf _bat_full_do_to_charge+0
LM379:
.stabn	0x44, 0, 889, LM379-_Charge_bat_Full_check
	movlw 52
	bcf BSR,0
	movwf _iic_transmit_byte.args.+0
	movlw 0x89
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM380:
.stabn	0x44, 0, 890, LM380-_Charge_bat_Full_check
	movlw 53
	movwf _iic_transmit_byte.args.+0
	movlw 4
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
Ltmp68:
LBB9_6:
LBB9_7:
LM381:
.stabn	0x44, 0, 894, LM381-_Charge_bat_Full_check
	banksel _Vbat_8_date
	movfw _Vbat_8_date+0
	sublw 0xd0
	bgt LBB9_14
LBB9_8:
	movfw _adc_convert+6
	movwfl _hex_less_than_compare.args.+0
	movfw _adc_convert+7
	bcf BSR,0
	movwf _hex_less_than_compare.args.+1
	movlw 12
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
Ltmp69:
	sublw 0
	beq LBB9_14
LBB9_9:
LM382:
.stabn	0x44, 0, 896, LM382-_Charge_bat_Full_check
Ltmp70:
	incf _bat_full_cnt+0, F
LM383:
.stabn	0x44, 0, 898, LM383-_Charge_bat_Full_check
Ltmp71:
	movfw _bat_full_cnt+0
Ltmp72:
	sublw 0x96
	bgt LBB9_13
LBB9_10:
LM384:
.stabn	0x44, 0, 900, LM384-_Charge_bat_Full_check
Ltmp73:
	clrf _bat_full_cnt+0
LM385:
.stabn	0x44, 0, 901, LM385-_Charge_bat_Full_check
	incf _BatCap_Value+0, F
LM386:
.stabn	0x44, 0, 902, LM386-_Charge_bat_Full_check
Ltmp74:
	movfw _BatCap_Value+0
Ltmp75:
	sublw 99
	bgt LBB9_12
LBB9_11:
LM387:
.stabn	0x44, 0, 904, LM387-_Charge_bat_Full_check
Ltmp76:
	movlw 100
	movwf _BatCap_Value+0
LM388:
.stabn	0x44, 0, 906, LM388-_Charge_bat_Full_check
	movlw 1
LM389:
.stabn	0x44, 0, 905, LM389-_Charge_bat_Full_check
	movwfl _coulomb_data+13
LM390:
.stabn	0x44, 0, 906, LM390-_Charge_bat_Full_check
	movwfl _bat_full_do_to_charge+0
Ltmp77:
LBB9_12:
LBB9_13:
LM391:
.stabn	0x44, 0, 909, LM391-_Charge_bat_Full_check
	goto LBB9_15
Ltmp78:
LBB9_14:
LM392:
.stabn	0x44, 0, 911, LM392-_Charge_bat_Full_check
	banksel _bat_full_cnt
	clrf _bat_full_cnt+0
Ltmp79:
LBB9_15:
LM393:
.stabn	0x44, 0, 912, LM393-_Charge_bat_Full_check
	goto LBB9_17
Ltmp80:
LBB9_16:
LM394:
.stabn	0x44, 0, 915, LM394-_Charge_bat_Full_check
	clrf _bat_full_cnt+0
Ltmp81:
LBB9_17:
LM395:
.stabn	0x44, 0, 918, LM395-_Charge_bat_Full_check
	bsf BSR,0
	clrf _Charge_HIG_Vbat_F+0
LM396:
.stabn	0x44, 0, 952, LM396-_Charge_bat_Full_check
	banksel 0
	return
Ltmp82:
Lfunc_end18:
Lfunc_end19:
LM397:
.stabn 0xc0,0,0, LM365-_Charge_bat_Full_check
.stabs "FuLL_Statu:10;",0x80,0,0,_Charge_bat_Full_check.temp.+0
.stabn 0xe0,0,0, LM396-_Charge_bat_Full_check
.stabf LM397-_Charge_bat_Full_check

	_Bat_Vaule_deal_sec .section rom
	.global	_Bat_Vaule_deal
_Bat_Vaule_deal:
Lfunc_begin20:
.stabs "Bat_Vaule_deal:f:16", 0x24,0,0,_Bat_Vaule_deal
.stabn 0xc0, 0, 0, _Bat_Vaule_deal
.stabn 0xe0, 0, 0, _Bat_Vaule_deal
LM398:
.stabn	0x44, 0, 955, LM398-_Bat_Vaule_deal
Lfunc_begin21:
LM399:
.stabn	0x44, 0, 961, LM399-_Bat_Vaule_deal
	banksel 0
	movfwl _Vbat_8_date+0
	movwf _Bat_Vaule_deal.temp.+0
LM400:
.stabn	0x44, 0, 964, LM400-_Bat_Vaule_deal
Ltmp83:
	movfwl _Flash_bat_Vol_Start_check+0
Ltmp84:
	sublw 0
	beq LBB10_38
LBB10_1:
LM401:
.stabn	0x44, 0, 966, LM401-_Bat_Vaule_deal
Ltmp85:
	bsf BSR,0
	incf _Flash_bat_Vol_Start_check+0, F
LM402:
.stabn	0x44, 0, 968, LM402-_Bat_Vaule_deal
Ltmp86:
	movfw _Flash_bat_Vol_Start_check+0
Ltmp87:
	sublw 3
	bgt LBB10_37
LBB10_2:
LM403:
.stabn	0x44, 0, 970, LM403-_Bat_Vaule_deal
Ltmp88:
	movfw _Flash_Bat_RCR_data+0
Ltmp89:
	sublw 0xaa
	bne LBB10_26
LBB10_3:
LM404:
.stabn	0x44, 0, 972, LM404-_Bat_Vaule_deal
Ltmp90:
	movfwl _R_SysMode_OK+0
	sublw 0
	bne LBB10_25
LBB10_4:
	movfw _f_car_jump+0
	sublw 0
	bne LBB10_25
LBB10_5:
	movfw _CIbat_8_date+0
Ltmp91:
	sublw 29
	blt LBB10_25
LBB10_6:
LM405:
.stabn	0x44, 0, 974, LM405-_Bat_Vaule_deal
Ltmp92:
	movfw _Vbat_8_date+0
	sublw 0xc1
	blt LBB10_24
Ltmp93:
LBB10_7:
	movfw _Flash_Bat_Vol_data+0
	subwf _Vbat_8_date+0, W
	bge LBB10_24
LBB10_8:
LM406:
.stabn	0x44, 0, 976, LM406-_Bat_Vaule_deal
Ltmp94:
	bcf BSR,0
	clrf _Bat_Vaule_deal.temp.+2
LM407:
.stabn	0x44, 0, 977, LM407-_Bat_Vaule_deal
Ltmp95:
	movfwl _Flash_Bat_Vol_data+0
Ltmp96:
	sublw 0xc2
	bgt LBB10_10
LBB10_9:
LM408:
.stabn	0x44, 0, 978, LM408-_Bat_Vaule_deal
Ltmp97:
	movlw 0xc1
	movwf _Bat_Vaule_deal.temp.+3
	goto LBB10_11
LBB10_10:
LM409:
.stabn	0x44, 0, 980, LM409-_Bat_Vaule_deal
	movfwl _Flash_Bat_Vol_data+0
	movwf _Bat_Vaule_deal.temp.+3
Ltmp98:
LBB10_11:
LM410:
.stabn	0x44, 0, 982, LM410-_Bat_Vaule_deal
	movfwl _Vbat_8_date+0
	subwf _Bat_Vaule_deal.temp.+3, W
	movwf _Bat_Vaule_deal.temp.+2
LM411:
.stabn	0x44, 0, 992, LM411-_Bat_Vaule_deal
	sublw 17
	bgt LBB10_13
LBB10_12:
LM412:
.stabn	0x44, 0, 994, LM412-_Bat_Vaule_deal
Ltmp99:
	movlw 5
	movwf _Power_Value_Update+0
LM413:
.stabn	0x44, 0, 995, LM413-_Bat_Vaule_deal
	goto LBB10_23
Ltmp100:
LBB10_13:
LM414:
.stabn	0x44, 0, 997, LM414-_Bat_Vaule_deal
	movfw _Bat_Vaule_deal.temp.+2
Ltmp101:
	sublw 12
	bgt LBB10_17
LBB10_14:
LM415:
.stabn	0x44, 0, 999, LM415-_Bat_Vaule_deal
Ltmp102:
	movfw _BatCap_Value+0
Ltmp103:
	sublw 21
	bgt LBB10_16
LBB10_15:
LM416:
.stabn	0x44, 0, 1000, LM416-_Bat_Vaule_deal
Ltmp104:
	movlw 0xec
	addwf _BatCap_Value+0, F
Ltmp105:
LBB10_16:
LM417:
.stabn	0x44, 0, 1001, LM417-_Bat_Vaule_deal
	goto LBB10_22
Ltmp106:
LBB10_17:
LM418:
.stabn	0x44, 0, 1003, LM418-_Bat_Vaule_deal
	movfw _Bat_Vaule_deal.temp.+2
Ltmp107:
	sublw 8
	bgt LBB10_21
LBB10_18:
LM419:
.stabn	0x44, 0, 1005, LM419-_Bat_Vaule_deal
Ltmp108:
	movfw _BatCap_Value+0
Ltmp109:
	sublw 6
	bgt LBB10_20
LBB10_19:
LM420:
.stabn	0x44, 0, 1006, LM420-_Bat_Vaule_deal
Ltmp110:
	movlw 0xfb
	addwf _BatCap_Value+0, F
Ltmp111:
LBB10_20:
LBB10_21:
LBB10_22:
LBB10_23:
LBB10_24:
LBB10_25:
LM421:
.stabn	0x44, 0, 1023, LM421-_Bat_Vaule_deal
	goto LBB10_36
Ltmp112:
LBB10_26:
LM422:
.stabn	0x44, 0, 1026, LM422-_Bat_Vaule_deal
	movfwl _R_SysMode_OK+0
Ltmp113:
	sublw 1
	bne LBB10_31
LBB10_27:
LM423:
.stabn	0x44, 0, 1028, LM423-_Bat_Vaule_deal
Ltmp114:
	movfw _Vbat_8_date+0
Ltmp115:
	sublw 0xa3
	blt LBB10_29
LBB10_28:
LM424:
.stabn	0x44, 0, 1030, LM424-_Bat_Vaule_deal
Ltmp116:
	movlw 1
	bcf BSR,0
	movwf _BatCap_Value+0
LM425:
.stabn	0x44, 0, 1031, LM425-_Bat_Vaule_deal
	clrf _Bat_low_Cnt+0
LM426:
.stabn	0x44, 0, 1032, LM426-_Bat_Vaule_deal
	goto LBB10_30
Ltmp117:
LBB10_29:
LM427:
.stabn	0x44, 0, 1034, LM427-_Bat_Vaule_deal
	movlw 3
	movwfl _Power_Value_Update+0
Ltmp118:
LBB10_30:
LM428:
.stabn	0x44, 0, 1041, LM428-_Bat_Vaule_deal
	goto LBB10_35
Ltmp119:
LBB10_31:
LM429:
.stabn	0x44, 0, 1044, LM429-_Bat_Vaule_deal
	movlw 0x80
	xorwf _Vbat_8_date+0, W
	sublw 0x80
	bgt LBB10_33
LBB10_32:
LM430:
.stabn	0x44, 0, 1046, LM430-_Bat_Vaule_deal
Ltmp120:
	movlw 1
	bcf BSR,0
	movwf _BatCap_Value+0
LM431:
.stabn	0x44, 0, 1047, LM431-_Bat_Vaule_deal
	clrf _Bat_low_Cnt+0
LM432:
.stabn	0x44, 0, 1048, LM432-_Bat_Vaule_deal
	goto LBB10_34
Ltmp121:
LBB10_33:
LM433:
.stabn	0x44, 0, 1050, LM433-_Bat_Vaule_deal
	movlw 5
	movwfl _Power_Value_Update+0
Ltmp122:
LBB10_34:
LBB10_35:
LBB10_36:
LM434:
.stabn	0x44, 0, 1053, LM434-_Bat_Vaule_deal
	banksel _Flash_bat_Vol_Start_check
	clrf _Flash_bat_Vol_Start_check+0
Ltmp123:
LBB10_37:
LBB10_38:
LM435:
.stabn	0x44, 0, 1062, LM435-_Bat_Vaule_deal
	banksel _Power_Value_Update
	movfw _Power_Value_Update+0
Ltmp124:
	sublw 0
	beq LBB10_52
LBB10_39:
LM436:
.stabn	0x44, 0, 1064, LM436-_Bat_Vaule_deal
Ltmp125:
	clrf _Bat_Vaule_deal.temp.+4
LBB10_40:
Ltmp126:
	movfw _Bat_Vaule_deal.temp.+4
Ltmp127:
	sublw 20
	blt LBB10_45
LBB10_41:
LM437:
.stabn	0x44, 0, 1066, LM437-_Bat_Vaule_deal
Ltmp128:
	movfw _Bat_Vaule_deal.temp.+4
	movwf _Bat_Vaule_deal.temp.+1
	movlw LOW(_Vbat_Tab+0)
	addwf _Bat_Vaule_deal.temp.+1, W
	movfw _Bat_Vaule_deal.temp.+1
	movcaw2 _Vbat_Tab, 0
Ltmp129:
	subwf _Bat_Vaule_deal.temp.+0, W
	blt LBB10_43
LBB10_42:
LM438:
.stabn	0x44, 0, 1067, LM438-_Bat_Vaule_deal
Ltmp130:
	goto LBB10_45
Ltmp131:
LBB10_43:
LM439:
.stabn	0x44, 0, 1064, LM439-_Bat_Vaule_deal
	incf _Bat_Vaule_deal.temp.+4, F
	goto LBB10_40
Ltmp132:
LBB10_45:
LM440:
.stabn	0x44, 0, 1069, LM440-_Bat_Vaule_deal
	movfw _Bat_Vaule_deal.temp.+4
Ltmp133:
	sublw 21
	bgt LBB10_47
LBB10_46:
LM441:
.stabn	0x44, 0, 1070, LM441-_Bat_Vaule_deal
Ltmp134:
	incf _Bat_Vaule_deal.temp.+4, F
Ltmp135:
LBB10_47:
LM442:
.stabn	0x44, 0, 1071, LM442-_Bat_Vaule_deal
	movfw _Bat_Vaule_deal.temp.+4
	movwf _Bat_Vaule_deal.temp.+1
	movlw LOW(_VbatDisP_Tab+0)
	addwf _Bat_Vaule_deal.temp.+1, W
	movfw _Bat_Vaule_deal.temp.+1
	movcaw2 _VbatDisP_Tab, 0
	movwf _BatCap_Value_Be+0
LM443:
.stabn	0x44, 0, 1086, LM443-_Bat_Vaule_deal
Ltmp136:
	movfw _Power_Value_Update+0
	movwf _Bat_Vaule_deal.temp.+1
	addlw 1
	movwf _Power_Value_Update+0
Ltmp137:
	movfw _Bat_Vaule_deal.temp.+1
	sublw 7
	bgt LBB10_49
LBB10_48:
LM444:
.stabn	0x44, 0, 1087, LM444-_Bat_Vaule_deal
Ltmp138:
	clrf _Power_Value_Update+0
Ltmp139:
LBB10_49:
LM445:
.stabn	0x44, 0, 1088, LM445-_Bat_Vaule_deal
	movfw _BatCap_Value_Be+0
	movwf _BatCap_Value+0
LM446:
.stabn	0x44, 0, 1090, LM446-_Bat_Vaule_deal
	sublw 0
	beq LBB10_51
LBB10_50:
LM447:
.stabn	0x44, 0, 1091, LM447-_Bat_Vaule_deal
Ltmp140:
	clrf _Bat_low_Cnt+0
Ltmp141:
LBB10_51:
LBB10_52:
LM448:
.stabn	0x44, 0, 1093, LM448-_Bat_Vaule_deal
	return
Ltmp142:
Lfunc_end20:
Lfunc_end21:
LM449:
.stabn 0xc0,0,0, LM399-_Bat_Vaule_deal
.stabs "i:10;",0x80,0,0,_Bat_Vaule_deal.temp.+4
.stabn 0xe0,0,0, LM448-_Bat_Vaule_deal
.stabn 0xc0,0,0, LM399-_Bat_Vaule_deal
.stabs "R_VbatVol_Value:10;",0x80,0,0,_Bat_Vaule_deal.temp.+0
.stabn 0xe0,0,0, LM448-_Bat_Vaule_deal
.stabn 0xc0,0,0, LM399-_Bat_Vaule_deal
.stabs "R_VbatVol_cha:10;",0x80,0,0,_Bat_Vaule_deal.temp.+2
.stabn 0xe0,0,0, LM448-_Bat_Vaule_deal
.stabn 0xc0,0,0, LM399-_Bat_Vaule_deal
.stabs "R_VbatVol_Be:10;",0x80,0,0,_Bat_Vaule_deal.temp.+3
.stabn 0xe0,0,0, LM448-_Bat_Vaule_deal
.stabf LM449-_Bat_Vaule_deal

	_Bat_low_deal_sec .section rom
	.global	_Bat_low_deal
_Bat_low_deal:
Lfunc_begin22:
.stabs "Bat_low_deal:f:16", 0x24,0,0,_Bat_low_deal
.stabn 0xc0, 0, 0, _Bat_low_deal
.stabn 0xe0, 0, 0, _Bat_low_deal
LM450:
.stabn	0x44, 0, 1095, LM450-_Bat_low_deal
Lfunc_begin23:
LM451:
.stabn	0x44, 0, 1097, LM451-_Bat_low_deal
	banksel 0
	movfwl _Vbat_8_date+0
	movwf _Bat_low_deal.temp.+0
LM452:
.stabn	0x44, 0, 1099, LM452-_Bat_low_deal
Ltmp143:
	movfw _R_SysMode_OK+0
Ltmp144:
	sublw 1
	bne LBB11_2
LBB11_1:
LM453:
.stabn	0x44, 0, 1100, LM453-_Bat_low_deal
Ltmp145:
	goto LBB11_24
Ltmp146:
LBB11_2:
LM454:
.stabn	0x44, 0, 1102, LM454-_Bat_low_deal
	movfw _Bat_low_Cnt+0
Ltmp147:
	sublw 40
	beq LBB11_24
LBB11_3:
LM455:
.stabn	0x44, 0, 1104, LM455-_Bat_low_deal
Ltmp148:
	movfw _Bat_low_deal.temp.+0
Ltmp149:
	sublw 87
	blt LBB11_13
LBB11_4:
LM456:
.stabn	0x44, 0, 1106, LM456-_Bat_low_deal
Ltmp150:
	movfwl _f_car_jump+0
Ltmp151:
	sublw 0
	beq LBB11_11
LBB11_5:
LM457:
.stabn	0x44, 0, 1108, LM457-_Bat_low_deal
Ltmp152:
	bsf BSR,0
	incf _Car_low_bat_cnt+0, F
LM458:
.stabn	0x44, 0, 1109, LM458-_Bat_low_deal
Ltmp153:
	movfw _Car_low_bat_cnt+0
Ltmp154:
	sublw 30
	bgt LBB11_10
LBB11_6:
LM459:
.stabn	0x44, 0, 1111, LM459-_Bat_low_deal
Ltmp155:
	clrf _Car_low_bat_cnt+0
LM460:
.stabn	0x44, 0, 1112, LM460-_Bat_low_deal
Ltmp156:
	movfwl _BatCap_Value+0
Ltmp157:
	sublw 5
	blt LBB11_8
LBB11_7:
LM461:
.stabn	0x44, 0, 1114, LM461-_Bat_low_deal
Ltmp158:
	movlw 31
	movwfl _Bat_low_Cnt+0
LM462:
.stabn	0x44, 0, 1115, LM462-_Bat_low_deal
	goto LBB11_9
Ltmp159:
LBB11_8:
LM463:
.stabn	0x44, 0, 1118, LM463-_Bat_low_deal
	bcf BSR,0
	decf _BatCap_Value+0, F
Ltmp160:
LBB11_9:
LBB11_10:
LM464:
.stabn	0x44, 0, 1121, LM464-_Bat_low_deal
	goto LBB11_12
Ltmp161:
LBB11_11:
LM465:
.stabn	0x44, 0, 1124, LM465-_Bat_low_deal
	incf _Bat_low_Cnt+0, F
Ltmp162:
LBB11_12:
LM466:
.stabn	0x44, 0, 1126, LM466-_Bat_low_deal
	goto LBB11_21
Ltmp163:
LBB11_13:
LM467:
.stabn	0x44, 0, 1129, LM467-_Bat_low_deal
	clrf _Bat_low_Cnt+0
LM468:
.stabn	0x44, 0, 1130, LM468-_Bat_low_deal
	bsf BSR,0
	clrf _Car_low_bat_cnt+0
LM469:
.stabn	0x44, 0, 1131, LM469-_Bat_low_deal
Ltmp164:
	movfwl _Bat_low_deal.temp.+0
Ltmp165:
	sublw 100
	blt LBB11_19
LBB11_14:
LM470:
.stabn	0x44, 0, 1133, LM470-_Bat_low_deal
Ltmp166:
	incf _Bat_low2_Cnt+0, F
LM471:
.stabn	0x44, 0, 1134, LM471-_Bat_low_deal
Ltmp167:
	movfw _Bat_low2_Cnt+0
Ltmp168:
	sublw 5
	bgt LBB11_18
LBB11_15:
LM472:
.stabn	0x44, 0, 1136, LM472-_Bat_low_deal
Ltmp169:
	clrf _Bat_low2_Cnt+0
LM473:
.stabn	0x44, 0, 1137, LM473-_Bat_low_deal
Ltmp170:
	movfwl _BatCap_Value+0
Ltmp171:
	sublw 2
	bgt LBB11_17
LBB11_16:
LM474:
.stabn	0x44, 0, 1138, LM474-_Bat_low_deal
Ltmp172:
	bcf BSR,0
	decf _BatCap_Value+0, F
Ltmp173:
LBB11_17:
LBB11_18:
LM475:
.stabn	0x44, 0, 1140, LM475-_Bat_low_deal
	goto LBB11_20
Ltmp174:
LBB11_19:
LM476:
.stabn	0x44, 0, 1143, LM476-_Bat_low_deal
	clrf _Bat_low2_Cnt+0
Ltmp175:
LBB11_20:
LBB11_21:
LM477:
.stabn	0x44, 0, 1147, LM477-_Bat_low_deal
	banksel _Bat_low_Cnt
	movfw _Bat_low_Cnt+0
Ltmp176:
	sublw 30
	bgt LBB11_23
LBB11_22:
LM478:
.stabn	0x44, 0, 1149, LM478-_Bat_low_deal
Ltmp177:
	movlw 40
	movwf _Bat_low_Cnt+0
LM479:
.stabn	0x44, 0, 1150, LM479-_Bat_low_deal
	movlw 1
	movwf _Err_diply+0
LM480:
.stabn	0x44, 0, 1151, LM480-_Bat_low_deal
	clrf _Err_diply_check_time_cnt+0
LM481:
.stabn	0x44, 0, 1153, LM481-_Bat_low_deal
	bsf BSR,0
	clrf _SOS_LEVEL+0
LM482:
.stabn	0x44, 0, 1154, LM482-_Bat_low_deal
	clrf _WHITE_ON+0
LM483:
.stabn	0x44, 0, 1155, LM483-_Bat_low_deal
	clrf _RED_ON+0
LM484:
.stabn	0x44, 0, 1158, LM484-_Bat_low_deal
	banksel _coulomb_data
	clrf _coulomb_data+13
LM485:
.stabn	0x44, 0, 1150, LM485-_Bat_low_deal
	movlw 1
LM486:
.stabn	0x44, 0, 1159, LM486-_Bat_low_deal
	bcf BSR,1
	movwf _Discharge_MinCur+0
LM487:
.stabn	0x44, 0, 1160, LM487-_Bat_low_deal
	clrf _BatCap_Value+0
LM488:
.stabn	0x44, 0, 1150, LM488-_Bat_low_deal
	movlw 1
LM489:
.stabn	0x44, 0, 1161, LM489-_Bat_low_deal
	movwfl _SOS_lighting_stop+0
LM490:
.stabn	0x44, 0, 1162, LM490-_Bat_low_deal
	bsf BSR,1
	clrf _F_A1_ON+0
LM491:
.stabn	0x44, 0, 1164, LM491-_Bat_low_deal
	bcf BSR,1
	clrf _Mod_Dis_USBA_EN.args.+0
	call _Mod_Dis_USBA_EN
LM492:
.stabn	0x44, 0, 1165, LM492-_Bat_low_deal
	bsf BSR,1
	clrf _inoutput_data+6
LM493:
.stabn	0x44, 0, 1167, LM493-_Bat_low_deal
	clrf _inoutput_data+8
LM494:
.stabn	0x44, 0, 1170, LM494-_Bat_low_deal
	clrf _inoutput_data+13
LM495:
.stabn	0x44, 0, 1171, LM495-_Bat_low_deal
	clrf _inoutput_data+14
LM496:
.stabn	0x44, 0, 1173, LM496-_Bat_low_deal
	movlw 29
	movwfl _discharge_displed+0
LM497:
.stabn	0x44, 0, 1174, LM497-_Bat_low_deal
	call _app_power_PDO_rerest
LM498:
.stabn	0x44, 0, 1175, LM498-_Bat_low_deal
	call _TYPE_C_constraint_sleep
Ltmp178:
LBB11_23:
LBB11_24:
LM499:
.stabn	0x44, 0, 1178, LM499-_Bat_low_deal
	return
Ltmp179:
Lfunc_end22:
Lfunc_end23:
LM500:
.stabn 0xc0,0,0, LM451-_Bat_low_deal
.stabs "R_VbatVol_Value:10;",0x80,0,0,_Bat_low_deal.temp.+0
.stabn 0xe0,0,0, LM499-_Bat_low_deal
.stabf LM500-_Bat_low_deal

	_app_power_PDO_rerest_sec .section rom
	.global	_app_power_PDO_rerest
_app_power_PDO_rerest:
Lfunc_begin24:
.stabs "app_power_PDO_rerest:f:16", 0x24,0,0,_app_power_PDO_rerest
.stabn 0xc0, 0, 0, _app_power_PDO_rerest
.stabn 0xe0, 0, 0, _app_power_PDO_rerest
LM501:
.stabn	0x44, 0, 2644, LM501-_app_power_PDO_rerest
Lfunc_begin25:
LM502:
.stabn	0x44, 0, 2645, LM502-_app_power_PDO_rerest
	banksel 0
	bsf BSR,0
	clrf _TYPE_CA_18W_Flage+0
LM503:
.stabn	0x44, 0, 2646, LM503-_app_power_PDO_rerest
	movlw 5
	movwfl _h_pd+6
LM504:
.stabn	0x44, 0, 2647, LM504-_app_power_PDO_rerest
Ltmp180:
	movlw LOW(_h_pd+0)
	addlw 8
	bcf BSR,0
	movwf _app_power_PDO_rerest.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_PDO_rerest.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp181:
LM505:
.stabn	0x44, 0, 2648, LM505-_app_power_PDO_rerest
	return
Ltmp182:
Lfunc_end24:
Lfunc_end25:
LM506:
.stabf LM506-_app_power_PDO_rerest

	_TYPE_C_constraint_sleep_sec .section rom
	.global	_TYPE_C_constraint_sleep
_TYPE_C_constraint_sleep:
Lfunc_begin26:
.stabs "TYPE_C_constraint_sleep:f:16", 0x24,0,0,_TYPE_C_constraint_sleep
.stabn 0xc0, 0, 0, _TYPE_C_constraint_sleep
.stabn 0xe0, 0, 0, _TYPE_C_constraint_sleep
LM507:
.stabn	0x44, 0, 2651, LM507-_TYPE_C_constraint_sleep
Lfunc_begin27:
LM508:
.stabn	0x44, 0, 2652, LM508-_TYPE_C_constraint_sleep
	banksel 0
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp183:
	sublw 0
	beq LBB13_2
LBB13_1:
LM509:
.stabn	0x44, 0, 2654, LM509-_TYPE_C_constraint_sleep
Ltmp184:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
	movlw LOW(_h_typeca+0)
LM510:
.stabn	0x44, 0, 2655, LM510-_TYPE_C_constraint_sleep
	movwf _peripheral_typec_UFP_init.args.+0
LM511:
.stabn	0x44, 0, 2654, LM511-_TYPE_C_constraint_sleep
	movlw HIGH8(_h_typeca+0)
LM512:
.stabn	0x44, 0, 2655, LM512-_TYPE_C_constraint_sleep
	movwf _peripheral_typec_UFP_init.args.+1
	call _peripheral_typec_UFP_init
LM513:
.stabn	0x44, 0, 2656, LM513-_TYPE_C_constraint_sleep
	movlw 1
	movwfl _Bat_low_sleep_flage+0
Ltmp185:
LBB13_2:
LM514:
.stabn	0x44, 0, 2658, LM514-_TYPE_C_constraint_sleep
	banksel 0
	return
Ltmp186:
Lfunc_end26:
Lfunc_end27:
LM515:
.stabf LM515-_TYPE_C_constraint_sleep

	_BSP_Temp_Control_sec .section rom
	.global	_BSP_Temp_Control
_BSP_Temp_Control:
Lfunc_begin28:
.stabs "BSP_Temp_Control:f:16", 0x24,0,0,_BSP_Temp_Control
.stabn 0xc0, 0, 0, _BSP_Temp_Control
.stabn 0xe0, 0, 0, _BSP_Temp_Control
LM516:
.stabn	0x44, 0, 1181, LM516-_BSP_Temp_Control
Lfunc_begin29:
LM517:
.stabn	0x44, 0, 1183, LM517-_BSP_Temp_Control
	banksel 0
	movfwl _adc_convert+32
	movwf _BSP_Temp_Control.temp.+0
	movfwl _adc_convert+33
	movwf _BSP_Temp_Control.temp.+1
LM518:
.stabn	0x44, 0, 1185, LM518-_BSP_Temp_Control
Ltmp187:
	movfw _R_SysMode_OK+0
Ltmp188:
	sublw 1
	bne LBB14_36
LBB14_1:
LM519:
.stabn	0x44, 0, 1187, LM519-_BSP_Temp_Control
Ltmp189:
	movfw _Temp+4
Ltmp190:
	sublw 0
	beq LBB14_28
LBB14_2:
LM520:
.stabn	0x44, 0, 1190, LM520-_BSP_Temp_Control
Ltmp191:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_less_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_less_than_compare.args.+1
	movlw 98
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	bne LBB14_4
LBB14_3:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0xb5
	movwf _hex_greater_than_compare.args.+2
	movlw 5
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp192:
	sublw 0
	beq LBB14_7
LBB14_4:
LM521:
.stabn	0x44, 0, 1192, LM521-_BSP_Temp_Control
Ltmp193:
	movfw _Temp+8
	movwf _BSP_Temp_Control.temp.+2
	addlw 1
	movwf _Temp+8
Ltmp194:
	movfw _BSP_Temp_Control.temp.+2
	sublw 10
	bgt LBB14_6
LBB14_5:
LM522:
.stabn	0x44, 0, 1194, LM522-_BSP_Temp_Control
Ltmp195:
	clrf _Temp+8
LM523:
.stabn	0x44, 0, 1195, LM523-_BSP_Temp_Control
	call _BSP_Charge_TempNG
Ltmp196:
LBB14_6:
LM524:
.stabn	0x44, 0, 1197, LM524-_BSP_Temp_Control
	goto LBB14_8
Ltmp197:
LBB14_7:
LM525:
.stabn	0x44, 0, 1199, LM525-_BSP_Temp_Control
	clrf _Temp+8
Ltmp198:
LBB14_8:
LM526:
.stabn	0x44, 0, 1201, LM526-_BSP_Temp_Control
	movfwl _Charge_low_power_F+0
Ltmp199:
	sublw 0
	bne LBB14_18
LBB14_9:
LM527:
.stabn	0x44, 0, 1204, LM527-_BSP_Temp_Control
Ltmp200:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_less_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_less_than_compare.args.+1
	movlw 0xab
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	bne LBB14_11
LBB14_10:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0xf1
	movwf _hex_greater_than_compare.args.+2
	movlw 3
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp201:
	sublw 0
	beq LBB14_12
LBB14_11:
LM528:
.stabn	0x44, 0, 1206, LM528-_BSP_Temp_Control
Ltmp202:
	bsf BSR,0
	incf _Charge_low_power_CNT+0, F
LM529:
.stabn	0x44, 0, 1207, LM529-_BSP_Temp_Control
	goto LBB14_13
Ltmp203:
LBB14_12:
LM530:
.stabn	0x44, 0, 1210, LM530-_BSP_Temp_Control
	bsf BSR,0
	clrf _Charge_low_power_CNT+0
Ltmp204:
LBB14_13:
LM531:
.stabn	0x44, 0, 1212, LM531-_BSP_Temp_Control
	movfw _Charge_low_power_CNT+0
Ltmp205:
	sublw 15
	bgt LBB14_17
LBB14_14:
LM532:
.stabn	0x44, 0, 1214, LM532-_BSP_Temp_Control
Ltmp206:
	clrf _Charge_low_power_CNT+0
LM533:
.stabn	0x44, 0, 1215, LM533-_BSP_Temp_Control
	movlw 1
	movwf _Charge_low_power_F+0
LM534:
.stabn	0x44, 0, 1216, LM534-_BSP_Temp_Control
Ltmp207:
	movlw 4
	banksel _plug_state_context
	andwf _plug_state_context+0, W
Ltmp208:
	sublw 0
	beq LBB14_16
LBB14_15:
LM535:
.stabn	0x44, 0, 1217, LM535-_BSP_Temp_Control
Ltmp209:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp210:
LBB14_16:
LM536:
.stabn	0x44, 0, 1218, LM536-_BSP_Temp_Control
	movlw 1
	banksel _CA_Test_do_no_Slepp
	movwf _CA_Test_do_no_Slepp+0
Ltmp211:
LBB14_17:
LM537:
.stabn	0x44, 0, 1220, LM537-_BSP_Temp_Control
	goto LBB14_27
Ltmp212:
LBB14_18:
LM538:
.stabn	0x44, 0, 1224, LM538-_BSP_Temp_Control
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_less_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_less_than_compare.args.+1
	movlw 62
	movwf _hex_less_than_compare.args.+2
	movlw 3
	movwf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB14_21
LBB14_19:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0xcf
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp213:
	sublw 0
	beq LBB14_21
LBB14_20:
LM539:
.stabn	0x44, 0, 1226, LM539-_BSP_Temp_Control
Ltmp214:
	bsf BSR,0
	incf _Charge_low_power_CNT+0, F
LM540:
.stabn	0x44, 0, 1227, LM540-_BSP_Temp_Control
	goto LBB14_22
Ltmp215:
LBB14_21:
LM541:
.stabn	0x44, 0, 1230, LM541-_BSP_Temp_Control
	bsf BSR,0
	clrf _Charge_low_power_CNT+0
Ltmp216:
LBB14_22:
LM542:
.stabn	0x44, 0, 1232, LM542-_BSP_Temp_Control
	movfw _Charge_low_power_CNT+0
Ltmp217:
	sublw 10
	bgt LBB14_26
LBB14_23:
LM543:
.stabn	0x44, 0, 1234, LM543-_BSP_Temp_Control
Ltmp218:
	clrf _Charge_low_power_CNT+0
LM544:
.stabn	0x44, 0, 1235, LM544-_BSP_Temp_Control
	clrf _Charge_low_power_F+0
LM545:
.stabn	0x44, 0, 1236, LM545-_BSP_Temp_Control
Ltmp219:
	movlw 4
	banksel _plug_state_context
	andwf _plug_state_context+0, W
Ltmp220:
	sublw 0
	beq LBB14_25
LBB14_24:
LM546:
.stabn	0x44, 0, 1237, LM546-_BSP_Temp_Control
Ltmp221:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp222:
LBB14_25:
LM547:
.stabn	0x44, 0, 1238, LM547-_BSP_Temp_Control
	movlw 1
	banksel _CA_Test_do_no_Slepp
	movwf _CA_Test_do_no_Slepp+0
Ltmp223:
LBB14_26:
LBB14_27:
LM548:
.stabn	0x44, 0, 1242, LM548-_BSP_Temp_Control
	bcf BSR,0
	clrf _Temp+9
LM549:
.stabn	0x44, 0, 1243, LM549-_BSP_Temp_Control
	goto LBB14_35
Ltmp224:
LBB14_28:
LM550:
.stabn	0x44, 0, 1247, LM550-_BSP_Temp_Control
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_less_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_less_than_compare.args.+1
	movlw 0xc4
	movwf _hex_less_than_compare.args.+2
	movlw 4
	movwf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB14_33
LBB14_29:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0x8e
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp225:
	sublw 0
	beq LBB14_33
LBB14_30:
LM551:
.stabn	0x44, 0, 1250, LM551-_BSP_Temp_Control
Ltmp226:
	movfw _Temp+9
	movwf _BSP_Temp_Control.temp.+2
	addlw 1
	movwf _Temp+9
Ltmp227:
	movfw _BSP_Temp_Control.temp.+2
	sublw 10
	bgt LBB14_32
LBB14_31:
LM552:
.stabn	0x44, 0, 1252, LM552-_BSP_Temp_Control
Ltmp228:
	clrf _Temp+9
LM553:
.stabn	0x44, 0, 1253, LM553-_BSP_Temp_Control
	movlw 1
	movwf _Temp+4
Ltmp229:
LBB14_32:
LM554:
.stabn	0x44, 0, 1255, LM554-_BSP_Temp_Control
	goto LBB14_34
Ltmp230:
LBB14_33:
LM555:
.stabn	0x44, 0, 1257, LM555-_BSP_Temp_Control
	clrf _Temp+9
Ltmp231:
LBB14_34:
LM556:
.stabn	0x44, 0, 1259, LM556-_BSP_Temp_Control
	clrf _Temp+8
LM557:
.stabn	0x44, 0, 1260, LM557-_BSP_Temp_Control
	bsf BSR,0
	clrf _Charge_low_power_CNT+0
Ltmp232:
LBB14_35:
LM558:
.stabn	0x44, 0, 1262, LM558-_BSP_Temp_Control
	goto LBB14_64
Ltmp233:
LBB14_36:
LM559:
.stabn	0x44, 0, 1265, LM559-_BSP_Temp_Control
	movlw 0 
	btfsc _PT15, _PT15 
	movlw 1
Ltmp234:
	andlw 1
	sublw 0
	bne LBB14_38
LBB14_37:
LM560:
.stabn	0x44, 0, 1266, LM560-_BSP_Temp_Control
Ltmp235:
	goto LBB14_64
Ltmp236:
LBB14_38:
LM561:
.stabn	0x44, 0, 1268, LM561-_BSP_Temp_Control
	movfw _Temp+1
Ltmp237:
	sublw 0
	beq LBB14_59
LBB14_39:
LM562:
.stabn	0x44, 0, 1271, LM562-_BSP_Temp_Control
Ltmp238:
	movfwl _adc_convert+30
	movwf _hex_less_than_compare.args.+0
	movfwl _adc_convert+31
	movwf _hex_less_than_compare.args.+1
	movlw 98
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	bne LBB14_41
LBB14_40:
	movfwl _adc_convert+30
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+31
	movwf _hex_greater_than_compare.args.+1
	movlw 0x9e
	movwf _hex_greater_than_compare.args.+2
	movlw 7
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp239:
	sublw 0
	beq LBB14_44
LBB14_41:
LM563:
.stabn	0x44, 0, 1273, LM563-_BSP_Temp_Control
Ltmp240:
	incf _Temp+7, F
LM564:
.stabn	0x44, 0, 1275, LM564-_BSP_Temp_Control
Ltmp241:
	movfw _Temp+7
Ltmp242:
	sublw 3
	bgt LBB14_43
LBB14_42:
LM565:
.stabn	0x44, 0, 1277, LM565-_BSP_Temp_Control
Ltmp243:
	clrf _Temp+7
LM566:
.stabn	0x44, 0, 1278, LM566-_BSP_Temp_Control
	call _BSP_Discharge_TempNG
LM567:
.stabn	0x44, 0, 1280, LM567-_BSP_Temp_Control
	call _app_power_PDO_rerest
LM568:
.stabn	0x44, 0, 1281, LM568-_BSP_Temp_Control
	call _TYPE_C_constraint_sleep
Ltmp244:
LBB14_43:
LM569:
.stabn	0x44, 0, 1283, LM569-_BSP_Temp_Control
	goto LBB14_45
Ltmp245:
LBB14_44:
LM570:
.stabn	0x44, 0, 1285, LM570-_BSP_Temp_Control
	clrf _Temp+7
Ltmp246:
LBB14_45:
LM571:
.stabn	0x44, 0, 1289, LM571-_BSP_Temp_Control
	movfwl _Port_NTC_NG_LOW_POWER_Flage+0
Ltmp247:
	sublw 0
	beq LBB14_52
LBB14_46:
LM572:
.stabn	0x44, 0, 1291, LM572-_BSP_Temp_Control
Ltmp248:
	movfwl _adc_convert+45
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+46
	movwf _hex_greater_than_compare.args.+1
	movlw 98
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp249:
	sublw 0
	beq LBB14_48
LBB14_47:
LM573:
.stabn	0x44, 0, 1293, LM573-_BSP_Temp_Control
Ltmp250:
	bsf BSR,0
	incf _Port_NTC_NG_LOW_POWER_Cnt+0, F
LM574:
.stabn	0x44, 0, 1294, LM574-_BSP_Temp_Control
	goto LBB14_49
Ltmp251:
LBB14_48:
LM575:
.stabn	0x44, 0, 1296, LM575-_BSP_Temp_Control
	bsf BSR,0
	clrf _Port_NTC_NG_LOW_POWER_Cnt+0
Ltmp252:
LBB14_49:
LM576:
.stabn	0x44, 0, 1298, LM576-_BSP_Temp_Control
	movfw _Port_NTC_NG_LOW_POWER_Cnt+0
Ltmp253:
	sublw 20
	bgt LBB14_51
LBB14_50:
LM577:
.stabn	0x44, 0, 1300, LM577-_BSP_Temp_Control
Ltmp254:
	clrf _Port_NTC_NG_LOW_POWER_Cnt+0
LM578:
.stabn	0x44, 0, 1301, LM578-_BSP_Temp_Control
	clrf _Port_NTC_NG_LOW_POWER_Flage+0
LM579:
.stabn	0x44, 0, 1303, LM579-_BSP_Temp_Control
	call _app_power_capabilities_switch_h
Ltmp255:
LBB14_51:
LM580:
.stabn	0x44, 0, 1305, LM580-_BSP_Temp_Control
	goto LBB14_58
Ltmp256:
LBB14_52:
LM581:
.stabn	0x44, 0, 1308, LM581-_BSP_Temp_Control
	movfwl _adc_convert+45
	movwf _hex_less_than_compare.args.+0
	movfwl _adc_convert+46
	movwf _hex_less_than_compare.args.+1
	movlw 43
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
Ltmp257:
	sublw 0
	beq LBB14_54
LBB14_53:
LM582:
.stabn	0x44, 0, 1310, LM582-_BSP_Temp_Control
Ltmp258:
	bsf BSR,0
	incf _Port_NTC_NG_LOW_POWER_Cnt+0, F
LM583:
.stabn	0x44, 0, 1311, LM583-_BSP_Temp_Control
	goto LBB14_55
Ltmp259:
LBB14_54:
LM584:
.stabn	0x44, 0, 1313, LM584-_BSP_Temp_Control
	bsf BSR,0
	clrf _Port_NTC_NG_LOW_POWER_Cnt+0
Ltmp260:
LBB14_55:
LM585:
.stabn	0x44, 0, 1315, LM585-_BSP_Temp_Control
	movfw _Port_NTC_NG_LOW_POWER_Cnt+0
Ltmp261:
	sublw 20
	bgt LBB14_57
LBB14_56:
LM586:
.stabn	0x44, 0, 1317, LM586-_BSP_Temp_Control
Ltmp262:
	clrf _Port_NTC_NG_LOW_POWER_Cnt+0
LM587:
.stabn	0x44, 0, 1318, LM587-_BSP_Temp_Control
	movlw 1
	movwf _Port_NTC_NG_LOW_POWER_Flage+0
LM588:
.stabn	0x44, 0, 1320, LM588-_BSP_Temp_Control
	call _app_power_capabilities_switch_h
Ltmp263:
LBB14_57:
LBB14_58:
LM589:
.stabn	0x44, 0, 1326, LM589-_BSP_Temp_Control
	goto LBB14_63
Ltmp264:
LBB14_59:
LM590:
.stabn	0x44, 0, 1330, LM590-_BSP_Temp_Control
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_less_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_less_than_compare.args.+1
	movlw 0xc3
	movwf _hex_less_than_compare.args.+2
	movlw 6
	movwf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB14_62
LBB14_60:
	movfw _BSP_Temp_Control.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_Temp_Control.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 118
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp265:
	sublw 0
	beq LBB14_62
LBB14_61:
LM591:
.stabn	0x44, 0, 1331, LM591-_BSP_Temp_Control
Ltmp266:
	call _BSP_Discharge_TempOK
Ltmp267:
LBB14_62:
LM592:
.stabn	0x44, 0, 1332, LM592-_BSP_Temp_Control
	clrf _Temp+7
Ltmp268:
LBB14_63:
LBB14_64:
LM593:
.stabn	0x44, 0, 1335, LM593-_BSP_Temp_Control
	banksel 0
	return
Ltmp269:
Lfunc_end28:
Lfunc_end29:
LM594:
.stabn 0xc0,0,0, LM517-_BSP_Temp_Control
.stabs "NTC_Slide:2;",0x80,0,0,_BSP_Temp_Control.temp.+0
.stabn 0xe0,0,0, LM593-_BSP_Temp_Control
.stabf LM594-_BSP_Temp_Control

	_BSP_Charge_TempNG_sec .section rom
	.global	_BSP_Charge_TempNG
_BSP_Charge_TempNG:
Lfunc_begin30:
.stabs "BSP_Charge_TempNG:f:16", 0x24,0,0,_BSP_Charge_TempNG
.stabn 0xc0, 0, 0, _BSP_Charge_TempNG
.stabn 0xe0, 0, 0, _BSP_Charge_TempNG
LM595:
.stabn	0x44, 0, 1343, LM595-_BSP_Charge_TempNG
Lfunc_begin31:
LM596:
.stabn	0x44, 0, 1344, LM596-_BSP_Charge_TempNG
	banksel 0
	clrf _Temp+4
LM597:
.stabn	0x44, 0, 1345, LM597-_BSP_Charge_TempNG
	return
Ltmp270:
Lfunc_end30:
Lfunc_end31:
LM598:
.stabf LM598-_BSP_Charge_TempNG

	_BSP_Discharge_TempNG_sec .section rom
	.global	_BSP_Discharge_TempNG
_BSP_Discharge_TempNG:
Lfunc_begin32:
.stabs "BSP_Discharge_TempNG:f:16", 0x24,0,0,_BSP_Discharge_TempNG
.stabn 0xc0, 0, 0, _BSP_Discharge_TempNG
.stabn 0xe0, 0, 0, _BSP_Discharge_TempNG
LM599:
.stabn	0x44, 0, 1351, LM599-_BSP_Discharge_TempNG
Lfunc_begin33:
LM600:
.stabn	0x44, 0, 1352, LM600-_BSP_Discharge_TempNG
	banksel 0
	clrf _Temp+1
LM601:
.stabn	0x44, 0, 1353, LM601-_BSP_Discharge_TempNG
	movlw 1
	banksel _LCD_display_3S_Cnt
	movwf _LCD_display_3S_Cnt+0
	clrf _LCD_display_3S_Cnt+1
LM602:
.stabn	0x44, 0, 1354, LM602-_BSP_Discharge_TempNG
	bcf BSR,1
	clrf _WHITE_ON+0
LM603:
.stabn	0x44, 0, 1358, LM603-_BSP_Discharge_TempNG
	banksel _F_A1_ON
	clrf _F_A1_ON+0
LM604:
.stabn	0x44, 0, 1359, LM604-_BSP_Discharge_TempNG
	bcf BSR,1
	clrf _Mod_Dis_USBA_EN.args.+0
	call _Mod_Dis_USBA_EN
LM605:
.stabn	0x44, 0, 1363, LM605-_BSP_Discharge_TempNG
	bsf BSR,0
	clrf _SOS_LEVEL+0
LM606:
.stabn	0x44, 0, 1364, LM606-_BSP_Discharge_TempNG
	clrf _WHITE_ON+0
LM607:
.stabn	0x44, 0, 1365, LM607-_BSP_Discharge_TempNG
	clrf _RED_ON+0
LM608:
.stabn	0x44, 0, 1367, LM608-_BSP_Discharge_TempNG
	banksel _inoutput_data
	clrf _inoutput_data+6
LM609:
.stabn	0x44, 0, 1368, LM609-_BSP_Discharge_TempNG
	clrf _inoutput_data+8
LM610:
.stabn	0x44, 0, 1371, LM610-_BSP_Discharge_TempNG
	clrf _inoutput_data+13
LM611:
.stabn	0x44, 0, 1372, LM611-_BSP_Discharge_TempNG
	clrf _inoutput_data+14
LM612:
.stabn	0x44, 0, 1353, LM612-_BSP_Discharge_TempNG
	movlw 1
LM613:
.stabn	0x44, 0, 1374, LM613-_BSP_Discharge_TempNG
	bcf BSR,1
	movwf _Discharge_MinCur+0
LM614:
.stabn	0x44, 0, 1375, LM614-_BSP_Discharge_TempNG
	movlw 2
	movwf _sleepcnt+0
LM615:
.stabn	0x44, 0, 1376, LM615-_BSP_Discharge_TempNG
	movlw 31
	movwf _discharge_displed+0
LM616:
.stabn	0x44, 0, 1379, LM616-_BSP_Discharge_TempNG
	return
Ltmp271:
Lfunc_end32:
Lfunc_end33:
LM617:
.stabf LM617-_BSP_Discharge_TempNG

	_app_power_capabilities_switch_h_sec .section rom
	.global	_app_power_capabilities_switch_h
_app_power_capabilities_switch_h:
Lfunc_begin34:
.stabs "app_power_capabilities_switch_h:f:16", 0x24,0,0,_app_power_capabilities_switch_h
.stabn 0xc0, 0, 0, _app_power_capabilities_switch_h
.stabn 0xe0, 0, 0, _app_power_capabilities_switch_h
LM618:
.stabn	0x44, 0, 2548, LM618-_app_power_capabilities_switch_h
Lfunc_begin35:
LM619:
.stabn	0x44, 0, 2549, LM619-_app_power_capabilities_switch_h
	banksel 0
	movlw 5
	movwfl _h_pd+6
LM620:
.stabn	0x44, 0, 2551, LM620-_app_power_capabilities_switch_h
Ltmp272:
	movfwl _Port_NTC_NG_LOW_POWER_Flage+0
Ltmp273:
	sublw 0
	bne LBB17_4
LBB17_1:
LM621:
.stabn	0x44, 0, 2552, LM621-_app_power_capabilities_switch_h
Ltmp274:
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
	goto LBB17_7
Ltmp275:
LBB17_4:
LM622:
.stabn	0x44, 0, 2554, LM622-_app_power_capabilities_switch_h
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_18+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_18+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp276:
LBB17_7:
LM623:
.stabn	0x44, 0, 2556, LM623-_app_power_capabilities_switch_h
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp277:
	sublw 0
	beq LBB17_9
LBB17_8:
LM624:
.stabn	0x44, 0, 2558, LM624-_app_power_capabilities_switch_h
Ltmp278:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp279:
LBB17_9:
LM625:
.stabn	0x44, 0, 2560, LM625-_app_power_capabilities_switch_h
	banksel 0
	return
Ltmp280:
Lfunc_end34:
Lfunc_end35:
LM626:
.stabf LM626-_app_power_capabilities_switch_h

	_BSP_Discharge_TempOK_sec .section rom
	.global	_BSP_Discharge_TempOK
_BSP_Discharge_TempOK:
Lfunc_begin36:
.stabs "BSP_Discharge_TempOK:f:16", 0x24,0,0,_BSP_Discharge_TempOK
.stabn 0xc0, 0, 0, _BSP_Discharge_TempOK
.stabn 0xe0, 0, 0, _BSP_Discharge_TempOK
LM627:
.stabn	0x44, 0, 1385, LM627-_BSP_Discharge_TempOK
Lfunc_begin37:
	banksel 0
	movlw 1
LM628:
.stabn	0x44, 0, 1386, LM628-_BSP_Discharge_TempOK
Ltmp281:
	movwf _Temp+1
LM629:
.stabn	0x44, 0, 1387, LM629-_BSP_Discharge_TempOK
	return
Ltmp282:
Lfunc_end36:
Lfunc_end37:
LM630:
.stabf LM630-_BSP_Discharge_TempOK

	_V_PWM_init_sec .section rom
	.global	_V_PWM_init
_V_PWM_init:
Lfunc_begin38:
.stabs "V_PWM_init:f:16", 0x24,0,0,_V_PWM_init
.stabn 0xc0, 0, 0, _V_PWM_init
.stabn 0xe0, 0, 0, _V_PWM_init
LM631:
.stabn	0x44, 0, 1389, LM631-_V_PWM_init
Lfunc_begin39:
LM632:
.stabn	0x44, 0, 1414, LM632-_V_PWM_init
	banksel 0
	return
Ltmp283:
Lfunc_end38:
Lfunc_end39:
LM633:
.stabf LM633-_V_PWM_init

	_I_PWM_init_sec .section rom
	.global	_I_PWM_init
_I_PWM_init:
Lfunc_begin40:
.stabs "I_PWM_init:f:16", 0x24,0,0,_I_PWM_init
.stabn 0xc0, 0, 0, _I_PWM_init
.stabn 0xe0, 0, 0, _I_PWM_init
LM634:
.stabn	0x44, 0, 1416, LM634-_I_PWM_init
Lfunc_begin41:
LM635:
.stabn	0x44, 0, 1457, LM635-_I_PWM_init
	banksel 0
	return
Ltmp284:
Lfunc_end40:
Lfunc_end41:
LM636:
.stabf LM636-_I_PWM_init

	_CA_CB_Port_Statu_sec .section rom
	.global	_CA_CB_Port_Statu
_CA_CB_Port_Statu:
Lfunc_begin42:
.stabs "CA_CB_Port_Statu:f:16", 0x24,0,0,_CA_CB_Port_Statu
.stabn 0xc0, 0, 0, _CA_CB_Port_Statu
.stabn 0xe0, 0, 0, _CA_CB_Port_Statu
LM637:
.stabn	0x44, 0, 1496, LM637-_CA_CB_Port_Statu
Lfunc_begin43:
LM638:
.stabn	0x44, 0, 1499, LM638-_CA_CB_Port_Statu
	banksel 0
	movfwl _adc_convert+97
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+98
	movwf _hex_greater_than_compare.args.+1
	clrf _hex_greater_than_compare.args.+2
	movlw 8
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp285:
	sublw 0
	beq LBB21_2
LBB21_1:
LM639:
.stabn	0x44, 0, 1500, LM639-_CA_CB_Port_Statu
Ltmp286:
	setf _CA_CB_Port_Statu.temp.+0
	goto LBB21_3
LBB21_2:
LM640:
.stabn	0x44, 0, 1502, LM640-_CA_CB_Port_Statu
	movfwl _adc_convert+97
	SrlTwo
	movwf _CA_CB_Port_Statu.temp.+1
	movfwl _adc_convert+98
	ShlSix
	iorwf _CA_CB_Port_Statu.temp.+1, W
	movwf _CA_CB_Port_Statu.temp.+0
Ltmp287:
LBB21_3:
LM641:
.stabn	0x44, 0, 1505, LM641-_CA_CB_Port_Statu
	movfw _CA_CB_Port_Statu.temp.+0
Ltmp288:
	sublw 39
	bgt LBB21_5
LBB21_4:
LM642:
.stabn	0x44, 0, 1507, LM642-_CA_CB_Port_Statu
Ltmp289:
	movlw 1
	movwfl _CA_IN_Flage+0
LM643:
.stabn	0x44, 0, 1508, LM643-_CA_CB_Port_Statu
	goto LBB21_6
Ltmp290:
LBB21_5:
LM644:
.stabn	0x44, 0, 1510, LM644-_CA_CB_Port_Statu
	bsf BSR,1
	clrf _CA_IN_Flage+0
Ltmp291:
LBB21_6:
LM645:
.stabn	0x44, 0, 1534, LM645-_CA_CB_Port_Statu
	banksel _Type_ca_charge_in
	movfw _Type_ca_charge_in+0
Ltmp292:
	sublw 0
	beq LBB21_15
LBB21_7:
LM646:
.stabn	0x44, 0, 1536, LM646-_CA_CB_Port_Statu
Ltmp293:
	movfwl _VBUS_8_date+0
Ltmp294:
	sublw 40
	blt LBB21_13
LBB21_8:
LM647:
.stabn	0x44, 0, 1538, LM647-_CA_CB_Port_Statu
Ltmp295:
	movfwl _Charge_OCP_Flage+0
Ltmp296:
	sublw 0
	bne LBB21_10
LBB21_9:
LM648:
.stabn	0x44, 0, 1539, LM648-_CA_CB_Port_Statu
Ltmp297:
	movlw 1
	bsf BSR,0
	addwf _Exit_Charge_Cnt+0, F
	movlw 0
	addwfc _Exit_Charge_Cnt+1, W
	movwf _Exit_Charge_Cnt+1
Ltmp298:
LBB21_10:
LM649:
.stabn	0x44, 0, 1541, LM649-_CA_CB_Port_Statu
	banksel _Exit_Charge_Cnt
	movfw _Exit_Charge_Cnt+0
	movwfl _hex_greater_than_compare.args.+0
	movfw _Exit_Charge_Cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0xd0
	movwf _hex_greater_than_compare.args.+2
	movlw 7
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp299:
	sublw 0
	beq LBB21_12
LBB21_11:
LM650:
.stabn	0x44, 0, 1544, LM650-_CA_CB_Port_Statu
Ltmp300:
	bsf BSR,1
	clrf _CA_IN_Flage+0
LM651:
.stabn	0x44, 0, 1545, LM651-_CA_CB_Port_Statu
	clrf _MirB_IN_Flage+0
Ltmp301:
LBB21_12:
LM652:
.stabn	0x44, 0, 1547, LM652-_CA_CB_Port_Statu
	goto LBB21_14
Ltmp302:
LBB21_13:
LM653:
.stabn	0x44, 0, 1549, LM653-_CA_CB_Port_Statu
	bsf BSR,0
	clrf _Exit_Charge_Cnt+0
	clrf _Exit_Charge_Cnt+1
Ltmp303:
LBB21_14:
LBB21_15:
LM654:
.stabn	0x44, 0, 1567, LM654-_CA_CB_Port_Statu
	banksel 0
	return
Ltmp304:
Lfunc_end42:
Lfunc_end43:
LM655:
.stabn 0xc0,0,0, LM638-_CA_CB_Port_Statu
.stabs "data_8bit:10;",0x80,0,0,_CA_CB_Port_Statu.temp.+0
.stabn 0xe0,0,0, LM654-_CA_CB_Port_Statu
.stabf LM655-_CA_CB_Port_Statu

	_BSP_DisCharge_SmallCur_sec .section rom
	.global	_BSP_DisCharge_SmallCur
_BSP_DisCharge_SmallCur:
Lfunc_begin44:
.stabs "BSP_DisCharge_SmallCur:f:16", 0x24,0,0,_BSP_DisCharge_SmallCur
.stabn 0xc0, 0, 0, _BSP_DisCharge_SmallCur
.stabn 0xe0, 0, 0, _BSP_DisCharge_SmallCur
LM656:
.stabn	0x44, 0, 1572, LM656-_BSP_DisCharge_SmallCur
Lfunc_begin45:
LM657:
.stabn	0x44, 0, 1574, LM657-_BSP_DisCharge_SmallCur
	banksel 0
	movfw _R_SysMode_OK+0
Ltmp305:
	sublw 1
	bne LBB22_2
LBB22_1:
LM658:
.stabn	0x44, 0, 1575, LM658-_BSP_DisCharge_SmallCur
Ltmp306:
	goto LBB22_52
Ltmp307:
LBB22_2:
LM659:
.stabn	0x44, 0, 1578, LM659-_BSP_DisCharge_SmallCur
	movlw 1
	bsf BSR,0
	addwf _open_to_12hour_Cnt+0, F
LM660:
.stabn	0x44, 0, 1581, LM660-_BSP_DisCharge_SmallCur
Ltmp308:
	movfw _open_to_12hour_Cnt+0
	movwfl _hex_greater_than_compare.args.+0
Ltmp309:
LM661:
.stabn	0x44, 0, 1578, LM661-_BSP_DisCharge_SmallCur
	movlw 0
	addwfc _open_to_12hour_Cnt+1, F
LM662:
.stabn	0x44, 0, 1581, LM662-_BSP_DisCharge_SmallCur
Ltmp310:
	movfw _open_to_12hour_Cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0xc0
	movwf _hex_greater_than_compare.args.+2
	movlw 0xa8
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp311:
	sublw 0
	beq LBB22_4
LBB22_3:
LM663:
.stabn	0x44, 0, 1583, LM663-_BSP_DisCharge_SmallCur
Ltmp312:
	bsf BSR,0
	clrf _open_to_12hour_Cnt+0
	clrf _open_to_12hour_Cnt+1
LM664:
.stabn	0x44, 0, 1584, LM664-_BSP_DisCharge_SmallCur
	call _TYPE_C_constraint_sleep
LM665:
.stabn	0x44, 0, 1585, LM665-_BSP_DisCharge_SmallCur
	movlw 1
	movwfl _Bat_low_sleep_flage+0
Ltmp313:
LBB22_4:
LM666:
.stabn	0x44, 0, 1588, LM666-_BSP_DisCharge_SmallCur
	movfwl _f_car_jump+0
Ltmp314:
	sublw 0
	beq LBB22_6
LBB22_5:
LM667:
.stabn	0x44, 0, 1590, LM667-_BSP_DisCharge_SmallCur
Ltmp315:
	clrf _Discharge_MinCur+0
LM668:
.stabn	0x44, 0, 1591, LM668-_BSP_DisCharge_SmallCur
	clrf _R_DisCharge_SmallCurCnt+0
LM669:
.stabn	0x44, 0, 1592, LM669-_BSP_DisCharge_SmallCur
	clrf _R_DisCharge_OutTime+0
LM670:
.stabn	0x44, 0, 1593, LM670-_BSP_DisCharge_SmallCur
	bsf BSR,0
	clrf _TYPEC_sleep_distime_cnt+0
LM671:
.stabn	0x44, 0, 1594, LM671-_BSP_DisCharge_SmallCur
	goto LBB22_52
Ltmp316:
LBB22_6:
LM672:
.stabn	0x44, 0, 1597, LM672-_BSP_DisCharge_SmallCur
	movfwl _inoutput_data+8
Ltmp317:
	sublw 0
	bne LBB22_17
LBB22_7:
LM673:
.stabn	0x44, 0, 1599, LM673-_BSP_DisCharge_SmallCur
Ltmp318:
	bsf BSR,0
	clrf _adc_convert+6
	clrf _adc_convert+7
LM674:
.stabn	0x44, 0, 1603, LM674-_BSP_DisCharge_SmallCur
Ltmp319:
	movfw _hour2_dis_flage+0
Ltmp320:
	sublw 0
	bne LBB22_16
LBB22_8:
LM675:
.stabn	0x44, 0, 1607, LM675-_BSP_DisCharge_SmallCur
Ltmp321:
	movfw _adc_convert+19
	movwfl _hex_less_than_compare.args.+0
	movfw _adc_convert+20
	bcf BSR,0
	movwf _hex_less_than_compare.args.+1
	movlw 12
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB22_12
LBB22_9:
	movfwl _WHITE_ON+0
	sublw 0
	bne LBB22_12
LBB22_10:
	movfwl _RED_ON+0
Ltmp322:
	sublw 0
	bne LBB22_12
LBB22_11:
LM676:
.stabn	0x44, 0, 1608, LM676-_BSP_DisCharge_SmallCur
Ltmp323:
	movlw 1
	bsf BSR,0
	addwf _hour2_dis_cnt+0, F
	movlw 0
	addwfc _hour2_dis_cnt+1, W
	movwf _hour2_dis_cnt+1
	goto LBB22_13
LBB22_12:
LM677:
.stabn	0x44, 0, 1611, LM677-_BSP_DisCharge_SmallCur
	bsf BSR,0
	clrf _hour2_dis_cnt+0
	clrf _hour2_dis_cnt+1
Ltmp324:
LBB22_13:
LM678:
.stabn	0x44, 0, 1613, LM678-_BSP_DisCharge_SmallCur
	movfw _hour2_dis_cnt+0
	movwfl _hex_greater_than_compare.args.+0
	movfw _hour2_dis_cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0x90
	movwf _hex_greater_than_compare.args.+2
	movlw 26
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp325:
	sublw 0
	beq LBB22_15
LBB22_14:
LM679:
.stabn	0x44, 0, 1616, LM679-_BSP_DisCharge_SmallCur
Ltmp326:
	bsf BSR,0
	clrf _hour2_dis_cnt+0
	clrf _hour2_dis_cnt+1
LM680:
.stabn	0x44, 0, 1618, LM680-_BSP_DisCharge_SmallCur
	movlw 1
LM681:
.stabn	0x44, 0, 1617, LM681-_BSP_DisCharge_SmallCur
	movwf _hour2_dis_flage+0
LM682:
.stabn	0x44, 0, 1618, LM682-_BSP_DisCharge_SmallCur
	movwfl _Discharge_MinCur+0
Ltmp327:
LBB22_15:
LBB22_16:
LBB22_17:
LM683:
.stabn	0x44, 0, 1624, LM683-_BSP_DisCharge_SmallCur
	banksel _adc_convert
	movfw _adc_convert+6
	movwfl _hex_less_than_compare.args.+0
	movfw _adc_convert+7
	bcf BSR,0
	movwf _hex_less_than_compare.args.+1
	movlw 6
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB22_29
LBB22_18:
LM684:
.stabn	0x44, 0, 1625, LM684-_BSP_DisCharge_SmallCur
	movfwl _adc_convert+19
	movwf _hex_less_than_compare.args.+0
	movfwl _adc_convert+20
	movwf _hex_less_than_compare.args.+1
	movlw 8
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	beq LBB22_29
LBB22_19:
	movfwl _WHITE_ON+0
	sublw 0
	bne LBB22_29
LBB22_20:
	movfwl _RED_ON+0
Ltmp328:
LM685:
.stabn	0x44, 0, 1624, LM685-_BSP_DisCharge_SmallCur
	sublw 0
	bne LBB22_29
LBB22_21:
LM686:
.stabn	0x44, 0, 1631, LM686-_BSP_DisCharge_SmallCur
Ltmp329:
	bsf BSR,0
	clrf _TYPEC_sleep_distime_cnt+0
LM687:
.stabn	0x44, 0, 1632, LM687-_BSP_DisCharge_SmallCur
Ltmp330:
	movlw 8
	banksel _plug_state_context
	andwf _plug_state_context+0, W
Ltmp331:
	sublw 0
	beq LBB22_25
LBB22_22:
LM688:
.stabn	0x44, 0, 1634, LM688-_BSP_DisCharge_SmallCur
Ltmp332:
	movlw 1
	banksel _TYPEC_sleep_time_cnt
	addwf _TYPEC_sleep_time_cnt+0, F
LM689:
.stabn	0x44, 0, 1638, LM689-_BSP_DisCharge_SmallCur
Ltmp333:
	movfw _TYPEC_sleep_time_cnt+0
	movwfl _hex_greater_than_compare.args.+0
Ltmp334:
LM690:
.stabn	0x44, 0, 1634, LM690-_BSP_DisCharge_SmallCur
	movlw 0
	addwfc _TYPEC_sleep_time_cnt+1, F
LM691:
.stabn	0x44, 0, 1638, LM691-_BSP_DisCharge_SmallCur
Ltmp335:
	movfw _TYPEC_sleep_time_cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0xc8
	movwf _hex_greater_than_compare.args.+2
	movlw 25
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp336:
	sublw 0
	beq LBB22_24
LBB22_23:
LM692:
.stabn	0x44, 0, 1640, LM692-_BSP_DisCharge_SmallCur
Ltmp337:
	bsf BSR,0
	clrf _TYPEC_sleep_time_cnt+0
	clrf _TYPEC_sleep_time_cnt+1
LM693:
.stabn	0x44, 0, 1641, LM693-_BSP_DisCharge_SmallCur
	call _TYPE_C_constraint_sleep
Ltmp338:
LBB22_24:
LM694:
.stabn	0x44, 0, 1643, LM694-_BSP_DisCharge_SmallCur
	goto LBB22_28
Ltmp339:
LBB22_25:
LM695:
.stabn	0x44, 0, 1646, LM695-_BSP_DisCharge_SmallCur
	bcf BSR,1
	incf _R_DisCharge_SmallCurCnt+0, F
LM696:
.stabn	0x44, 0, 1648, LM696-_BSP_DisCharge_SmallCur
Ltmp340:
	movfw _R_DisCharge_SmallCurCnt+0
Ltmp341:
	sublw 60
	bgt LBB22_27
LBB22_26:
LM697:
.stabn	0x44, 0, 1651, LM697-_BSP_DisCharge_SmallCur
Ltmp342:
	movlw 1
	movwf _Discharge_MinCur+0
LM698:
.stabn	0x44, 0, 1652, LM698-_BSP_DisCharge_SmallCur
	clrf _R_DisCharge_SmallCurCnt+0
LM699:
.stabn	0x44, 0, 1653, LM699-_BSP_DisCharge_SmallCur
	movlw 3
	movwf _sleepcnt+0
Ltmp343:
LBB22_27:
LBB22_28:
LM700:
.stabn	0x44, 0, 1665, LM700-_BSP_DisCharge_SmallCur
	goto LBB22_37
Ltmp344:
LBB22_29:
LM701:
.stabn	0x44, 0, 1669, LM701-_BSP_DisCharge_SmallCur
	movfwl _adc_convert+6
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+7
	movwf _hex_greater_than_compare.args.+1
	movlw 9
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
	sublw 0
	bne LBB22_33
LBB22_30:
LM702:
.stabn	0x44, 0, 1670, LM702-_BSP_DisCharge_SmallCur
	movfwl _adc_convert+19
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+20
	movwf _hex_greater_than_compare.args.+1
	movlw 11
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
	sublw 0
	bne LBB22_33
LBB22_31:
	movfwl _WHITE_ON+0
	sublw 0
	bne LBB22_33
LBB22_32:
	movfwl _RED_ON+0
Ltmp345:
LM703:
.stabn	0x44, 0, 1669, LM703-_BSP_DisCharge_SmallCur
	sublw 0
	beq LBB22_36
LBB22_33:
LM704:
.stabn	0x44, 0, 1672, LM704-_BSP_DisCharge_SmallCur
Ltmp346:
	movfwl _hour2_dis_flage+0
Ltmp347:
	sublw 0
	bne LBB22_35
LBB22_34:
LM705:
.stabn	0x44, 0, 1673, LM705-_BSP_DisCharge_SmallCur
Ltmp348:
	clrf _Discharge_MinCur+0
Ltmp349:
LBB22_35:
LBB22_36:
LM706:
.stabn	0x44, 0, 1675, LM706-_BSP_DisCharge_SmallCur
	clrf _R_DisCharge_SmallCurCnt+0
LM707:
.stabn	0x44, 0, 1676, LM707-_BSP_DisCharge_SmallCur
	clrf _R_DisCharge_OutTime+0
Ltmp350:
LBB22_37:
LM708:
.stabn	0x44, 0, 1708, LM708-_BSP_DisCharge_SmallCur
	movfwl _TYPE_CA_18W_Flage+0
Ltmp351:
	sublw 0
	beq LBB22_45
LBB22_38:
LM709:
.stabn	0x44, 0, 1711, LM709-_BSP_DisCharge_SmallCur
Ltmp352:
	movfwl _adc_convert+19
	movwf _hex_less_than_compare.args.+0
	movfwl _adc_convert+20
	movwf _hex_less_than_compare.args.+1
	movlw 8
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
Ltmp353:
	sublw 0
	beq LBB22_44
LBB22_39:
LM710:
.stabn	0x44, 0, 1713, LM710-_BSP_DisCharge_SmallCur
Ltmp354:
	bsf BSR,0
	incf _TYPE_CA_18W_Flage_Cnt+0, F
LM711:
.stabn	0x44, 0, 1714, LM711-_BSP_DisCharge_SmallCur
Ltmp355:
	movfw _TYPE_CA_18W_Flage_Cnt+0
Ltmp356:
	sublw 5
	bgt LBB22_43
LBB22_40:
LM712:
.stabn	0x44, 0, 1716, LM712-_BSP_DisCharge_SmallCur
Ltmp357:
	clrf _TYPE_CA_18W_Flage_Cnt+0
LM713:
.stabn	0x44, 0, 1717, LM713-_BSP_DisCharge_SmallCur
	clrf _TYPE_CA_18W_Flage+0
LM714:
.stabn	0x44, 0, 1718, LM714-_BSP_DisCharge_SmallCur
	call _app_power_capabilities_switch_h
LM715:
.stabn	0x44, 0, 1719, LM715-_BSP_DisCharge_SmallCur
Ltmp358:
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp359:
	sublw 0
	beq LBB22_42
LBB22_41:
LM716:
.stabn	0x44, 0, 1720, LM716-_BSP_DisCharge_SmallCur
Ltmp360:
	movlw 1
	movwfl _TYPE_C_Waittime_Cnt+0
Ltmp361:
LBB22_42:
LBB22_43:
LBB22_44:
LM717:
.stabn	0x44, 0, 1723, LM717-_BSP_DisCharge_SmallCur
	goto LBB22_52
Ltmp362:
LBB22_45:
LM718:
.stabn	0x44, 0, 1727, LM718-_BSP_DisCharge_SmallCur
	movfwl _adc_convert+19
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+20
	movwf _hex_greater_than_compare.args.+1
	movlw 22
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp363:
	sublw 0
	beq LBB22_51
LBB22_46:
LM719:
.stabn	0x44, 0, 1729, LM719-_BSP_DisCharge_SmallCur
Ltmp364:
	bsf BSR,0
	incf _TYPE_CA_18W_Flage_Cnt+0, F
LM720:
.stabn	0x44, 0, 1730, LM720-_BSP_DisCharge_SmallCur
Ltmp365:
	movfw _TYPE_CA_18W_Flage_Cnt+0
Ltmp366:
	sublw 3
	bgt LBB22_50
LBB22_47:
LM721:
.stabn	0x44, 0, 1732, LM721-_BSP_DisCharge_SmallCur
Ltmp367:
	clrf _TYPE_CA_18W_Flage_Cnt+0
LM722:
.stabn	0x44, 0, 1733, LM722-_BSP_DisCharge_SmallCur
	movlw 1
	movwf _TYPE_CA_18W_Flage+0
LM723:
.stabn	0x44, 0, 1734, LM723-_BSP_DisCharge_SmallCur
	call _app_power_capabilities_switch_l
LM724:
.stabn	0x44, 0, 1736, LM724-_BSP_DisCharge_SmallCur
Ltmp368:
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp369:
	sublw 0
	beq LBB22_49
LBB22_48:
LM725:
.stabn	0x44, 0, 1737, LM725-_BSP_DisCharge_SmallCur
Ltmp370:
	movlw 1
	movwfl _TYPE_C_Waittime_Cnt+0
Ltmp371:
LBB22_49:
LBB22_50:
LBB22_51:
LBB22_52:
LM726:
.stabn	0x44, 0, 1741, LM726-_BSP_DisCharge_SmallCur
	banksel 0
	return
Ltmp372:
Lfunc_end44:
Lfunc_end45:
LM727:
.stabf LM727-_BSP_DisCharge_SmallCur

	_app_power_capabilities_switch_l_sec .section rom
	.global	_app_power_capabilities_switch_l
_app_power_capabilities_switch_l:
Lfunc_begin46:
.stabs "app_power_capabilities_switch_l:f:16", 0x24,0,0,_app_power_capabilities_switch_l
.stabn 0xc0, 0, 0, _app_power_capabilities_switch_l
.stabn 0xe0, 0, 0, _app_power_capabilities_switch_l
LM728:
.stabn	0x44, 0, 2593, LM728-_app_power_capabilities_switch_l
Lfunc_begin47:
LM729:
.stabn	0x44, 0, 2594, LM729-_app_power_capabilities_switch_l
	banksel 0
	movlw 5
	movwfl _h_pd+6
LM730:
.stabn	0x44, 0, 2595, LM730-_app_power_capabilities_switch_l
Ltmp373:
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_l.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_l.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_18+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_18+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp374:
LM731:
.stabn	0x44, 0, 2597, LM731-_app_power_capabilities_switch_l
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp375:
	sublw 0
	beq LBB23_4
LBB23_3:
LM732:
.stabn	0x44, 0, 2599, LM732-_app_power_capabilities_switch_l
Ltmp376:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp377:
LBB23_4:
LM733:
.stabn	0x44, 0, 2601, LM733-_app_power_capabilities_switch_l
	banksel 0
	return
Ltmp378:
Lfunc_end46:
Lfunc_end47:
LM734:
.stabf LM734-_app_power_capabilities_switch_l

	_BSP_DisCharge_SmallCur_Deal_sec .section rom
	.global	_BSP_DisCharge_SmallCur_Deal
_BSP_DisCharge_SmallCur_Deal:
Lfunc_begin48:
.stabs "BSP_DisCharge_SmallCur_Deal:f:16", 0x24,0,0,_BSP_DisCharge_SmallCur_Deal
.stabn 0xc0, 0, 0, _BSP_DisCharge_SmallCur_Deal
.stabn 0xe0, 0, 0, _BSP_DisCharge_SmallCur_Deal
LM735:
.stabn	0x44, 0, 1746, LM735-_BSP_DisCharge_SmallCur_Deal
Lfunc_begin49:
LM736:
.stabn	0x44, 0, 1748, LM736-_BSP_DisCharge_SmallCur_Deal
	banksel 0
	bsf BSR,0
	clrf _TYPEC_sleep_distime_cnt+0
LM737:
.stabn	0x44, 0, 1749, LM737-_BSP_DisCharge_SmallCur_Deal
Ltmp379:
	movlw 8
	banksel _plug_state_context
	andwf _plug_state_context+0, W
Ltmp380:
	sublw 0
	beq LBB24_4
LBB24_1:
LM738:
.stabn	0x44, 0, 1751, LM738-_BSP_DisCharge_SmallCur_Deal
Ltmp381:
	movlw 1
	banksel _TYPEC_sleep_time_cnt
	addwf _TYPEC_sleep_time_cnt+0, F
LM739:
.stabn	0x44, 0, 1755, LM739-_BSP_DisCharge_SmallCur_Deal
Ltmp382:
	movfw _TYPEC_sleep_time_cnt+0
	movwfl _hex_greater_than_compare.args.+0
Ltmp383:
LM740:
.stabn	0x44, 0, 1751, LM740-_BSP_DisCharge_SmallCur_Deal
	movlw 0
	addwfc _TYPEC_sleep_time_cnt+1, F
LM741:
.stabn	0x44, 0, 1755, LM741-_BSP_DisCharge_SmallCur_Deal
Ltmp384:
	movfw _TYPEC_sleep_time_cnt+1
	bcf BSR,0
	movwf _hex_greater_than_compare.args.+1
	movlw 0xc8
	movwf _hex_greater_than_compare.args.+2
	movlw 25
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp385:
	sublw 0
	beq LBB24_3
LBB24_2:
LM742:
.stabn	0x44, 0, 1757, LM742-_BSP_DisCharge_SmallCur_Deal
Ltmp386:
	bsf BSR,0
	clrf _TYPEC_sleep_time_cnt+0
	clrf _TYPEC_sleep_time_cnt+1
LM743:
.stabn	0x44, 0, 1758, LM743-_BSP_DisCharge_SmallCur_Deal
	call _TYPE_C_constraint_sleep
Ltmp387:
LBB24_3:
LM744:
.stabn	0x44, 0, 1760, LM744-_BSP_DisCharge_SmallCur_Deal
	goto LBB24_7
Ltmp388:
LBB24_4:
LM745:
.stabn	0x44, 0, 1763, LM745-_BSP_DisCharge_SmallCur_Deal
	bcf BSR,1
	incf _R_DisCharge_SmallCurCnt+0, F
LM746:
.stabn	0x44, 0, 1764, LM746-_BSP_DisCharge_SmallCur_Deal
Ltmp389:
	movfw _R_DisCharge_SmallCurCnt+0
Ltmp390:
	sublw 58
	blt LBB24_6
LBB24_5:
LM747:
.stabn	0x44, 0, 1765, LM747-_BSP_DisCharge_SmallCur_Deal
Ltmp391:
	goto LBB24_7
Ltmp392:
LBB24_6:
LM748:
.stabn	0x44, 0, 1766, LM748-_BSP_DisCharge_SmallCur_Deal
	movlw 1
	movwf _Discharge_MinCur+0
LM749:
.stabn	0x44, 0, 1767, LM749-_BSP_DisCharge_SmallCur_Deal
	clrf _R_DisCharge_SmallCurCnt+0
LM750:
.stabn	0x44, 0, 1768, LM750-_BSP_DisCharge_SmallCur_Deal
	movlw 3
	movwf _sleepcnt+0
Ltmp393:
LBB24_7:
LM751:
.stabn	0x44, 0, 1772, LM751-_BSP_DisCharge_SmallCur_Deal
	return
Ltmp394:
Lfunc_end48:
Lfunc_end49:
LM752:
.stabf LM752-_BSP_DisCharge_SmallCur_Deal

	_Frist_sink_deal_sec .section rom
	.global	_Frist_sink_deal
_Frist_sink_deal:
Lfunc_begin50:
.stabs "Frist_sink_deal:f:16", 0x24,0,0,_Frist_sink_deal
.stabn 0xc0, 0, 0, _Frist_sink_deal
.stabn 0xe0, 0, 0, _Frist_sink_deal
LM753:
.stabn	0x44, 0, 1774, LM753-_Frist_sink_deal
Lfunc_begin51:
LM754:
.stabn	0x44, 0, 1794, LM754-_Frist_sink_deal
	banksel 0
	movfw _Frist_start_sink+0
Ltmp395:
	sublw 0
	bne LBB25_2
LBB25_1:
LM755:
.stabn	0x44, 0, 1795, LM755-_Frist_sink_deal
Ltmp396:
	goto LBB25_22
Ltmp397:
LBB25_2:
LM756:
.stabn	0x44, 0, 1797, LM756-_Frist_sink_deal
	movfw _Frist_start_sink+0
Ltmp398:
	sublw 1
	bne LBB25_9
LBB25_3:
LM757:
.stabn	0x44, 0, 1799, LM757-_Frist_sink_deal
Ltmp399:
	bsf BSR,0
	incf _Frist_Bat_Connect+0, F
LM758:
.stabn	0x44, 0, 1800, LM758-_Frist_sink_deal
	movlw 31
	movwfl _discharge_displed+0
LM759:
.stabn	0x44, 0, 1802, LM759-_Frist_sink_deal
Ltmp400:
	movfw _Frist_Bat_Connect+0
Ltmp401:
	sublw 30
	bgt LBB25_8
LBB25_4:
LM760:
.stabn	0x44, 0, 1804, LM760-_Frist_sink_deal
Ltmp402:
	clrf _Frist_Bat_Connect+0
LM761:
.stabn	0x44, 0, 1806, LM761-_Frist_sink_deal
Ltmp403:
	bcf BSR,0
	movfw _VBAT_7201_Vaule+0
	movwf _hex_greater_than_compare.args.+0
	movfw _VBAT_7201_Vaule+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0xe2
	movwf _hex_greater_than_compare.args.+2
	movlw 4
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp404:
	sublw 0
	beq LBB25_6
LBB25_5:
LM762:
.stabn	0x44, 0, 1808, LM762-_Frist_sink_deal
Ltmp405:
	movlw 3
	movwf _Frist_start_sink+0
LM763:
.stabn	0x44, 0, 1811, LM763-_Frist_sink_deal
	bsf BSR,0
	clrf _Frist_Bat_100ms_Cnt+0
LM764:
.stabn	0x44, 0, 1812, LM764-_Frist_sink_deal
	goto LBB25_7
Ltmp406:
LBB25_6:
LM765:
.stabn	0x44, 0, 1815, LM765-_Frist_sink_deal
	movlw 2
	movwf _Frist_start_sink+0
LM766:
.stabn	0x44, 0, 1816, LM766-_Frist_sink_deal
	bsf BSR,0
	clrf _Frist_Bat_100ms_Cnt+0
Ltmp407:
LBB25_7:
LBB25_8:
LM767:
.stabn	0x44, 0, 1824, LM767-_Frist_sink_deal
	goto LBB25_22
Ltmp408:
LBB25_9:
LM768:
.stabn	0x44, 0, 1827, LM768-_Frist_sink_deal
	bsf BSR,0
	incf _Frist_Bat_Connect+0, F
LM769:
.stabn	0x44, 0, 1828, LM769-_Frist_sink_deal
Ltmp409:
	movfw _Frist_Bat_Connect+0
Ltmp410:
	sublw 10
	bgt LBB25_21
LBB25_10:
LM770:
.stabn	0x44, 0, 1830, LM770-_Frist_sink_deal
Ltmp411:
	clrf _Frist_Bat_Connect+0
LM771:
.stabn	0x44, 0, 1831, LM771-_Frist_sink_deal
	incf _Frist_Bat_100ms_Cnt+0, F
LM772:
.stabn	0x44, 0, 1832, LM772-_Frist_sink_deal
Ltmp412:
	movfw _Frist_Bat_100ms_Cnt+0
Ltmp413:
	sublw 5
	bgt LBB25_20
LBB25_11:
LM773:
.stabn	0x44, 0, 1835, LM773-_Frist_sink_deal
Ltmp414:
	movlw 4
	banksel _plug_state_context
	andwf _plug_state_context+0, W
	sublw 0
	beq LBB25_18
LBB25_12:
LM774:
.stabn	0x44, 0, 1836, LM774-_Frist_sink_deal
	movfwl _VoltFlag+0
	sublw 2
	blt LBB25_18
LBB25_13:
	movfw _h_pd+122
Ltmp415:
LM775:
.stabn	0x44, 0, 1835, LM775-_Frist_sink_deal
	sublw 1
	bne LBB25_18
LBB25_14:
LM776:
.stabn	0x44, 0, 1838, LM776-_Frist_sink_deal
Ltmp416:
	movfwl _Frist_start_sink+0
Ltmp417:
	sublw 3
	bne LBB25_16
LBB25_15:
LM777:
.stabn	0x44, 0, 1840, LM777-_Frist_sink_deal
Ltmp418:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
LM778:
.stabn	0x44, 0, 1842, LM778-_Frist_sink_deal
	movlw 1
LM779:
.stabn	0x44, 0, 1841, LM779-_Frist_sink_deal
	bsf BSR,0
	movwf _CA_Test_do_no_Slepp+0
LM780:
.stabn	0x44, 0, 1842, LM780-_Frist_sink_deal
	movwf _CA_IN_Frist_No_Soure+0
LM781:
.stabn	0x44, 0, 1844, LM781-_Frist_sink_deal
	bcf BSR,0
	clrf _Frist_start_sink+0
LM782:
.stabn	0x44, 0, 1845, LM782-_Frist_sink_deal
	goto LBB25_17
Ltmp419:
LBB25_16:
LM783:
.stabn	0x44, 0, 1848, LM783-_Frist_sink_deal
	banksel _Frist_Bat_100ms_Cnt
	clrf _Frist_Bat_100ms_Cnt+0
LM784:
.stabn	0x44, 0, 1849, LM784-_Frist_sink_deal
	banksel _inoutput_data
	clrf _inoutput_data+8
LM785:
.stabn	0x44, 0, 1850, LM785-_Frist_sink_deal
	movlw 31
	bcf BSR,1
	movwf _discharge_displed+0
LM786:
.stabn	0x44, 0, 1851, LM786-_Frist_sink_deal
	clrf _Mod_Dis_USBA_EN.args.+0
	call _Mod_Dis_USBA_EN
LM787:
.stabn	0x44, 0, 1852, LM787-_Frist_sink_deal
	bsf BSR,1
	clrf _inoutput_data+6
LM788:
.stabn	0x44, 0, 1853, LM788-_Frist_sink_deal
	clrf _F_A1_ON+0
LM789:
.stabn	0x44, 0, 1854, LM789-_Frist_sink_deal
	movlw 3
	movwfl _sleepcnt+0
Ltmp420:
LBB25_17:
LM790:
.stabn	0x44, 0, 1862, LM790-_Frist_sink_deal
	goto LBB25_19
Ltmp421:
LBB25_18:
LM791:
.stabn	0x44, 0, 1865, LM791-_Frist_sink_deal
	bcf BSR,1
	clrf _Frist_start_sink+0
LM792:
.stabn	0x44, 0, 1866, LM792-_Frist_sink_deal
	movlw 1
	movwf _discharge_displed+0
LM793:
.stabn	0x44, 0, 1867, LM793-_Frist_sink_deal
	bsf BSR,0
	clrf _Frist_Bat_100ms_Cnt+0
Ltmp422:
LBB25_19:
LBB25_20:
LBB25_21:
LBB25_22:
LM794:
.stabn	0x44, 0, 1902, LM794-_Frist_sink_deal
	banksel 0
	return
Ltmp423:
Lfunc_end50:
Lfunc_end51:
LM795:
.stabf LM795-_Frist_sink_deal

	_Vin_vol_charge_deal_sec .section rom
	.global	_Vin_vol_charge_deal
_Vin_vol_charge_deal:
Lfunc_begin52:
.stabs "Vin_vol_charge_deal:f:16", 0x24,0,0,_Vin_vol_charge_deal
.stabn 0xc0, 0, 0, _Vin_vol_charge_deal
.stabn 0xe0, 0, 0, _Vin_vol_charge_deal
LM796:
.stabn	0x44, 0, 1905, LM796-_Vin_vol_charge_deal
Lfunc_begin53:
LM797:
.stabn	0x44, 0, 1909, LM797-_Vin_vol_charge_deal
	banksel 0
	movfwl _VBUS_8_date+0
	movwf _Vin_vol_charge_deal.temp.+0
LM798:
.stabn	0x44, 0, 1912, LM798-_Vin_vol_charge_deal
Ltmp424:
	movfwl _Charge_OCP_Flage+0
Ltmp425:
	sublw 0
	bne LBB26_18
LBB26_1:
LM799:
.stabn	0x44, 0, 1914, LM799-_Vin_vol_charge_deal
Ltmp426:
	movfw _MiroB_charge_in+0
Ltmp427:
	sublw 0
	beq LBB26_3
LBB26_2:
LM800:
.stabn	0x44, 0, 1916, LM800-_Vin_vol_charge_deal
Ltmp428:
	movlw 111
	movwf _Vin_vol_charge_deal.temp.+1
	clrf _Vin_vol_charge_deal.temp.+2
LM801:
.stabn	0x44, 0, 1917, LM801-_Vin_vol_charge_deal
	goto LBB26_4
Ltmp429:
LBB26_3:
LM802:
.stabn	0x44, 0, 1919, LM802-_Vin_vol_charge_deal
	movlw 0xa0
	movwf _Vin_vol_charge_deal.temp.+1
	clrf _Vin_vol_charge_deal.temp.+2
Ltmp430:
LBB26_4:
LM803:
.stabn	0x44, 0, 1926, LM803-_Vin_vol_charge_deal
	movfwl _adc_convert+6
	movwf _hex_greater_than_compare.args.+0
	movfwl _adc_convert+7
	movwf _hex_greater_than_compare.args.+1
	movfw _Vin_vol_charge_deal.temp.+1
	movwf _hex_greater_than_compare.args.+2
	movfw _Vin_vol_charge_deal.temp.+2
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp431:
	sublw 0
	beq LBB26_8
LBB26_5:
LM804:
.stabn	0x44, 0, 1928, LM804-_Vin_vol_charge_deal
Ltmp432:
	bsf BSR,0
	incf _Charge_OCP_cnt+0, F
LM805:
.stabn	0x44, 0, 1929, LM805-_Vin_vol_charge_deal
Ltmp433:
	movfw _Charge_OCP_cnt+0
Ltmp434:
	sublw 50
	bgt LBB26_7
LBB26_6:
LM806:
.stabn	0x44, 0, 1931, LM806-_Vin_vol_charge_deal
Ltmp435:
	clrf _Charge_OCP_cnt+0
LM807:
.stabn	0x44, 0, 1932, LM807-_Vin_vol_charge_deal
	movlw 1
	movwf _Charge_OCP_Flage+0
Ltmp436:
LBB26_7:
LM808:
.stabn	0x44, 0, 1934, LM808-_Vin_vol_charge_deal
	goto LBB26_9
Ltmp437:
LBB26_8:
LM809:
.stabn	0x44, 0, 1936, LM809-_Vin_vol_charge_deal
	bsf BSR,0
	clrf _Charge_OCP_cnt+0
Ltmp438:
LBB26_9:
LM810:
.stabn	0x44, 0, 1939, LM810-_Vin_vol_charge_deal
	movfwl _Vin_vol_charge_deal.temp.+0
Ltmp439:
	sublw 40
	blt LBB26_16
LBB26_10:
LM811:
.stabn	0x44, 0, 1941, LM811-_Vin_vol_charge_deal
Ltmp440:
	incf _Charge_Close_En_cnt+0, F
LM812:
.stabn	0x44, 0, 1944, LM812-_Vin_vol_charge_deal
Ltmp441:
	movfwl _MiroB_charge_in+0
Ltmp442:
	sublw 0
	beq LBB26_12
LBB26_11:
LM813:
.stabn	0x44, 0, 1945, LM813-_Vin_vol_charge_deal
Ltmp443:
	movlw 5
	movwfl _Vin_vol_charge_deal.temp.+3
	goto LBB26_13
LBB26_12:
LM814:
.stabn	0x44, 0, 1947, LM814-_Vin_vol_charge_deal
	movlw 50
	movwfl _Vin_vol_charge_deal.temp.+3
Ltmp444:
LBB26_13:
LM815:
.stabn	0x44, 0, 1949, LM815-_Vin_vol_charge_deal
	movfwl _Vin_vol_charge_deal.temp.+3
	subwf _Charge_Close_En_cnt+0, W
	blt LBB26_15
LBB26_14:
LM816:
.stabn	0x44, 0, 1951, LM816-_Vin_vol_charge_deal
Ltmp445:
	clrf _Charge_Close_En_cnt+0
LM817:
.stabn	0x44, 0, 1952, LM817-_Vin_vol_charge_deal
	movlw 1
	movwf _Charge_OCP_Flage+0
Ltmp446:
LBB26_15:
LM818:
.stabn	0x44, 0, 1954, LM818-_Vin_vol_charge_deal
	goto LBB26_17
Ltmp447:
LBB26_16:
LM819:
.stabn	0x44, 0, 1956, LM819-_Vin_vol_charge_deal
	clrf _Charge_Close_En_cnt+0
Ltmp448:
LBB26_17:
LBB26_18:
LM820:
.stabn	0x44, 0, 1961, LM820-_Vin_vol_charge_deal
	banksel _Charge_Bat_Start_Cnt
	movfw _Charge_Bat_Start_Cnt+0
Ltmp449:
	sublw 0
	beq LBB26_22
LBB26_19:
LM821:
.stabn	0x44, 0, 1963, LM821-_Vin_vol_charge_deal
Ltmp450:
	incf _Charge_Bat_Start_Cnt+0, F
LM822:
.stabn	0x44, 0, 1965, LM822-_Vin_vol_charge_deal
Ltmp451:
	movfw _Charge_Bat_Start_Cnt+0
Ltmp452:
	sublw 20
	bgt LBB26_21
LBB26_20:
LM823:
.stabn	0x44, 0, 1966, LM823-_Vin_vol_charge_deal
Ltmp453:
	clrf _Charge_Bat_Start_Cnt+0
Ltmp454:
LBB26_21:
LBB26_22:
LM824:
.stabn	0x44, 0, 1978, LM824-_Vin_vol_charge_deal
	movfw _V_NO_BAT_Charge+0
Ltmp455:
	sublw 0
	bne LBB26_30
LBB26_23:
LM825:
.stabn	0x44, 0, 1989, LM825-_Vin_vol_charge_deal
Ltmp456:
	movfw _V_NO_BAT_Cnt+0
Ltmp457:
	sublw 30
	bgt LBB26_29
LBB26_24:
LM826:
.stabn	0x44, 0, 1991, LM826-_Vin_vol_charge_deal
Ltmp458:
	clrf _V_NO_BAT_Cnt+0
LM827:
.stabn	0x44, 0, 1992, LM827-_Vin_vol_charge_deal
	movlw 1
	movwf _V_NO_BAT_Charge+0
LM828:
.stabn	0x44, 0, 1994, LM828-_Vin_vol_charge_deal
Ltmp459:
	movfwl _VoltFlag+0
Ltmp460:
	sublw 0
	beq LBB26_26
LBB26_25:
LM829:
.stabn	0x44, 0, 1995, LM829-_Vin_vol_charge_deal
Ltmp461:
	movlw 1
	movwfl _pd_send_request.args.+0
	call _pd_send_request
Ltmp462:
LBB26_26:
LM830:
.stabn	0x44, 0, 1997, LM830-_Vin_vol_charge_deal
	banksel _Bat_Protest_cnt
	movfw _Bat_Protest_cnt+0
Ltmp463:
	sublw 0
	bne LBB26_28
LBB26_27:
LM831:
.stabn	0x44, 0, 1999, LM831-_Vin_vol_charge_deal
Ltmp464:
	movlw 1
	movwf _Bat_Protest_cnt+0
Ltmp465:
LBB26_28:
LBB26_29:
LM832:
.stabn	0x44, 0, 2005, LM832-_Vin_vol_charge_deal
	goto LBB26_33
Ltmp466:
LBB26_30:
LM833:
.stabn	0x44, 0, 2014, LM833-_Vin_vol_charge_deal
	movfw _V_NO_BAT_Cnt+0
Ltmp467:
	sublw 5
	bgt LBB26_32
LBB26_31:
LM834:
.stabn	0x44, 0, 2016, LM834-_Vin_vol_charge_deal
Ltmp468:
	clrf _V_NO_BAT_Cnt+0
LM835:
.stabn	0x44, 0, 2017, LM835-_Vin_vol_charge_deal
	clrf _V_NO_BAT_Charge+0
Ltmp469:
LBB26_32:
LBB26_33:
LM836:
.stabn	0x44, 0, 2023, LM836-_Vin_vol_charge_deal
	movfw _V_NO_Cha_flage+0
Ltmp470:
	sublw 0
	bne LBB26_48
LBB26_34:
LM837:
.stabn	0x44, 0, 2041, LM837-_Vin_vol_charge_deal
Ltmp471:
	movfwl _Vin_vol_charge_deal.temp.+0
	sublw 45
	blt LBB26_36
LBB26_35:
	movfw _adc_convert+6
	movwfl _hex_less_than_compare.args.+0
	movfw _adc_convert+7
	bcf BSR,0
	movwf _hex_less_than_compare.args.+1
	movlw 8
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
	sublw 0
	bne LBB26_39
LBB26_36:
LM838:
.stabn	0x44, 0, 2042, LM838-_Vin_vol_charge_deal
	banksel _Vin_vol_charge_deal.temp.
	movfw _Vin_vol_charge_deal.temp.+0
	sublw 0x96
	bgt LBB26_38
LBB26_37:
	bsf BSR,1
	movfw _h_pd+0x9a
	iorwf _h_pd+0x9b, W
	sublw 0
	beq LBB26_39
LBB26_38:
LM839:
.stabn	0x44, 0, 2043, LM839-_Vin_vol_charge_deal
	banksel _Vin_vol_charge_deal.temp.
	movfw _Vin_vol_charge_deal.temp.+0
Ltmp472:
LM840:
.stabn	0x44, 0, 2041, LM840-_Vin_vol_charge_deal
	sublw 0xdc
	bgt LBB26_40
LBB26_39:
LM841:
.stabn	0x44, 0, 2045, LM841-_Vin_vol_charge_deal
Ltmp473:
	banksel _V_NO_Charge
	incf _V_NO_Charge+0, F
LM842:
.stabn	0x44, 0, 2046, LM842-_Vin_vol_charge_deal
	goto LBB26_41
Ltmp474:
LBB26_40:
LM843:
.stabn	0x44, 0, 2048, LM843-_Vin_vol_charge_deal
	bsf BSR,0
	clrf _V_NO_Charge+0
Ltmp475:
LBB26_41:
LM844:
.stabn	0x44, 0, 2050, LM844-_Vin_vol_charge_deal
	movfw _V_NO_Charge+0
Ltmp476:
	sublw 10
	bgt LBB26_47
LBB26_42:
LM845:
.stabn	0x44, 0, 2052, LM845-_Vin_vol_charge_deal
Ltmp477:
	clrf _V_NO_Charge+0
LM846:
.stabn	0x44, 0, 2053, LM846-_Vin_vol_charge_deal
Ltmp478:
	movfwl _Vin_vol_charge_deal.temp.+0
	sublw 45
	blt LBB26_45
LBB26_43:
	movfw _adc_convert+6
	movwfl _hex_less_than_compare.args.+0
	movfw _adc_convert+7
	bcf BSR,0
	movwf _hex_less_than_compare.args.+1
	movlw 8
	movwf _hex_less_than_compare.args.+2
	clrf _hex_less_than_compare.args.+3
	call _hex_less_than_compare
	movfw _hex_less_than_compare.frame.+0
Ltmp479:
	sublw 0
	beq LBB26_45
LBB26_44:
LM847:
.stabn	0x44, 0, 2055, LM847-_Vin_vol_charge_deal
Ltmp480:
	bsf BSR,0
	bsf _user_flag+0, 2
LM848:
.stabn	0x44, 0, 2056, LM848-_Vin_vol_charge_deal
	goto LBB26_46
Ltmp481:
LBB26_45:
LM849:
.stabn	0x44, 0, 2059, LM849-_Vin_vol_charge_deal
	banksel _user_flag
	bcf _user_flag+0, 2
Ltmp482:
LBB26_46:
LM850:
.stabn	0x44, 0, 2061, LM850-_Vin_vol_charge_deal
	movlw 1
	movwf _V_NO_Cha_flage+0
Ltmp483:
LBB26_47:
LM851:
.stabn	0x44, 0, 2072, LM851-_Vin_vol_charge_deal
	goto LBB26_62
Ltmp484:
LBB26_48:
LM852:
.stabn	0x44, 0, 2087, LM852-_Vin_vol_charge_deal
	banksel _h_pd
	movfw _h_pd+0x9a
Ltmp485:
	iorwf _h_pd+0x9b, W
	sublw 0
	bne LBB26_54
LBB26_49:
LM853:
.stabn	0x44, 0, 2090, LM853-_Vin_vol_charge_deal
Ltmp486:
	movfwl _Vin_vol_charge_deal.temp.+0
	sublw 48
	bgt LBB26_52
LBB26_50:
	movfwl _Vin_vol_charge_deal.temp.+0
Ltmp487:
	sublw 0x8e
	blt LBB26_52
LBB26_51:
LM854:
.stabn	0x44, 0, 2092, LM854-_Vin_vol_charge_deal
Ltmp488:
	banksel _V_NO_Charge
	incf _V_NO_Charge+0, F
LM855:
.stabn	0x44, 0, 2093, LM855-_Vin_vol_charge_deal
	goto LBB26_53
Ltmp489:
LBB26_52:
LM856:
.stabn	0x44, 0, 2095, LM856-_Vin_vol_charge_deal
	banksel _V_NO_Charge
	clrf _V_NO_Charge+0
Ltmp490:
LBB26_53:
LM857:
.stabn	0x44, 0, 2096, LM857-_Vin_vol_charge_deal
	goto LBB26_59
Ltmp491:
LBB26_54:
LM858:
.stabn	0x44, 0, 2099, LM858-_Vin_vol_charge_deal
	movfwl _Vin_vol_charge_deal.temp.+0
	sublw 48
	bgt LBB26_57
LBB26_55:
	movfwl _Vin_vol_charge_deal.temp.+0
Ltmp492:
	sublw 0xd2
	blt LBB26_57
LBB26_56:
LM859:
.stabn	0x44, 0, 2101, LM859-_Vin_vol_charge_deal
Ltmp493:
	banksel _V_NO_Charge
	incf _V_NO_Charge+0, F
LM860:
.stabn	0x44, 0, 2102, LM860-_Vin_vol_charge_deal
	goto LBB26_58
Ltmp494:
LBB26_57:
LM861:
.stabn	0x44, 0, 2104, LM861-_Vin_vol_charge_deal
	banksel _V_NO_Charge
	clrf _V_NO_Charge+0
Ltmp495:
LBB26_58:
LBB26_59:
LM862:
.stabn	0x44, 0, 2107, LM862-_Vin_vol_charge_deal
	movfw _V_NO_Charge+0
Ltmp496:
	sublw 10
	bgt LBB26_61
LBB26_60:
LM863:
.stabn	0x44, 0, 2109, LM863-_Vin_vol_charge_deal
Ltmp497:
	clrf _V_NO_Charge+0
LM864:
.stabn	0x44, 0, 2110, LM864-_Vin_vol_charge_deal
	clrf _V_NO_Cha_flage+0
LM865:
.stabn	0x44, 0, 2111, LM865-_Vin_vol_charge_deal
	bcf _user_flag+0, 2
Ltmp498:
LBB26_61:
LBB26_62:
LM866:
.stabn	0x44, 0, 2114, LM866-_Vin_vol_charge_deal
	banksel 0
	return
Ltmp499:
Lfunc_end52:
Lfunc_end53:
LM867:
.stabn 0xc0,0,0, LM797-_Vin_vol_charge_deal
.stabs "R_VbusVol_Value:10;",0x80,0,0,_Vin_vol_charge_deal.temp.+0
.stabn 0xe0,0,0, LM866-_Vin_vol_charge_deal
.stabn 0xc0,0,0, LM797-_Vin_vol_charge_deal
.stabs "ocp_tempI:2;",0x80,0,0,_Vin_vol_charge_deal.temp.+1
.stabn 0xe0,0,0, LM866-_Vin_vol_charge_deal
.stabn 0xc0,0,0, LM797-_Vin_vol_charge_deal
.stabs "ocp_temp_cnt:10;",0x80,0,0,_Vin_vol_charge_deal.temp.+3
.stabn 0xe0,0,0, LM866-_Vin_vol_charge_deal
.stabf LM867-_Vin_vol_charge_deal

	_Car_statu_deal_sec .section rom
	.global	_Car_statu_deal
_Car_statu_deal:
Lfunc_begin54:
.stabs "Car_statu_deal:f:16", 0x24,0,0,_Car_statu_deal
.stabn 0xc0, 0, 0, _Car_statu_deal
.stabn 0xe0, 0, 0, _Car_statu_deal
LM868:
.stabn	0x44, 0, 2116, LM868-_Car_statu_deal
Lfunc_begin55:
LM869:
.stabn	0x44, 0, 2117, LM869-_Car_statu_deal
	banksel 0
	movfwl _car_ST+0
Ltmp500:
	sublw 0
	beq LBB27_10
LBB27_1:
LM870:
.stabn	0x44, 0, 2119, LM870-_Car_statu_deal
Ltmp501:
	movfwl _car_ST+0
	sublw 3
	beq LBB27_4
LBB27_2:
	movfwl _car_ST+0
	sublw 5
	beq LBB27_4
LBB27_3:
	movfwl _car_ST+0
Ltmp502:
	sublw 6
	bne LBB27_5
LBB27_4:
LM871:
.stabn	0x44, 0, 2121, LM871-_Car_statu_deal
Ltmp503:
	movlw 3
	movwfl _CAR_LEVEL+0
LM872:
.stabn	0x44, 0, 2122, LM872-_Car_statu_deal
	goto LBB27_9
Ltmp504:
LBB27_5:
LM873:
.stabn	0x44, 0, 2123, LM873-_Car_statu_deal
	movfwl _car_ST+0
Ltmp505:
	sublw 2
	bne LBB27_7
LBB27_6:
LM874:
.stabn	0x44, 0, 2125, LM874-_Car_statu_deal
Ltmp506:
	movlw 2
	movwfl _CAR_LEVEL+0
LM875:
.stabn	0x44, 0, 2126, LM875-_Car_statu_deal
	goto LBB27_8
Ltmp507:
LBB27_7:
LM876:
.stabn	0x44, 0, 2130, LM876-_Car_statu_deal
	movlw 1
	movwfl _CAR_LEVEL+0
Ltmp508:
LBB27_8:
LBB27_9:
LM877:
.stabn	0x44, 0, 2133, LM877-_Car_statu_deal
	goto LBB27_11
Ltmp509:
LBB27_10:
LM878:
.stabn	0x44, 0, 2135, LM878-_Car_statu_deal
	bsf BSR,0
	clrf _CAR_LEVEL+0
Ltmp510:
LBB27_11:
LM879:
.stabn	0x44, 0, 2136, LM879-_Car_statu_deal
	banksel 0
	return
Ltmp511:
Lfunc_end54:
Lfunc_end55:
LM880:
.stabf LM880-_Car_statu_deal

	_Miro_in_deal_sec .section rom
	.global	_Miro_in_deal
_Miro_in_deal:
Lfunc_begin56:
.stabs "Miro_in_deal:f:16", 0x24,0,0,_Miro_in_deal
.stabn 0xc0, 0, 0, _Miro_in_deal
.stabn 0xe0, 0, 0, _Miro_in_deal
LM881:
.stabn	0x44, 0, 2138, LM881-_Miro_in_deal
Lfunc_begin57:
LM882:
.stabn	0x44, 0, 2139, LM882-_Miro_in_deal
	banksel 0
	movfw _Type_ca_charge_in+0
Ltmp512:
	sublw 0
	beq LBB28_2
LBB28_1:
LM883:
.stabn	0x44, 0, 2140, LM883-_Miro_in_deal
Ltmp513:
	goto LBB28_27
Ltmp514:
LBB28_2:
LM884:
.stabn	0x44, 0, 2141, LM884-_Miro_in_deal
	movfw _Type_cb_charge_in+0
Ltmp515:
	sublw 0
	bne LBB28_10
LBB28_3:
LM885:
.stabn	0x44, 0, 2143, LM885-_Miro_in_deal
Ltmp516:
	clrf _MiroB_dis_Cnt+0
LM886:
.stabn	0x44, 0, 2144, LM886-_Miro_in_deal
Ltmp517:
	movfwl _MirB_IN_Flage+0
Ltmp518:
	sublw 0
	beq LBB28_9
LBB28_4:
LM887:
.stabn	0x44, 0, 2146, LM887-_Miro_in_deal
Ltmp519:
	movfw _Type_ca_charge_in+0
Ltmp520:
	sublw 0
	bne LBB28_6
LBB28_5:
LM888:
.stabn	0x44, 0, 2147, LM888-_Miro_in_deal
Ltmp521:
	incf _MiroB_charge_Cnt+0, F
Ltmp522:
LBB28_6:
LM889:
.stabn	0x44, 0, 2148, LM889-_Miro_in_deal
	movfw _MiroB_charge_Cnt+0
Ltmp523:
	sublw 100
	bgt LBB28_8
LBB28_7:
LM890:
.stabn	0x44, 0, 2150, LM890-_Miro_in_deal
Ltmp524:
	movlw 1
	movwf _Type_cb_charge_in+0
LM891:
.stabn	0x44, 0, 2151, LM891-_Miro_in_deal
	movlw 3
	movwf _mod_queue_send.args.+0
	call _mod_queue_send
LM892:
.stabn	0x44, 0, 2152, LM892-_Miro_in_deal
	movfw _Type_cb_charge_in+0
	movwfl _delay_Check_C_Vol+0
Ltmp525:
LBB28_8:
LBB28_9:
LM893:
.stabn	0x44, 0, 2155, LM893-_Miro_in_deal
	goto LBB28_23
Ltmp526:
LBB28_10:
LM894:
.stabn	0x44, 0, 2158, LM894-_Miro_in_deal
	clrf _MiroB_charge_Cnt+0
LM895:
.stabn	0x44, 0, 2159, LM895-_Miro_in_deal
Ltmp527:
	movfwl _Charge_OCP_Flage+0
Ltmp528:
	sublw 0
	beq LBB28_15
LBB28_11:
LM896:
.stabn	0x44, 0, 2161, LM896-_Miro_in_deal
Ltmp529:
	movfwl _MirB_IN_Flage+0
Ltmp530:
	sublw 0
	bne LBB28_13
LBB28_12:
LM897:
.stabn	0x44, 0, 2162, LM897-_Miro_in_deal
Ltmp531:
	incf _MiroB_dis_Cnt+0, F
	goto LBB28_14
LBB28_13:
LM898:
.stabn	0x44, 0, 2164, LM898-_Miro_in_deal
	clrf _MiroB_dis_Cnt+0
Ltmp532:
LBB28_14:
LM899:
.stabn	0x44, 0, 2165, LM899-_Miro_in_deal
	goto LBB28_20
Ltmp533:
LBB28_15:
LM900:
.stabn	0x44, 0, 2169, LM900-_Miro_in_deal
	movfwl _VBUS_8_date+0
	sublw 40
	blt LBB28_18
Ltmp534:
LBB28_16:
	movlw 1
	movwf _Miro_in_deal.temp.+0
Ltmp535:
	movfwl _adc_convert+6
Ltmp536:
	sublw 80
	blt LBB28_29
LBB28_28:
	movlw 0
	movwf _Miro_in_deal.temp.+0
LBB28_29:
	movlw 1
	movwf _Miro_in_deal.temp.+1
Ltmp537:
	movfwl _adc_convert+7
Ltmp538:
	movwf _Miro_in_deal.temp.+2
	sublw 0
	bne LBB28_31
LBB28_30:
	movlw 0
	movwf _Miro_in_deal.temp.+1
LBB28_31:
	movfw _Miro_in_deal.temp.+0
	movwf _Miro_in_deal.temp.+0
	movfw _Miro_in_deal.temp.+2
	sublw 0
	beq LBB28_33
LBB28_32:
	movfw _Miro_in_deal.temp.+1
	movwf _Miro_in_deal.temp.+0
LBB28_33:
	movfw _Miro_in_deal.temp.+0
	andlw 1
	sublw 0
	bne LBB28_18
LBB28_17:
LM901:
.stabn	0x44, 0, 2170, LM901-_Miro_in_deal
Ltmp539:
	incf _MiroB_dis_Cnt+0, F
	goto LBB28_19
LBB28_18:
LM902:
.stabn	0x44, 0, 2172, LM902-_Miro_in_deal
	clrf _MiroB_dis_Cnt+0
Ltmp540:
LBB28_19:
LBB28_20:
LM903:
.stabn	0x44, 0, 2176, LM903-_Miro_in_deal
	movfw _MiroB_dis_Cnt+0
Ltmp541:
	sublw 80
	bgt LBB28_22
LBB28_21:
LM904:
.stabn	0x44, 0, 2178, LM904-_Miro_in_deal
Ltmp542:
	clrf _MiroB_dis_Cnt+0
LM905:
.stabn	0x44, 0, 2179, LM905-_Miro_in_deal
	clrf _Type_cb_charge_in+0
LM906:
.stabn	0x44, 0, 2180, LM906-_Miro_in_deal
	movlw 4
	movwf _mod_queue_send.args.+0
	call _mod_queue_send
LM907:
.stabn	0x44, 0, 2181, LM907-_Miro_in_deal
	movfw _Type_cb_charge_in+0
	movwfl _delay_Check_C_Vol+0
Ltmp543:
LBB28_22:
LBB28_23:
LM908:
.stabn	0x44, 0, 2184, LM908-_Miro_in_deal
	movfw _Type_cb_charge_in+0
	movwf _MiroB_charge_in+0
LM909:
.stabn	0x44, 0, 2186, LM909-_Miro_in_deal
Ltmp544:
	movfwl _delay_Check_C_Vol+0
Ltmp545:
	sublw 0
	beq LBB28_27
LBB28_24:
LM910:
.stabn	0x44, 0, 2188, LM910-_Miro_in_deal
Ltmp546:
	bsf BSR,0
	incf _delay_Check_C_Vol+0, F
LM911:
.stabn	0x44, 0, 2189, LM911-_Miro_in_deal
Ltmp547:
	movfw _delay_Check_C_Vol+0
Ltmp548:
	sublw 50
	bgt LBB28_26
LBB28_25:
LM912:
.stabn	0x44, 0, 2191, LM912-_Miro_in_deal
Ltmp549:
	clrf _delay_Check_C_Vol+0
Ltmp550:
LBB28_26:
LBB28_27:
LM913:
.stabn	0x44, 0, 2194, LM913-_Miro_in_deal
	banksel 0
	return
Ltmp551:
Lfunc_end56:
Lfunc_end57:
LM914:
.stabf LM914-_Miro_in_deal

	_Sub_sim_tx_sec .section rom
	.global	_Sub_sim_tx
_Sub_sim_tx:
Lfunc_begin58:
.stabs "Sub_sim_tx:f:16", 0x24,0,0,_Sub_sim_tx
.stabn 0xc0, 0, 0, _Sub_sim_tx
.stabn 0xe0, 0, 0, _Sub_sim_tx
LM915:
.stabn	0x44, 0, 2219, LM915-_Sub_sim_tx
Lfunc_begin59:
	banksel 0
	movfw _Sub_sim_tx.args.+0
LM916:
.stabn	0x44, 0, 2260, LM916-_Sub_sim_tx
Ltmp552:
	movwf _Sub_sim_tx.temp.+0
	return
Ltmp553:
Lfunc_end58:
Lfunc_end59:
LM917:
.stabn 0xc0,0,0, LM915-_Sub_sim_tx
.stabs "data:10",0x80,0,0,_Sub_sim_tx.args.+0
.stabn 0xe0,0,0, LM916-_Sub_sim_tx
.stabf LM917-_Sub_sim_tx

	_Sinck_in9V_max_sec .section rom
	.global	_Sinck_in9V_max
_Sinck_in9V_max:
Lfunc_begin60:
.stabs "Sinck_in9V_max:f:16", 0x24,0,0,_Sinck_in9V_max
.stabn 0xc0, 0, 0, _Sinck_in9V_max
.stabn 0xe0, 0, 0, _Sinck_in9V_max
LM918:
.stabn	0x44, 0, 2262, LM918-_Sinck_in9V_max
Lfunc_begin61:
	banksel 0
LM919:
.stabn	0x44, 0, 2263, LM919-_Sinck_in9V_max
Ltmp554:
	movlw LOW(_h_pd+0)
	addlw 37
	movwf _Sinck_in9V_max.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _Sinck_in9V_max.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sinkcap_9+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sinkcap_9+0)
	movwf _EADRL+0
	movlw 8
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp555:
LM920:
.stabn	0x44, 0, 2264, LM920-_Sinck_in9V_max
	movlw LOW(_pdo_sinkcap_9+0)
	addlw 4
	movwf _Sinck_in9V_max.temp.+0
	movlw HIGH8(_pdo_sinkcap_9+0)
	addlwc 0
	movwf _Sinck_in9V_max.temp.+1
	movlw LOW(_h_pd+0)
	addlw 65
	movwf _Sinck_in9V_max.temp.+2
	movlw 5
	movwf _FSR0H+0
	movfw _Sinck_in9V_max.temp.+2
	movwf _FSR0+0
	movfw _Sinck_in9V_max.temp.+1
	movwf _EADRH+0
	movfw _Sinck_in9V_max.temp.+0
	movwf _EADRL+0
	movlw 4
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp556:
LM921:
.stabn	0x44, 0, 2265, LM921-_Sinck_in9V_max
	return
Ltmp557:
Lfunc_end60:
Lfunc_end61:
LM922:
.stabf LM922-_Sinck_in9V_max

	_Sinck_in_recover_max_sec .section rom
	.global	_Sinck_in_recover_max
_Sinck_in_recover_max:
Lfunc_begin62:
.stabs "Sinck_in_recover_max:f:16", 0x24,0,0,_Sinck_in_recover_max
.stabn 0xc0, 0, 0, _Sinck_in_recover_max
.stabn 0xe0, 0, 0, _Sinck_in_recover_max
LM923:
.stabn	0x44, 0, 2267, LM923-_Sinck_in_recover_max
Lfunc_begin63:
	banksel 0
LM924:
.stabn	0x44, 0, 2268, LM924-_Sinck_in_recover_max
Ltmp558:
	movlw LOW(_h_pd+0)
	addlw 37
	movwf _Sinck_in_recover_max.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _Sinck_in_recover_max.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sinkcap+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sinkcap+0)
	movwf _EADRL+0
	movlw 8
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp559:
LM925:
.stabn	0x44, 0, 2269, LM925-_Sinck_in_recover_max
	movlw LOW(_pdo_sinkcap+0)
	addlw 4
	movwf _Sinck_in_recover_max.temp.+0
	movlw HIGH8(_pdo_sinkcap+0)
	addlwc 0
	movwf _Sinck_in_recover_max.temp.+1
	movlw LOW(_h_pd+0)
	addlw 65
	movwf _Sinck_in_recover_max.temp.+2
	movlw 5
	movwf _FSR0H+0
	movfw _Sinck_in_recover_max.temp.+2
	movwf _FSR0+0
	movfw _Sinck_in_recover_max.temp.+1
	movwf _EADRH+0
	movfw _Sinck_in_recover_max.temp.+0
	movwf _EADRL+0
	movlw 4
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp560:
LM926:
.stabn	0x44, 0, 2270, LM926-_Sinck_in_recover_max
	return
Ltmp561:
Lfunc_end62:
Lfunc_end63:
LM927:
.stabf LM927-_Sinck_in_recover_max

	_Lighting_to_SOS_Dispose_sec .section rom
	.global	_Lighting_to_SOS_Dispose
_Lighting_to_SOS_Dispose:
Lfunc_begin64:
.stabs "Lighting_to_SOS_Dispose:f:16", 0x24,0,0,_Lighting_to_SOS_Dispose
.stabn 0xc0, 0, 0, _Lighting_to_SOS_Dispose
.stabn 0xe0, 0, 0, _Lighting_to_SOS_Dispose
LM928:
.stabn	0x44, 0, 2273, LM928-_Lighting_to_SOS_Dispose
Lfunc_begin65:
LM929:
.stabn	0x44, 0, 2366, LM929-_Lighting_to_SOS_Dispose
	banksel 0
	return
Ltmp562:
Lfunc_end64:
Lfunc_end65:
LM930:
.stabf LM930-_Lighting_to_SOS_Dispose

	_IAP_inti_deal_sec .section rom
	.global	_IAP_inti_deal
_IAP_inti_deal:
Lfunc_begin66:
.stabs "IAP_inti_deal:f:16", 0x24,0,0,_IAP_inti_deal
.stabn 0xc0, 0, 0, _IAP_inti_deal
.stabn 0xe0, 0, 0, _IAP_inti_deal
LM931:
.stabn	0x44, 0, 2368, LM931-_IAP_inti_deal
Lfunc_begin67:
LM932:
.stabn	0x44, 0, 2377, LM932-_IAP_inti_deal
	banksel 0
	call _multi_protocol_init
LM933:
.stabn	0x44, 0, 2379, LM933-_IAP_inti_deal
	movlw 4
	bsf BSR,2
	movwf _multi_protocol+0
LM934:
.stabn	0x44, 0, 2380, LM934-_IAP_inti_deal
	clrf _multi_protocol+2
LM935:
.stabn	0x44, 0, 2381, LM935-_IAP_inti_deal
	clrf _multi_protocol+3
LM936:
.stabn	0x44, 0, 2384, LM936-_IAP_inti_deal
	bcf BSR,2
	movfw _CFGR6+0
	movwf _IAP_inti_deal.temp.+0
LM937:
.stabn	0x44, 0, 2385, LM937-_IAP_inti_deal
	movlw 0xcf
	andwf _IAP_inti_deal.temp.+0, F
LM938:
.stabn	0x44, 0, 2386, LM938-_IAP_inti_deal
	movlw 32
	iorwf _IAP_inti_deal.temp.+0, W
LM939:
.stabn	0x44, 0, 2387, LM939-_IAP_inti_deal
	movwf _CFGR6+0
LM940:
.stabn	0x44, 0, 2389, LM940-_IAP_inti_deal
	movfw _PT3PU+0
	movwf _IAP_inti_deal.temp.+0
LM941:
.stabn	0x44, 0, 2379, LM941-_IAP_inti_deal
	movlw 4
LM942:
.stabn	0x44, 0, 2390, LM942-_IAP_inti_deal
	iorwf _IAP_inti_deal.temp.+0, W
	movwf _IAP_inti_deal.temp.+0
LM943:
.stabn	0x44, 0, 2391, LM943-_IAP_inti_deal
	movwf _PT3PU+0
LM944:
.stabn	0x44, 0, 2393, LM944-_IAP_inti_deal
	bcf _PT3EN1, _PT3EN1
LM945:
.stabn	0x44, 0, 2395, LM945-_IAP_inti_deal
	bsf _PT3PU1, _PT3PU1
LM946:
.stabn	0x44, 0, 2397, LM946-_IAP_inti_deal
	clrf _CLKSEL1+0
LM947:
.stabn	0x44, 0, 2398, LM947-_IAP_inti_deal
	movlw 16
	movwf _CLKDIV2+0
LM948:
.stabn	0x44, 0, 2399, LM948-_IAP_inti_deal
	movlw 52
	bsf BSR,0
	movwf _UR0_BRR0+0
LM949:
.stabn	0x44, 0, 2400, LM949-_IAP_inti_deal
	movlw 1
	movwf _UR0_BRR1+0
LM950:
.stabn	0x44, 0, 2401, LM950-_IAP_inti_deal
	movlw 9
	movwf _UR0_CR1+0
LM951:
.stabn	0x44, 0, 2402, LM951-_IAP_inti_deal
	clrf _UR0_INTF+0
LM952:
.stabn	0x44, 0, 2379, LM952-_IAP_inti_deal
	movlw 4
LM953:
.stabn	0x44, 0, 2403, LM953-_IAP_inti_deal
	movwf _UR0_INTE+0
LM954:
.stabn	0x44, 0, 2405, LM954-_IAP_inti_deal
	bcf BSR,0
	bsf _GIE, _GIE
LM955:
.stabn	0x44, 0, 2406, LM955-_IAP_inti_deal
	return
Ltmp563:
Lfunc_end66:
Lfunc_end67:
LM956:
.stabn 0xc0,0,0, LM932-_IAP_inti_deal
.stabs "tempdata1:10;",0x80,0,0,_IAP_inti_deal.temp.+0
.stabn 0xe0,0,0, LM955-_IAP_inti_deal
.stabn 0xc0,0,0, LM932-_IAP_inti_deal
.stabs "tempdata2:10;",0x80,0,0,_IAP_inti_deal.temp.+1
.stabn 0xe0,0,0, LM955-_IAP_inti_deal
.stabf LM956-_IAP_inti_deal

	_IAP_inti_deal_dis_sec .section rom
	.global	_IAP_inti_deal_dis
_IAP_inti_deal_dis:
Lfunc_begin68:
.stabs "IAP_inti_deal_dis:f:16", 0x24,0,0,_IAP_inti_deal_dis
.stabn 0xc0, 0, 0, _IAP_inti_deal_dis
.stabn 0xe0, 0, 0, _IAP_inti_deal_dis
LM957:
.stabn	0x44, 0, 2409, LM957-_IAP_inti_deal_dis
Lfunc_begin69:
LM958:
.stabn	0x44, 0, 2413, LM958-_IAP_inti_deal_dis
	banksel 0
	movfw _CFGR6+0
	movwf _IAP_inti_deal_dis.temp.+0
LM959:
.stabn	0x44, 0, 2414, LM959-_IAP_inti_deal_dis
	movlw 0xcf
	andwf _IAP_inti_deal_dis.temp.+0, W
LM960:
.stabn	0x44, 0, 2416, LM960-_IAP_inti_deal_dis
	movwf _CFGR6+0
LM961:
.stabn	0x44, 0, 2418, LM961-_IAP_inti_deal_dis
	movfw _PT3PU+0
	movwf _IAP_inti_deal_dis.temp.+0
LM962:
.stabn	0x44, 0, 2419, LM962-_IAP_inti_deal_dis
	movlw 0xfb
	andwf _IAP_inti_deal_dis.temp.+0, W
	movwf _IAP_inti_deal_dis.temp.+0
LM963:
.stabn	0x44, 0, 2420, LM963-_IAP_inti_deal_dis
	movwf _PT3PU+0
LM964:
.stabn	0x44, 0, 2422, LM964-_IAP_inti_deal_dis
	clrf _CLKSEL1+0
LM965:
.stabn	0x44, 0, 2423, LM965-_IAP_inti_deal_dis
	movlw 16
	movwf _CLKDIV2+0
LM966:
.stabn	0x44, 0, 2424, LM966-_IAP_inti_deal_dis
	movlw 52
	bsf BSR,0
	movwf _UR0_BRR0+0
LM967:
.stabn	0x44, 0, 2425, LM967-_IAP_inti_deal_dis
	movlw 1
	movwf _UR0_BRR1+0
LM968:
.stabn	0x44, 0, 2427, LM968-_IAP_inti_deal_dis
	clrf _UR0_CR1+0
LM969:
.stabn	0x44, 0, 2428, LM969-_IAP_inti_deal_dis
	clrf _UR0_INTF+0
LM970:
.stabn	0x44, 0, 2429, LM970-_IAP_inti_deal_dis
	movlw 4
	movwf _UR0_INTE+0
LM971:
.stabn	0x44, 0, 2438, LM971-_IAP_inti_deal_dis
	call _multi_protocol_init
LM972:
.stabn	0x44, 0, 2429, LM972-_IAP_inti_deal_dis
	movlw 4
LM973:
.stabn	0x44, 0, 2440, LM973-_IAP_inti_deal_dis
	bsf BSR,2
	movwf _multi_protocol+0
LM974:
.stabn	0x44, 0, 2442, LM974-_IAP_inti_deal_dis
	clrf _multi_protocol+2
LM975:
.stabn	0x44, 0, 2444, LM975-_IAP_inti_deal_dis
	clrf _multi_protocol+3
LM976:
.stabn	0x44, 0, 2445, LM976-_IAP_inti_deal_dis
	clrf _multi_protocol+4
LM977:
.stabn	0x44, 0, 2446, LM977-_IAP_inti_deal_dis
	clrf _multi_protocol+5
LM978:
.stabn	0x44, 0, 2451, LM978-_IAP_inti_deal_dis
	clrf _multi_protocol+6
LM979:
.stabn	0x44, 0, 2454, LM979-_IAP_inti_deal_dis
	clrf _multi_protocol+7
LM980:
.stabn	0x44, 0, 2455, LM980-_IAP_inti_deal_dis
	clrf _multi_protocol+8
LM981:
.stabn	0x44, 0, 2456, LM981-_IAP_inti_deal_dis
	clrf _multi_protocol+9
LM982:
.stabn	0x44, 0, 2458, LM982-_IAP_inti_deal_dis
	movlw 2
	movwf _multi_protocol+10
LM983:
.stabn	0x44, 0, 2461, LM983-_IAP_inti_deal_dis
	clrf _multi_protocol+11
LM984:
.stabn	0x44, 0, 2462, LM984-_IAP_inti_deal_dis
	clrf _multi_protocol+12
LM985:
.stabn	0x44, 0, 2463, LM985-_IAP_inti_deal_dis
	clrf _multi_protocol+13
LM986:
.stabn	0x44, 0, 2465, LM986-_IAP_inti_deal_dis
	movlw 104
	movwf _multi_protocol+14
LM987:
.stabn	0x44, 0, 2425, LM987-_IAP_inti_deal_dis
	movlw 1
LM988:
.stabn	0x44, 0, 2465, LM988-_IAP_inti_deal_dis
	movwf _multi_protocol+15
LM989:
.stabn	0x44, 0, 2468, LM989-_IAP_inti_deal_dis
	clrf _multi_protocol+16
LM990:
.stabn	0x44, 0, 2469, LM990-_IAP_inti_deal_dis
	clrf _multi_protocol+17
LM991:
.stabn	0x44, 0, 2471, LM991-_IAP_inti_deal_dis
	clrf _multi_protocol+18
LM992:
.stabn	0x44, 0, 2458, LM992-_IAP_inti_deal_dis
	movlw 2
LM993:
.stabn	0x44, 0, 2473, LM993-_IAP_inti_deal_dis
	movwf _multi_protocol+19
LM994:
.stabn	0x44, 0, 2425, LM994-_IAP_inti_deal_dis
	movlw 1
LM995:
.stabn	0x44, 0, 2476, LM995-_IAP_inti_deal_dis
	movwf _multi_protocol+20
LM996:
.stabn	0x44, 0, 2477, LM996-_IAP_inti_deal_dis
	movlw 26
	movwf _multi_protocol+21
LM997:
.stabn	0x44, 0, 2480, LM997-_IAP_inti_deal_dis
	clrf _multi_protocol+22
LM998:
.stabn	0x44, 0, 2481, LM998-_IAP_inti_deal_dis
	clrf _multi_protocol+23
LM999:
.stabn	0x44, 0, 2483, LM999-_IAP_inti_deal_dis
	clrf _multi_protocol+24
LM1000:
.stabn	0x44, 0, 2484, LM1000-_IAP_inti_deal_dis
	movlw 3
	movwf _multi_protocol+25
LM1001:
.stabn	0x44, 0, 2487, LM1001-_IAP_inti_deal_dis
	clrf _multi_protocol+26
LM1002:
.stabn	0x44, 0, 2488, LM1002-_IAP_inti_deal_dis
	clrf _multi_protocol+27
LM1003:
.stabn	0x44, 0, 2489, LM1003-_IAP_inti_deal_dis
	clrf _multi_protocol+28
LM1004:
.stabn	0x44, 0, 2490, LM1004-_IAP_inti_deal_dis
	clrf _multi_protocol+29
LM1005:
.stabn	0x44, 0, 2491, LM1005-_IAP_inti_deal_dis
	clrf _multi_protocol+30
LM1006:
.stabn	0x44, 0, 2492, LM1006-_IAP_inti_deal_dis
	clrf _multi_protocol+31
LM1007:
.stabn	0x44, 0, 2493, LM1007-_IAP_inti_deal_dis
	clrf _multi_protocol+32
LM1008:
.stabn	0x44, 0, 2494, LM1008-_IAP_inti_deal_dis
	movlw 20
	movwf _multi_protocol+33
LM1009:
.stabn	0x44, 0, 2425, LM1009-_IAP_inti_deal_dis
	movlw 1
LM1010:
.stabn	0x44, 0, 2496, LM1010-_IAP_inti_deal_dis
	movwf _multi_protocol+1
LM1011:
.stabn	0x44, 0, 2499, LM1011-_IAP_inti_deal_dis
	banksel 0
	return
Ltmp564:
Lfunc_end68:
Lfunc_end69:
LM1012:
.stabn 0xc0,0,0, LM958-_IAP_inti_deal_dis
.stabs "tempdata1:10;",0x80,0,0,_IAP_inti_deal_dis.temp.+0
.stabn 0xe0,0,0, LM1011-_IAP_inti_deal_dis
.stabn 0xc0,0,0, LM958-_IAP_inti_deal_dis
.stabs "tempdata2:10;",0x80,0,0,_IAP_inti_deal_dis.temp.+1
.stabn 0xe0,0,0, LM1011-_IAP_inti_deal_dis
.stabf LM1012-_IAP_inti_deal_dis

	_iap_signal_detect_sec .section rom
	.global	_iap_signal_detect
_iap_signal_detect:
Lfunc_begin70:
.stabs "iap_signal_detect:f:16", 0x24,0,0,_iap_signal_detect
.stabn 0xc0, 0, 0, _iap_signal_detect
.stabn 0xe0, 0, 0, _iap_signal_detect
LM1013:
.stabn	0x44, 0, 2502, LM1013-_iap_signal_detect
Lfunc_begin71:
	banksel 0
	movfw _iap_signal_detect.args.+0
LM1014:
.stabn	0x44, 0, 2503, LM1014-_iap_signal_detect
Ltmp565:
	movwf _iap_signal_detect.temp.+0
	movfwl _iap_detect+0
	movwf _iap_signal_detect.temp.+1
	sublw 0
	beq LBB35_1
LBB35_18:
	movfw _iap_signal_detect.temp.+1
	xorlw 1
	sublw 0
	beq LBB35_4
LBB35_19:
	movfw _iap_signal_detect.temp.+1
	xorlw 2
	sublw 0
	beq LBB35_7
LBB35_20:
	movfw _iap_signal_detect.temp.+1
	xorlw 3
	sublw 0
	beq LBB35_10
LBB35_21:
	movfw _iap_signal_detect.temp.+1
	xorlw 4
	sublw 0
	beq LBB35_11
	goto LBB35_15
LBB35_1:
LM1015:
.stabn	0x44, 0, 2506, LM1015-_iap_signal_detect
Ltmp566:
	movfw _iap_signal_detect.temp.+0
Ltmp567:
	sublw 85
	beq LBB35_3
LBB35_2:
LM1016:
.stabn	0x44, 0, 2508, LM1016-_iap_signal_detect
Ltmp568:
	goto LBB35_17
Ltmp569:
LBB35_3:
LM1017:
.stabn	0x44, 0, 2510, LM1017-_iap_signal_detect
	bsf BSR,0
	clrf _iap_detect+1
LM1018:
.stabn	0x44, 0, 2511, LM1018-_iap_signal_detect
	goto LBB35_16
LBB35_4:
LM1019:
.stabn	0x44, 0, 2513, LM1019-_iap_signal_detect
Ltmp570:
	movfw _iap_signal_detect.temp.+0
Ltmp571:
	sublw 1
	beq LBB35_6
LBB35_5:
LM1020:
.stabn	0x44, 0, 2515, LM1020-_iap_signal_detect
Ltmp572:
	bsf BSR,0
	clrf _iap_detect+0
LM1021:
.stabn	0x44, 0, 2516, LM1021-_iap_signal_detect
	goto LBB35_17
Ltmp573:
LBB35_6:
LM1022:
.stabn	0x44, 0, 2518, LM1022-_iap_signal_detect
	goto LBB35_16
LBB35_7:
LM1023:
.stabn	0x44, 0, 2520, LM1023-_iap_signal_detect
Ltmp574:
	movfw _iap_signal_detect.temp.+0
Ltmp575:
	sublw 33
	beq LBB35_9
LBB35_8:
LM1024:
.stabn	0x44, 0, 2522, LM1024-_iap_signal_detect
Ltmp576:
	bsf BSR,0
	clrf _iap_detect+0
LM1025:
.stabn	0x44, 0, 2523, LM1025-_iap_signal_detect
	goto LBB35_17
Ltmp577:
LBB35_9:
LM1026:
.stabn	0x44, 0, 2525, LM1026-_iap_signal_detect
	goto LBB35_16
LBB35_10:
LM1027:
.stabn	0x44, 0, 2527, LM1027-_iap_signal_detect
	goto LBB35_16
LBB35_11:
LM1028:
.stabn	0x44, 0, 2529, LM1028-_iap_signal_detect
Ltmp578:
	movfw _iap_signal_detect.temp.+0
Ltmp579:
	bsf BSR,0
	xorwf _iap_detect+1, W
	sublw 0
	beq LBB35_13
LBB35_12:
LM1029:
.stabn	0x44, 0, 2531, LM1029-_iap_signal_detect
Ltmp580:
	clrf _iap_detect+0
LM1030:
.stabn	0x44, 0, 2532, LM1030-_iap_signal_detect
	goto LBB35_14
Ltmp581:
LBB35_13:
LM1031:
.stabn	0x44, 0, 2535, LM1031-_iap_signal_detect
	movlw 1
	movwf _iap_detect+2
Ltmp582:
LBB35_14:
LM1032:
.stabn	0x44, 0, 2537, LM1032-_iap_signal_detect
	goto LBB35_17
LBB35_15:
LM1033:
.stabn	0x44, 0, 2540, LM1033-_iap_signal_detect
	bsf BSR,0
	clrf _iap_detect+0
LM1034:
.stabn	0x44, 0, 2541, LM1034-_iap_signal_detect
	goto LBB35_17
Ltmp583:
LBB35_16:
LM1035:
.stabn	0x44, 0, 2543, LM1035-_iap_signal_detect
	banksel _iap_detect
	incf _iap_detect+0, F
LM1036:
.stabn	0x44, 0, 2544, LM1036-_iap_signal_detect
	movfwl _iap_signal_detect.temp.+0
	addwf _iap_detect+1, F
LBB35_17:
LM1037:
.stabn	0x44, 0, 2545, LM1037-_iap_signal_detect
	banksel 0
	return
Ltmp584:
Lfunc_end70:
Lfunc_end71:
LM1038:
.stabn 0xc0,0,0, LM1013-_iap_signal_detect
.stabs "receive_data:10",0x80,0,0,_iap_signal_detect.args.+0
.stabn 0xe0,0,0, LM1037-_iap_signal_detect
.stabf LM1038-_iap_signal_detect

	_app_power_capabilities_switch_h_1_sec .section rom
	.global	_app_power_capabilities_switch_h_1
_app_power_capabilities_switch_h_1:
Lfunc_begin72:
.stabs "app_power_capabilities_switch_h_1:f:16", 0x24,0,0,_app_power_capabilities_switch_h_1
.stabn 0xc0, 0, 0, _app_power_capabilities_switch_h_1
.stabn 0xe0, 0, 0, _app_power_capabilities_switch_h_1
LM1039:
.stabn	0x44, 0, 2563, LM1039-_app_power_capabilities_switch_h_1
Lfunc_begin73:
LM1040:
.stabn	0x44, 0, 2564, LM1040-_app_power_capabilities_switch_h_1
	banksel 0
	movlw 5
	movwfl _h_pd+6
LM1041:
.stabn	0x44, 0, 2566, LM1041-_app_power_capabilities_switch_h_1
Ltmp585:
	movfwl _Port_NTC_NG_LOW_POWER_Flage+0
Ltmp586:
	sublw 0
	bne LBB36_4
LBB36_1:
LM1042:
.stabn	0x44, 0, 2567, LM1042-_app_power_capabilities_switch_h_1
Ltmp587:
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h_1.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h_1.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_45+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_45+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
	goto LBB36_7
Ltmp588:
LBB36_4:
LM1043:
.stabn	0x44, 0, 2569, LM1043-_app_power_capabilities_switch_h_1
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h_1.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h_1.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_18+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_18+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp589:
LBB36_7:
LM1044:
.stabn	0x44, 0, 2571, LM1044-_app_power_capabilities_switch_h_1
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp590:
	sublw 0
	beq LBB36_9
LBB36_8:
LM1045:
.stabn	0x44, 0, 2573, LM1045-_app_power_capabilities_switch_h_1
Ltmp591:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp592:
LBB36_9:
LM1046:
.stabn	0x44, 0, 2575, LM1046-_app_power_capabilities_switch_h_1
	banksel 0
	return
Ltmp593:
Lfunc_end72:
Lfunc_end73:
LM1047:
.stabf LM1047-_app_power_capabilities_switch_h_1

	_app_power_capabilities_switch_h_2_sec .section rom
	.global	_app_power_capabilities_switch_h_2
_app_power_capabilities_switch_h_2:
Lfunc_begin74:
.stabs "app_power_capabilities_switch_h_2:f:16", 0x24,0,0,_app_power_capabilities_switch_h_2
.stabn 0xc0, 0, 0, _app_power_capabilities_switch_h_2
.stabn 0xe0, 0, 0, _app_power_capabilities_switch_h_2
LM1048:
.stabn	0x44, 0, 2578, LM1048-_app_power_capabilities_switch_h_2
Lfunc_begin75:
LM1049:
.stabn	0x44, 0, 2579, LM1049-_app_power_capabilities_switch_h_2
	banksel 0
	movlw 5
	movwfl _h_pd+6
LM1050:
.stabn	0x44, 0, 2581, LM1050-_app_power_capabilities_switch_h_2
Ltmp594:
	movfwl _Port_NTC_NG_LOW_POWER_Flage+0
Ltmp595:
	sublw 0
	bne LBB37_4
LBB37_1:
LM1051:
.stabn	0x44, 0, 2582, LM1051-_app_power_capabilities_switch_h_2
Ltmp596:
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h_2.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h_2.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_30+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_30+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
	goto LBB37_7
Ltmp597:
LBB37_4:
LM1052:
.stabn	0x44, 0, 2584, LM1052-_app_power_capabilities_switch_h_2
	movlw LOW(_h_pd+0)
	addlw 8
	movwf _app_power_capabilities_switch_h_2.temp.+0
	movlw 5
	movwf _FSR0H+0
	movfw _app_power_capabilities_switch_h_2.temp.+0
	movwf _FSR0+0
	movlw HIGH8(_pdo_sourcecap_18+0)
	movwf _EADRH+0
	movlw LOW(_pdo_sourcecap_18+0)
	movwf _EADRL+0
	movlw 28
	movwf _r_memcpy_len+0
	call _cs_memcpy_rom2ram
Ltmp598:
LBB37_7:
LM1053:
.stabn	0x44, 0, 2586, LM1053-_app_power_capabilities_switch_h_2
	movlw 8
	bsf BSR,1
	andwf _plug_state_context+0, W
Ltmp599:
	sublw 0
	beq LBB37_9
LBB37_8:
LM1054:
.stabn	0x44, 0, 2588, LM1054-_app_power_capabilities_switch_h_2
Ltmp600:
	movlw LOW(_h_typeca+0)
	bcf BSR,1
	movwf _typec_break.args.+0
	movlw HIGH8(_h_typeca+0)
	movwf _typec_break.args.+1
	call _typec_break
Ltmp601:
LBB37_9:
LM1055:
.stabn	0x44, 0, 2590, LM1055-_app_power_capabilities_switch_h_2
	banksel 0
	return
Ltmp602:
Lfunc_end74:
Lfunc_end75:
LM1056:
.stabf LM1056-_app_power_capabilities_switch_h_2

	_BSP_I2C_VbatCheck_sec .section rom
	.global	_BSP_I2C_VbatCheck
_BSP_I2C_VbatCheck:
Lfunc_begin76:
.stabs "BSP_I2C_VbatCheck:f167=2;;", 0x24,0,0,_BSP_I2C_VbatCheck
.stabn 0xc0, 0, 0, _BSP_I2C_VbatCheck
.stabn 0xe0, 0, 0, _BSP_I2C_VbatCheck
LM1057:
.stabn	0x44, 0, 2661, LM1057-_BSP_I2C_VbatCheck
Lfunc_begin77:
LM1058:
.stabn	0x44, 0, 2664, LM1058-_BSP_I2C_VbatCheck
	banksel 0
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1059:
.stabn	0x44, 0, 2665, LM1059-_BSP_I2C_VbatCheck
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1060:
.stabn	0x44, 0, 2666, LM1060-_BSP_I2C_VbatCheck
	ShlFour
	movwf _BSP_I2C_VbatCheck.temp.+0
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_VbatCheck.temp.+2
	movwf _BSP_I2C_VbatCheck.temp.+1
LM1061:
.stabn	0x44, 0, 2667, LM1061-_BSP_I2C_VbatCheck
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	iorwf _BSP_I2C_VbatCheck.temp.+0, W
	movwf _BSP_I2C_VbatCheck.temp.+0
	movwf _BSP_I2C_VbatCheck.frame.+0
LM1062:
.stabn	0x44, 0, 2669, LM1062-_BSP_I2C_VbatCheck
	movfw _BSP_I2C_VbatCheck.temp.+1
	movwf _BSP_I2C_VbatCheck.frame.+1
	return
Ltmp603:
Lfunc_end76:
Lfunc_end77:
LM1063:
.stabn 0xc0,0,0, LM1058-_BSP_I2C_VbatCheck
.stabs "Readdata:2;",0x80,0,0,_BSP_I2C_VbatCheck.temp.+0
.stabn 0xe0,0,0, LM1062-_BSP_I2C_VbatCheck
.stabf LM1063-_BSP_I2C_VbatCheck

	_BSP_I2C_7203_Data_sec .section rom
	.global	_BSP_I2C_7203_Data
_BSP_I2C_7203_Data:
Lfunc_begin78:
.stabs "BSP_I2C_7203_Data:f:16", 0x24,0,0,_BSP_I2C_7203_Data
.stabn 0xc0, 0, 0, _BSP_I2C_7203_Data
.stabn 0xe0, 0, 0, _BSP_I2C_7203_Data
LM1064:
.stabn	0x44, 0, 2673, LM1064-_BSP_I2C_7203_Data
Lfunc_begin79:
LM1065:
.stabn	0x44, 0, 2674, LM1065-_BSP_I2C_7203_Data
	banksel 0
	clrf _BSP_I2C_7203_Data.temp.+1
	clrf _BSP_I2C_7203_Data.temp.+2
LM1066:
.stabn	0x44, 0, 2676, LM1066-_BSP_I2C_7203_Data
	clrf _BSP_I2C_7203_Data.temp.+0
LM1067:
.stabn	0x44, 0, 2677, LM1067-_BSP_I2C_7203_Data
	movfwl _SW7203_Data_Cnt+0
	movwf _BSP_I2C_7203_Data.temp.+3
	sublw 0
	beq LBB39_1
LBB39_32:
	movfw _BSP_I2C_7203_Data.temp.+3
	xorlw 1
	sublw 0
	beq LBB39_2
LBB39_33:
	movfw _BSP_I2C_7203_Data.temp.+3
	xorlw 2
	sublw 0
	beq LBB39_3
LBB39_34:
	movfw _BSP_I2C_7203_Data.temp.+3
	xorlw 3
	sublw 0
	beq LBB39_13
LBB39_35:
	movfw _BSP_I2C_7203_Data.temp.+3
	xorlw 4
	sublw 0
	beq LBB39_18
LBB39_36:
	movfw _BSP_I2C_7203_Data.temp.+3
	xorlw 5
	sublw 0
	beq LBB39_25
	goto LBB39_28
LBB39_1:
LM1068:
.stabn	0x44, 0, 2680, LM1068-_BSP_I2C_7203_Data
Ltmp604:
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc1
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1069:
.stabn	0x44, 0, 2681, LM1069-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_2:
LM1070:
.stabn	0x44, 0, 2684, LM1070-_BSP_I2C_7203_Data
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1071:
.stabn	0x44, 0, 2685, LM1071-_BSP_I2C_7203_Data
	ShlFour
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+2
LM1072:
.stabn	0x44, 0, 2686, LM1072-_BSP_I2C_7203_Data
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_7203_Data.temp.+0
LM1073:
.stabn	0x44, 0, 2687, LM1073-_BSP_I2C_7203_Data
	movlw 15
	andwf _BSP_I2C_7203_Data.temp.+0, F
LM1074:
.stabn	0x44, 0, 2688, LM1074-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+0
	addwf _BSP_I2C_7203_Data.temp.+1, F
	movlw 0
	addwfc _BSP_I2C_7203_Data.temp.+2, F
LM1075:
.stabn	0x44, 0, 2690, LM1075-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+3
	movfw _BSP_I2C_7203_Data.temp.+2
	ShlFour
	iorwf _BSP_I2C_7203_Data.temp.+3, W
	movwfl _VBUS_8_date+0
LM1076:
.stabn	0x44, 0, 2692, LM1076-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	movwf .args.__swmul_atmp+0
	movfw _BSP_I2C_7203_Data.temp.+2
	movwf .args.__swmul_atmp+1
	movlw 3
	movwf .args.__swmul_btmp+0
	clrf .args.__swmul_btmp+1
	call .lib.__swmul
	movfw .ret.__swmul_ret+1
	movwfl _multi_protocol+59
	movfw .ret.__swmul_ret+0
	movwfl _multi_protocol+58
LM1077:
.stabn	0x44, 0, 2693, LM1077-_BSP_I2C_7203_Data
	movwf .args.__uwdiv_atmp+0
	movfwl _multi_protocol+59
	movwf .args.__uwdiv_atmp+1
	movlw 10
	movwf .args.__uwdiv_btmp+0
	clrf .args.__uwdiv_btmp+1
	call .lib.__uwdiv
	movfw .ret.__uwdiv_ret+0
	movwfl _multi_protocol+58
	movfw .ret.__uwdiv_ret+1
	movwfl _multi_protocol+59
LM1078:
.stabn	0x44, 0, 2694, LM1078-_BSP_I2C_7203_Data
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc0
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1079:
.stabn	0x44, 0, 2695, LM1079-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_3:
LM1080:
.stabn	0x44, 0, 2698, LM1080-_BSP_I2C_7203_Data
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1081:
.stabn	0x44, 0, 2699, LM1081-_BSP_I2C_7203_Data
	ShlFour
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+2
LM1082:
.stabn	0x44, 0, 2701, LM1082-_BSP_I2C_7203_Data
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_7203_Data.temp.+0
LM1083:
.stabn	0x44, 0, 2702, LM1083-_BSP_I2C_7203_Data
	movlw 15
	andwf _BSP_I2C_7203_Data.temp.+0, F
LM1084:
.stabn	0x44, 0, 2703, LM1084-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+0
	addwf _BSP_I2C_7203_Data.temp.+1, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movwf _VBAT_7201_Vaule+0
	movlw 0
	addwfc _BSP_I2C_7203_Data.temp.+2, W
	movwf _BSP_I2C_7203_Data.temp.+2
	movwf _VBAT_7201_Vaule+1
LM1085:
.stabn	0x44, 0, 2710, LM1085-_BSP_I2C_7203_Data
Ltmp605:
	movfw _BSP_I2C_7203_Data.temp.+1
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_I2C_7203_Data.temp.+2
	movwf _hex_greater_than_compare.args.+1
	movlw 0xf5
	movwf _hex_greater_than_compare.args.+2
	movlw 8
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp606:
	sublw 0
	beq LBB39_5
LBB39_4:
LM1086:
.stabn	0x44, 0, 2712, LM1086-_BSP_I2C_7203_Data
Ltmp607:
	movlw 0xf5
	movwf _BSP_I2C_7203_Data.temp.+1
	movlw 8
	movwf _BSP_I2C_7203_Data.temp.+2
LM1087:
.stabn	0x44, 0, 2713, LM1087-_BSP_I2C_7203_Data
	bsf BSR,0
	setf _Vbat_8_date+0
LM1088:
.stabn	0x44, 0, 2714, LM1088-_BSP_I2C_7203_Data
	goto LBB39_9
Ltmp608:
LBB39_5:
LM1089:
.stabn	0x44, 0, 2718, LM1089-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_I2C_7203_Data.temp.+2
	movwf _hex_greater_than_compare.args.+1
	movlw 53
	movwf _hex_greater_than_compare.args.+2
	movlw 5
	movwf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp609:
	sublw 0
	beq LBB39_7
LBB39_6:
LM1090:
.stabn	0x44, 0, 2719, LM1090-_BSP_I2C_7203_Data
Ltmp610:
	movlw 0xcb
	addwf _BSP_I2C_7203_Data.temp.+1, F
	movlw 0xfa
	addwfc _BSP_I2C_7203_Data.temp.+2, W
	movwf _BSP_I2C_7203_Data.temp.+2
	goto LBB39_8
LBB39_7:
LM1091:
.stabn	0x44, 0, 2721, LM1091-_BSP_I2C_7203_Data
	clrf _BSP_I2C_7203_Data.temp.+1
	clrf _BSP_I2C_7203_Data.temp.+2
Ltmp611:
LBB39_8:
LM1092:
.stabn	0x44, 0, 2723, LM1092-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+3
	movfw _BSP_I2C_7203_Data.temp.+2
	ShlSix
	iorwf _BSP_I2C_7203_Data.temp.+3, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _BSP_I2C_7203_Data.temp.+2
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+2
LM1093:
.stabn	0x44, 0, 2728, LM1093-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	movwfl _Vbat_8_date+0
Ltmp612:
LBB39_9:
LM1094:
.stabn	0x44, 0, 2731, LM1094-_BSP_I2C_7203_Data
	banksel _R_SysMode_OK
	movfw _R_SysMode_OK+0
Ltmp613:
	sublw 1
	bne LBB39_11
LBB39_10:
LM1095:
.stabn	0x44, 0, 2732, LM1095-_BSP_I2C_7203_Data
Ltmp614:
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc4
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
	goto LBB39_12
LBB39_11:
LM1096:
.stabn	0x44, 0, 2734, LM1096-_BSP_I2C_7203_Data
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc6
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
Ltmp615:
LBB39_12:
LM1097:
.stabn	0x44, 0, 2736, LM1097-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_13:
LM1098:
.stabn	0x44, 0, 2739, LM1098-_BSP_I2C_7203_Data
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1099:
.stabn	0x44, 0, 2740, LM1099-_BSP_I2C_7203_Data
	ShlFour
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+2
LM1100:
.stabn	0x44, 0, 2742, LM1100-_BSP_I2C_7203_Data
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_7203_Data.temp.+0
LM1101:
.stabn	0x44, 0, 2743, LM1101-_BSP_I2C_7203_Data
	movlw 15
	andwf _BSP_I2C_7203_Data.temp.+0, F
LM1102:
.stabn	0x44, 0, 2744, LM1102-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+0
	addwf _BSP_I2C_7203_Data.temp.+1, F
	movlw 0
	addwfc _BSP_I2C_7203_Data.temp.+2, W
	movwf _BSP_I2C_7203_Data.temp.+2
LM1103:
.stabn	0x44, 0, 2746, LM1103-_BSP_I2C_7203_Data
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+3
	movfw _BSP_I2C_7203_Data.temp.+1
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+4
	movfw _BSP_I2C_7203_Data.temp.+2
	ShlSix
	iorwf _BSP_I2C_7203_Data.temp.+4, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _BSP_I2C_7203_Data.temp.+3
	movwf _BSP_I2C_7203_Data.temp.+2
LM1104:
.stabn	0x44, 0, 2748, LM1104-_BSP_I2C_7203_Data
Ltmp616:
	movfw _BSP_I2C_7203_Data.temp.+1
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_I2C_7203_Data.temp.+3
	movwf _hex_greater_than_compare.args.+1
	movlw 0xfa
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp617:
	sublw 0
	beq LBB39_15
LBB39_14:
LM1105:
.stabn	0x44, 0, 2749, LM1105-_BSP_I2C_7203_Data
Ltmp618:
	movlw 0xfa
	movwf _BSP_I2C_7203_Data.temp.+1
	clrf _BSP_I2C_7203_Data.temp.+2
Ltmp619:
LBB39_15:
LM1106:
.stabn	0x44, 0, 2750, LM1106-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	movwfl _CIbat_8_date+0
LM1107:
.stabn	0x44, 0, 2753, LM1107-_BSP_I2C_7203_Data
Ltmp620:
	movfw _R_SysMode_OK+0
Ltmp621:
	sublw 1
	bne LBB39_17
LBB39_16:
LM1108:
.stabn	0x44, 0, 2754, LM1108-_BSP_I2C_7203_Data
Ltmp622:
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc5
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
Ltmp623:
LBB39_17:
LM1109:
.stabn	0x44, 0, 2756, LM1109-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_18:
LM1110:
.stabn	0x44, 0, 2760, LM1110-_BSP_I2C_7203_Data
Ltmp624:
	movfw _R_SysMode_OK+0
Ltmp625:
	sublw 1
	bne LBB39_22
LBB39_19:
LM1111:
.stabn	0x44, 0, 2763, LM1111-_BSP_I2C_7203_Data
Ltmp626:
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1112:
.stabn	0x44, 0, 2764, LM1112-_BSP_I2C_7203_Data
	ShlFour
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+2
LM1113:
.stabn	0x44, 0, 2766, LM1113-_BSP_I2C_7203_Data
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_7203_Data.temp.+0
LM1114:
.stabn	0x44, 0, 2767, LM1114-_BSP_I2C_7203_Data
	movlw 15
	andwf _BSP_I2C_7203_Data.temp.+0, F
LM1115:
.stabn	0x44, 0, 2768, LM1115-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+0
	addwf _BSP_I2C_7203_Data.temp.+1, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movwfl _CIbus_16_date+0
	movlw 0
	addwfc _BSP_I2C_7203_Data.temp.+2, W
	movwf _BSP_I2C_7203_Data.temp.+2
	movwfl _CIbus_16_date+1
LM1116:
.stabn	0x44, 0, 2771, LM1116-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+2
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+3
	movfw _BSP_I2C_7203_Data.temp.+1
	SrlTwo
	movwf _BSP_I2C_7203_Data.temp.+4
	movfw _BSP_I2C_7203_Data.temp.+2
	ShlSix
	iorwf _BSP_I2C_7203_Data.temp.+4, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _BSP_I2C_7203_Data.temp.+3
	movwf _BSP_I2C_7203_Data.temp.+2
LM1117:
.stabn	0x44, 0, 2773, LM1117-_BSP_I2C_7203_Data
Ltmp627:
	movfw _BSP_I2C_7203_Data.temp.+1
	movwf _hex_greater_than_compare.args.+0
	movfw _BSP_I2C_7203_Data.temp.+3
	movwf _hex_greater_than_compare.args.+1
	movlw 0xfa
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp628:
	sublw 0
	beq LBB39_21
LBB39_20:
LM1118:
.stabn	0x44, 0, 2774, LM1118-_BSP_I2C_7203_Data
Ltmp629:
	movlw 0xfa
	movwf _BSP_I2C_7203_Data.temp.+1
	clrf _BSP_I2C_7203_Data.temp.+2
Ltmp630:
LBB39_21:
LM1119:
.stabn	0x44, 0, 2775, LM1119-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+1
	movwfl _CIbus_8_date+0
Ltmp631:
LBB39_22:
LM1120:
.stabn	0x44, 0, 2778, LM1120-_BSP_I2C_7203_Data
	movfw _R_SysMode_OK+0
Ltmp632:
	sublw 2
	bne LBB39_24
LBB39_23:
LM1121:
.stabn	0x44, 0, 2779, LM1121-_BSP_I2C_7203_Data
Ltmp633:
	movlw 16
	movwf _iic_transmit_byte.args.+0
	movlw 0xc7
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
Ltmp634:
LBB39_24:
LM1122:
.stabn	0x44, 0, 2780, LM1122-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_25:
LM1123:
.stabn	0x44, 0, 2784, LM1123-_BSP_I2C_7203_Data
Ltmp635:
	movfw _R_SysMode_OK+0
Ltmp636:
	sublw 2
	bne LBB39_27
LBB39_26:
LM1124:
.stabn	0x44, 0, 2787, LM1124-_BSP_I2C_7203_Data
Ltmp637:
	movlw 17
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
LM1125:
.stabn	0x44, 0, 2788, LM1125-_BSP_I2C_7203_Data
	ShlFour
	movwf _BSP_I2C_7203_Data.temp.+1
	movfw _iic_receive_byte.frame.+0
	SrlFour
	movwf _BSP_I2C_7203_Data.temp.+2
LM1126:
.stabn	0x44, 0, 2790, LM1126-_BSP_I2C_7203_Data
	movlw 18
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_7203_Data.temp.+0
LM1127:
.stabn	0x44, 0, 2791, LM1127-_BSP_I2C_7203_Data
	movlw 15
	andwf _BSP_I2C_7203_Data.temp.+0, F
LM1128:
.stabn	0x44, 0, 2792, LM1128-_BSP_I2C_7203_Data
	movfw _BSP_I2C_7203_Data.temp.+0
	addwf _BSP_I2C_7203_Data.temp.+1, W
	movwf _BSP_I2C_7203_Data.temp.+1
	movwfl _CIbus_16_date+0
	movlw 0
	addwfc _BSP_I2C_7203_Data.temp.+2, W
	movwf _BSP_I2C_7203_Data.temp.+2
	movwfl _CIbus_16_date+1
Ltmp638:
LBB39_27:
LM1129:
.stabn	0x44, 0, 2797, LM1129-_BSP_I2C_7203_Data
	goto LBB39_29
LBB39_28:
LM1130:
.stabn	0x44, 0, 2800, LM1130-_BSP_I2C_7203_Data
	bsf BSR,0
	clrf _SW7203_Data_Cnt+0
Ltmp639:
LBB39_29:
LM1131:
.stabn	0x44, 0, 2803, LM1131-_BSP_I2C_7203_Data
	banksel _SW7203_Data_Cnt
	incf _SW7203_Data_Cnt+0, F
LM1132:
.stabn	0x44, 0, 2805, LM1132-_BSP_I2C_7203_Data
Ltmp640:
	movfw _SW7203_Data_Cnt+0
Ltmp641:
	sublw 5
	bgt LBB39_31
LBB39_30:
LM1133:
.stabn	0x44, 0, 2809, LM1133-_BSP_I2C_7203_Data
Ltmp642:
	clrf _SW7203_Data_Cnt+0
Ltmp643:
LBB39_31:
LM1134:
.stabn	0x44, 0, 2810, LM1134-_BSP_I2C_7203_Data
	banksel 0
	return
Ltmp644:
Lfunc_end78:
Lfunc_end79:
LM1135:
.stabn 0xc0,0,0, LM1065-_BSP_I2C_7203_Data
.stabs "Readdata:2;",0x80,0,0,_BSP_I2C_7203_Data.temp.+1
.stabn 0xe0,0,0, LM1134-_BSP_I2C_7203_Data
.stabn 0xc0,0,0, LM1066-_BSP_I2C_7203_Data
.stabs "Readdata2:10;",0x80,0,0,_BSP_I2C_7203_Data.temp.+0
.stabn 0xe0,0,0, LM1134-_BSP_I2C_7203_Data
.stabf LM1135-_BSP_I2C_7203_Data

	_BSP_I2C_BATVaule_Deal_sec .section rom
	.global	_BSP_I2C_BATVaule_Deal
_BSP_I2C_BATVaule_Deal:
Lfunc_begin80:
.stabs "BSP_I2C_BATVaule_Deal:f:16", 0x24,0,0,_BSP_I2C_BATVaule_Deal
.stabn 0xc0, 0, 0, _BSP_I2C_BATVaule_Deal
.stabn 0xe0, 0, 0, _BSP_I2C_BATVaule_Deal
LM1136:
.stabn	0x44, 0, 2812, LM1136-_BSP_I2C_BATVaule_Deal
Lfunc_begin81:
LM1137:
.stabn	0x44, 0, 2820, LM1137-_BSP_I2C_BATVaule_Deal
	banksel 0
	movfw _R_SysMode_OK+0
Ltmp645:
	sublw 1
	bne LBB40_2
LBB40_1:
LM1138:
.stabn	0x44, 0, 2822, LM1138-_BSP_I2C_BATVaule_Deal
Ltmp646:
	bsf BSR,0
	movfw _CIbat_8_date+0
	movwf _I_All_IN_Do+0
	clrf _I_All_IN_Do+1
LM1139:
.stabn	0x44, 0, 2824, LM1139-_BSP_I2C_BATVaule_Deal
	movlw 34
	movwfl _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _BSP_I2C_BATVaule_Deal.temp.+3
LM1140:
.stabn	0x44, 0, 2826, LM1140-_BSP_I2C_BATVaule_Deal
	movlw 2
	iorwf _BSP_I2C_BATVaule_Deal.temp.+3, F
LM1141:
.stabn	0x44, 0, 2824, LM1141-_BSP_I2C_BATVaule_Deal
	movlw 34
LM1142:
.stabn	0x44, 0, 2827, LM1142-_BSP_I2C_BATVaule_Deal
	movwf _iic_transmit_byte.args.+0
	movfw _BSP_I2C_BATVaule_Deal.temp.+3
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1143:
.stabn	0x44, 0, 2828, LM1143-_BSP_I2C_BATVaule_Deal
	goto LBB40_59
Ltmp647:
LBB40_2:
LM1144:
.stabn	0x44, 0, 2865, LM1144-_BSP_I2C_BATVaule_Deal
	bsf BSR,0
	movfw _CIbat_8_date+0
	movwf _I_All_IN_Do+0
	clrf _I_All_IN_Do+1
LM1145:
.stabn	0x44, 0, 2870, LM1145-_BSP_I2C_BATVaule_Deal
Ltmp648:
	movfw _WHITE_ON+0
Ltmp649:
	sublw 0
	beq LBB40_8
LBB40_3:
LM1146:
.stabn	0x44, 0, 2872, LM1146-_BSP_I2C_BATVaule_Deal
Ltmp650:
	movfw _WHITE_ON+0
Ltmp651:
	sublw 0
	beq LBB40_7
LBB40_4:
LM1147:
.stabn	0x44, 0, 2875, LM1147-_BSP_I2C_BATVaule_Deal
Ltmp652:
	movlw 2
	movwf _LIbat_8_date+0
LM1148:
.stabn	0x44, 0, 2876, LM1148-_BSP_I2C_BATVaule_Deal
Ltmp653:
	movfw _SOS_LEVEL+0
Ltmp654:
	sublw 0
	beq LBB40_6
LBB40_5:
LM1149:
.stabn	0x44, 0, 2882, LM1149-_BSP_I2C_BATVaule_Deal
Ltmp655:
	movlw 1
	movwf _LIbat_8_date+0
Ltmp656:
LBB40_6:
LBB40_7:
LM1150:
.stabn	0x44, 0, 2896, LM1150-_BSP_I2C_BATVaule_Deal
	goto LBB40_9
Ltmp657:
LBB40_8:
LM1151:
.stabn	0x44, 0, 2898, LM1151-_BSP_I2C_BATVaule_Deal
	clrf _LIbat_8_date+0
Ltmp658:
LBB40_9:
LM1152:
.stabn	0x44, 0, 2904, LM1152-_BSP_I2C_BATVaule_Deal
	movfw _I_All_IN_Do+0
	addwf _LIbat_8_date+0, W
	movwf _I_All_IN_Do+0
	movlw 0
	addwfc _I_All_IN_Do+1, W
	movwf _I_All_IN_Do+1
LM1153:
.stabn	0x44, 0, 2931, LM1153-_BSP_I2C_BATVaule_Deal
	bcf BSR,0
	clrf _BSP_I2C_BATVaule_Deal.temp.+2
LM1154:
.stabn	0x44, 0, 2932, LM1154-_BSP_I2C_BATVaule_Deal
	movfwl _CIbat_8_date+0
	SrlFour
LM1155:
.stabn	0x44, 0, 2933, LM1155-_BSP_I2C_BATVaule_Deal
	bsf BSR,0
	addwf _Vbat_8_date+0, W
	bcf BSR,0
	movwf _BSP_I2C_BATVaule_Deal.temp.+0
LM1156:
.stabn	0x44, 0, 2935, LM1156-_BSP_I2C_BATVaule_Deal
Ltmp659:
	movwf _hex_greater_than_compare.args.+0
Ltmp660:
LM1157:
.stabn	0x44, 0, 2904, LM1157-_BSP_I2C_BATVaule_Deal
	movlw 0
LM1158:
.stabn	0x44, 0, 2933, LM1158-_BSP_I2C_BATVaule_Deal
	addlwc 0
	movwf _BSP_I2C_BATVaule_Deal.temp.+1
LM1159:
.stabn	0x44, 0, 2935, LM1159-_BSP_I2C_BATVaule_Deal
Ltmp661:
	movwf _hex_greater_than_compare.args.+1
	movlw 0xfa
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp662:
	sublw 0
	beq LBB40_11
LBB40_10:
LM1160:
.stabn	0x44, 0, 2936, LM1160-_BSP_I2C_BATVaule_Deal
Ltmp663:
	movlw 0xfa
	movwf _BSP_I2C_BATVaule_Deal.temp.+0
	clrf _BSP_I2C_BATVaule_Deal.temp.+1
Ltmp664:
LBB40_11:
LM1161:
.stabn	0x44, 0, 2937, LM1161-_BSP_I2C_BATVaule_Deal
	movfw _BSP_I2C_BATVaule_Deal.temp.+0
	movwfl _BAT_real+0
LM1162:
.stabn	0x44, 0, 2939, LM1162-_BSP_I2C_BATVaule_Deal
	sublw 126
	blt LBB40_15
LBB40_12:
LM1163:
.stabn	0x44, 0, 2941, LM1163-_BSP_I2C_BATVaule_Deal
Ltmp665:
	movfw _BatCap_Value+0
Ltmp666:
	sublw 6
	bgt LBB40_14
LBB40_13:
LM1164:
.stabn	0x44, 0, 2942, LM1164-_BSP_I2C_BATVaule_Deal
Ltmp667:
	movlw 0xfb
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp668:
LBB40_14:
LM1165:
.stabn	0x44, 0, 2943, LM1165-_BSP_I2C_BATVaule_Deal
	goto LBB40_50
Ltmp669:
LBB40_15:
LM1166:
.stabn	0x44, 0, 2944, LM1166-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp670:
	sublw 0x8a
	blt LBB40_19
LBB40_16:
LM1167:
.stabn	0x44, 0, 2946, LM1167-_BSP_I2C_BATVaule_Deal
Ltmp671:
	movfw _BatCap_Value+0
Ltmp672:
	sublw 16
	bgt LBB40_18
LBB40_17:
LM1168:
.stabn	0x44, 0, 2947, LM1168-_BSP_I2C_BATVaule_Deal
Ltmp673:
	movlw 0xf1
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp674:
LBB40_18:
LM1169:
.stabn	0x44, 0, 2948, LM1169-_BSP_I2C_BATVaule_Deal
	goto LBB40_49
Ltmp675:
LBB40_19:
LM1170:
.stabn	0x44, 0, 2949, LM1170-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp676:
	sublw 0x93
	blt LBB40_23
LBB40_20:
LM1171:
.stabn	0x44, 0, 2951, LM1171-_BSP_I2C_BATVaule_Deal
Ltmp677:
	movfw _BatCap_Value+0
Ltmp678:
	sublw 26
	bgt LBB40_22
LBB40_21:
LM1172:
.stabn	0x44, 0, 2952, LM1172-_BSP_I2C_BATVaule_Deal
Ltmp679:
	movlw 0xe7
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp680:
LBB40_22:
LM1173:
.stabn	0x44, 0, 2953, LM1173-_BSP_I2C_BATVaule_Deal
	goto LBB40_48
Ltmp681:
LBB40_23:
LM1174:
.stabn	0x44, 0, 2954, LM1174-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp682:
	sublw 0x99
	blt LBB40_27
LBB40_24:
LM1175:
.stabn	0x44, 0, 2956, LM1175-_BSP_I2C_BATVaule_Deal
Ltmp683:
	movfw _BatCap_Value+0
Ltmp684:
	sublw 36
	bgt LBB40_26
LBB40_25:
LM1176:
.stabn	0x44, 0, 2957, LM1176-_BSP_I2C_BATVaule_Deal
Ltmp685:
	movlw 0xdd
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp686:
LBB40_26:
LM1177:
.stabn	0x44, 0, 2958, LM1177-_BSP_I2C_BATVaule_Deal
	goto LBB40_47
Ltmp687:
LBB40_27:
LM1178:
.stabn	0x44, 0, 2959, LM1178-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp688:
	sublw 0xa0
	blt LBB40_31
LBB40_28:
LM1179:
.stabn	0x44, 0, 2961, LM1179-_BSP_I2C_BATVaule_Deal
Ltmp689:
	movfw _BatCap_Value+0
Ltmp690:
	sublw 51
	bgt LBB40_30
LBB40_29:
LM1180:
.stabn	0x44, 0, 2962, LM1180-_BSP_I2C_BATVaule_Deal
Ltmp691:
	movlw 0xce
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp692:
LBB40_30:
LM1181:
.stabn	0x44, 0, 2963, LM1181-_BSP_I2C_BATVaule_Deal
	goto LBB40_46
Ltmp693:
LBB40_31:
LM1182:
.stabn	0x44, 0, 2964, LM1182-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp694:
	sublw 0xb2
	blt LBB40_35
LBB40_32:
LM1183:
.stabn	0x44, 0, 2966, LM1183-_BSP_I2C_BATVaule_Deal
Ltmp695:
	movfw _BatCap_Value+0
Ltmp696:
	sublw 66
	bgt LBB40_34
LBB40_33:
LM1184:
.stabn	0x44, 0, 2967, LM1184-_BSP_I2C_BATVaule_Deal
Ltmp697:
	movlw 0xbf
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp698:
LBB40_34:
LM1185:
.stabn	0x44, 0, 2968, LM1185-_BSP_I2C_BATVaule_Deal
	goto LBB40_45
Ltmp699:
LBB40_35:
LM1186:
.stabn	0x44, 0, 2969, LM1186-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp700:
	sublw 0xb7
	blt LBB40_39
LBB40_36:
LM1187:
.stabn	0x44, 0, 2971, LM1187-_BSP_I2C_BATVaule_Deal
Ltmp701:
	movfw _BatCap_Value+0
Ltmp702:
	sublw 76
	bgt LBB40_38
LBB40_37:
LM1188:
.stabn	0x44, 0, 2972, LM1188-_BSP_I2C_BATVaule_Deal
Ltmp703:
	movlw 0xb5
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp704:
LBB40_38:
LM1189:
.stabn	0x44, 0, 2973, LM1189-_BSP_I2C_BATVaule_Deal
	goto LBB40_44
Ltmp705:
LBB40_39:
LM1190:
.stabn	0x44, 0, 2974, LM1190-_BSP_I2C_BATVaule_Deal
	movfwl _BAT_real+0
Ltmp706:
	sublw 0xbf
	blt LBB40_43
LBB40_40:
LM1191:
.stabn	0x44, 0, 2976, LM1191-_BSP_I2C_BATVaule_Deal
Ltmp707:
	movfw _BatCap_Value+0
Ltmp708:
	sublw 86
	bgt LBB40_42
LBB40_41:
LM1192:
.stabn	0x44, 0, 2977, LM1192-_BSP_I2C_BATVaule_Deal
Ltmp709:
	movlw 0xab
	addwf _BatCap_Value+0, W
	movwf _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp710:
LBB40_42:
LBB40_43:
LBB40_44:
LBB40_45:
LBB40_46:
LBB40_47:
LBB40_48:
LBB40_49:
LBB40_50:
LM1193:
.stabn	0x44, 0, 2980, LM1193-_BSP_I2C_BATVaule_Deal
	movfw _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp711:
	sublw 0
	beq LBB40_58
LBB40_51:
LM1194:
.stabn	0x44, 0, 2982, LM1194-_BSP_I2C_BATVaule_Deal
Ltmp712:
	movfw _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp713:
	sublw 11
	bgt LBB40_53
LBB40_52:
LM1195:
.stabn	0x44, 0, 2983, LM1195-_BSP_I2C_BATVaule_Deal
Ltmp714:
	bsf BSR,0
	CSCC_SHIFT _I_All_IN_Do,3,_I_All_IN_Do,3,2,0,2,1
	goto LBB40_57
LBB40_53:
LM1196:
.stabn	0x44, 0, 2984, LM1196-_BSP_I2C_BATVaule_Deal
Ltmp715:
	movfw _BSP_I2C_BATVaule_Deal.temp.+2
Ltmp716:
	sublw 6
	bgt LBB40_55
LBB40_54:
LM1197:
.stabn	0x44, 0, 2985, LM1197-_BSP_I2C_BATVaule_Deal
Ltmp717:
	movfwl _I_All_IN_Do+0
	movwf .args.__swmul_atmp+0
	movfwl _I_All_IN_Do+1
	movwf .args.__swmul_atmp+1
	movlw 3
	movwf .args.__swmul_btmp+0
	clrf .args.__swmul_btmp+1
	call .lib.__swmul
	movfw .ret.__swmul_ret+0
	movwfl _I_All_IN_Do+0
	movfw .ret.__swmul_ret+1
	movwfl _I_All_IN_Do+1
	goto LBB40_56
LBB40_55:
LM1198:
.stabn	0x44, 0, 2987, LM1198-_BSP_I2C_BATVaule_Deal
	bsf BSR,0
	CSCC_SHIFT _I_All_IN_Do,3,_I_All_IN_Do,3,2,0,1,1
Ltmp718:
LBB40_56:
LBB40_57:
LBB40_58:
LBB40_59:
LM1199:
.stabn	0x44, 0, 3007, LM1199-_BSP_I2C_BATVaule_Deal
	banksel _f_car_jump
	movfw _f_car_jump+0
Ltmp719:
	sublw 0
	beq LBB40_81
LBB40_60:
LM1200:
.stabn	0x44, 0, 3009, LM1200-_BSP_I2C_BATVaule_Deal
Ltmp720:
	movfw _car_ST+0
	sublw 3
	beq LBB40_63
LBB40_61:
	movfw _car_ST+0
	sublw 5
	beq LBB40_63
LBB40_62:
	movfw _car_ST+0
Ltmp721:
	sublw 6
	bne LBB40_68
LBB40_63:
LM1201:
.stabn	0x44, 0, 3011, LM1201-_BSP_I2C_BATVaule_Deal
Ltmp722:
	movlw 5
	movwf _Car_Cur_data+0
LM1202:
.stabn	0x44, 0, 3012, LM1202-_BSP_I2C_BATVaule_Deal
Ltmp723:
	movfw _car_OK_Flage+0
Ltmp724:
	sublw 4
	bgt LBB40_67
LBB40_64:
LM1203:
.stabn	0x44, 0, 3014, LM1203-_BSP_I2C_BATVaule_Deal
Ltmp725:
	clrf _car_OK_Flage+0
LM1204:
.stabn	0x44, 0, 3015, LM1204-_BSP_I2C_BATVaule_Deal
Ltmp726:
	movfwl _BatCap_Value+0
Ltmp727:
	sublw 6
	bgt LBB40_66
LBB40_65:
LM1205:
.stabn	0x44, 0, 3017, LM1205-_BSP_I2C_BATVaule_Deal
Ltmp728:
	movlw 0xfd
	bcf BSR,0
	addwf _BatCap_Value+0, F
Ltmp729:
LBB40_66:
LBB40_67:
LM1206:
.stabn	0x44, 0, 3020, LM1206-_BSP_I2C_BATVaule_Deal
	goto LBB40_74
Ltmp730:
LBB40_68:
LM1207:
.stabn	0x44, 0, 3021, LM1207-_BSP_I2C_BATVaule_Deal
	movfw _car_ST+0
Ltmp731:
	sublw 2
	bne LBB40_72
LBB40_69:
LM1208:
.stabn	0x44, 0, 3023, LM1208-_BSP_I2C_BATVaule_Deal
Ltmp732:
	movlw 0xfa
	movwf _Car_Cur_data+0
LM1209:
.stabn	0x44, 0, 3028, LM1209-_BSP_I2C_BATVaule_Deal
	incf _car_OK_Flage+0, F
LM1210:
.stabn	0x44, 0, 3029, LM1210-_BSP_I2C_BATVaule_Deal
Ltmp733:
	movfw _car_OK_Flage+0
Ltmp734:
	sublw 4
	bgt LBB40_71
LBB40_70:
LM1211:
.stabn	0x44, 0, 3031, LM1211-_BSP_I2C_BATVaule_Deal
Ltmp735:
	movlw 4
	movwf _car_OK_Flage+0
Ltmp736:
LBB40_71:
LM1212:
.stabn	0x44, 0, 3033, LM1212-_BSP_I2C_BATVaule_Deal
	goto LBB40_73
Ltmp737:
LBB40_72:
LM1213:
.stabn	0x44, 0, 3036, LM1213-_BSP_I2C_BATVaule_Deal
	movlw 5
	movwf _Car_Cur_data+0
LM1214:
.stabn	0x44, 0, 3037, LM1214-_BSP_I2C_BATVaule_Deal
	clrf _car_OK_Flage+0
Ltmp738:
LBB40_73:
LBB40_74:
LM1215:
.stabn	0x44, 0, 3039, LM1215-_BSP_I2C_BATVaule_Deal
	banksel _I_All_IN_Do
	movfw _I_All_IN_Do+0
	addwf _Car_Cur_data+0, W
	movwf _I_All_IN_Do+0
	movlw 0
	addwfc _I_All_IN_Do+1, F
LM1216:
.stabn	0x44, 0, 3041, LM1216-_BSP_I2C_BATVaule_Deal
Ltmp739:
	movfw _Vbat_8_date+0
Ltmp740:
	sublw 120
	blt LBB40_80
LBB40_75:
LM1217:
.stabn	0x44, 0, 3043, LM1217-_BSP_I2C_BATVaule_Deal
Ltmp741:
	incf _car_low_bater_Cnt+0, F
LM1218:
.stabn	0x44, 0, 3044, LM1218-_BSP_I2C_BATVaule_Deal
Ltmp742:
	movfw _car_low_bater_Cnt+0
Ltmp743:
	sublw 3
	bgt LBB40_79
LBB40_76:
LM1219:
.stabn	0x44, 0, 3046, LM1219-_BSP_I2C_BATVaule_Deal
Ltmp744:
	clrf _car_low_bater_Cnt+0
LM1220:
.stabn	0x44, 0, 3047, LM1220-_BSP_I2C_BATVaule_Deal
Ltmp745:
	movfwl _BatCap_Value+0
Ltmp746:
	sublw 16
	bgt LBB40_78
LBB40_77:
LM1221:
.stabn	0x44, 0, 3048, LM1221-_BSP_I2C_BATVaule_Deal
Ltmp747:
	bcf BSR,0
	decf _BatCap_Value+0, F
Ltmp748:
LBB40_78:
LBB40_79:
LBB40_80:
LM1222:
.stabn	0x44, 0, 3051, LM1222-_BSP_I2C_BATVaule_Deal
	goto LBB40_82
Ltmp749:
LBB40_81:
LM1223:
.stabn	0x44, 0, 3054, LM1223-_BSP_I2C_BATVaule_Deal
	clrf _car_OK_Flage+0
LM1224:
.stabn	0x44, 0, 3055, LM1224-_BSP_I2C_BATVaule_Deal
	clrf _Car_Cur_data+0
Ltmp750:
LBB40_82:
LM1225:
.stabn	0x44, 0, 3072, LM1225-_BSP_I2C_BATVaule_Deal
	banksel _ADD_IBAT_cnt
	movfw _ADD_IBAT_cnt+0
	addwf _I_All_IN_Do+0, W
	movwf _ADD_IBAT_cnt+0
	movfw _ADD_IBAT_cnt+1
	addwfc _I_All_IN_Do+1, W
	movwf _ADD_IBAT_cnt+1
LM1226:
.stabn	0x44, 0, 3073, LM1226-_BSP_I2C_BATVaule_Deal
Ltmp751:
	movfwl _R_SysMode_OK+0
Ltmp752:
	sublw 1
	bne LBB40_91
LBB40_83:
LBB40_84:
LM1227:
.stabn	0x44, 0, 3075, LM1227-_BSP_I2C_BATVaule_Deal
Ltmp753:
	banksel 0
	CSCC_CMP_CONST _ADD_IBAT_cnt,4,16,0,0,9,0,16,0,3
	andlw 1
	sublw 0
	bne LBB40_90
LBB40_85:
LM1228:
.stabn	0x44, 0, 3077, LM1228-_BSP_I2C_BATVaule_Deal
Ltmp754:
	movlw 0xfc
	bsf BSR,0
	addwf _ADD_IBAT_cnt+0, F
	movlw 0xef
	addwfc _ADD_IBAT_cnt+1, F
LM1229:
.stabn	0x44, 0, 3078, LM1229-_BSP_I2C_BATVaule_Deal
Ltmp755:
	movfwl _BatCap_Value+0
Ltmp756:
	sublw 98
	blt LBB40_89
LBB40_86:
LM1230:
.stabn	0x44, 0, 3080, LM1230-_BSP_I2C_BATVaule_Deal
Ltmp757:
	movfwl _Bat_low_Cnt+0
Ltmp758:
	sublw 0
	bne LBB40_88
LBB40_87:
LM1231:
.stabn	0x44, 0, 3081, LM1231-_BSP_I2C_BATVaule_Deal
Ltmp759:
	bcf BSR,0
	incf _BatCap_Value+0, F
Ltmp760:
LBB40_88:
LBB40_89:
LM1232:
.stabn	0x44, 0, 3075, LM1232-_BSP_I2C_BATVaule_Deal
	goto LBB40_84
LBB40_90:
LM1233:
.stabn	0x44, 0, 3084, LM1233-_BSP_I2C_BATVaule_Deal
	goto LBB40_97
Ltmp761:
LBB40_91:
LBB40_92:
LM1234:
.stabn	0x44, 0, 3087, LM1234-_BSP_I2C_BATVaule_Deal
	banksel 0
	CSCC_CMP_CONST _ADD_IBAT_cnt,4,16,0,0,9,0,16,0,3
	andlw 1
	sublw 0
	bne LBB40_96
LBB40_93:
LM1235:
.stabn	0x44, 0, 3089, LM1235-_BSP_I2C_BATVaule_Deal
Ltmp762:
	movlw 0xfc
	bsf BSR,0
	addwf _ADD_IBAT_cnt+0, F
	movlw 0xef
	addwfc _ADD_IBAT_cnt+1, F
LM1236:
.stabn	0x44, 0, 3090, LM1236-_BSP_I2C_BATVaule_Deal
Ltmp763:
	movfwl _BatCap_Value+0
Ltmp764:
	sublw 3
	bgt LBB40_95
LBB40_94:
LM1237:
.stabn	0x44, 0, 3092, LM1237-_BSP_I2C_BATVaule_Deal
Ltmp765:
	bcf BSR,0
	decf _BatCap_Value+0, F
LM1238:
.stabn	0x44, 0, 3093, LM1238-_BSP_I2C_BATVaule_Deal
	bsf BSR,1
	clrf _coulomb_data+13
Ltmp766:
LBB40_95:
LM1239:
.stabn	0x44, 0, 3087, LM1239-_BSP_I2C_BATVaule_Deal
	goto LBB40_92
Ltmp767:
LBB40_96:
LBB40_97:
LM1240:
.stabn	0x44, 0, 3097, LM1240-_BSP_I2C_BATVaule_Deal
	return
Ltmp768:
Lfunc_end80:
Lfunc_end81:
LM1241:
.stabn 0xc0,0,0, LM1137-_BSP_I2C_BATVaule_Deal
.stabs "tempdata16:2;",0x80,0,0,_BSP_I2C_BATVaule_Deal.temp.+0
.stabn 0xe0,0,0, LM1240-_BSP_I2C_BATVaule_Deal
.stabn 0xc0,0,0, LM1137-_BSP_I2C_BATVaule_Deal
.stabs "math_8data:10;",0x80,0,0,_BSP_I2C_BATVaule_Deal.temp.+2
.stabn 0xe0,0,0, LM1240-_BSP_I2C_BATVaule_Deal
.stabn 0xc0,0,0, LM1137-_BSP_I2C_BATVaule_Deal
.stabs "BAT_cha:10;",0x80,0,0,_BSP_I2C_BATVaule_Deal.temp.+2
.stabn 0xe0,0,0, LM1240-_BSP_I2C_BATVaule_Deal
.stabn 0xc0,0,0, LM1137-_BSP_I2C_BATVaule_Deal
.stabs "RE_data_temp8:10;",0x80,0,0,_BSP_I2C_BATVaule_Deal.temp.+3
.stabn 0xe0,0,0, LM1240-_BSP_I2C_BATVaule_Deal
.stabf LM1241-_BSP_I2C_BATVaule_Deal

	_Flash_update_Deal_sec .section rom
	.global	_Flash_update_Deal
_Flash_update_Deal:
Lfunc_begin82:
.stabs "Flash_update_Deal:f:16", 0x24,0,0,_Flash_update_Deal
.stabn 0xc0, 0, 0, _Flash_update_Deal
.stabn 0xe0, 0, 0, _Flash_update_Deal
LM1242:
.stabn	0x44, 0, 3187, LM1242-_Flash_update_Deal
Lfunc_begin83:
LM1243:
.stabn	0x44, 0, 3191, LM1243-_Flash_update_Deal
	banksel 0
	movlw 50
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1244:
.stabn	0x44, 0, 3193, LM1244-_Flash_update_Deal
	movlw 1
	movwf _iic_transmit_24C02_byte.args.+0
	movlw 0xaa
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1245:
.stabn	0x44, 0, 3196, LM1245-_Flash_update_Deal
	movlw 20
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1246:
.stabn	0x44, 0, 3197, LM1246-_Flash_update_Deal
	movlw 2
	movwf _iic_transmit_24C02_byte.args.+0
	movfw _BatCap_Value+0
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1247:
.stabn	0x44, 0, 3196, LM1247-_Flash_update_Deal
	movlw 20
LM1248:
.stabn	0x44, 0, 3198, LM1248-_Flash_update_Deal
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1249:
.stabn	0x44, 0, 3199, LM1249-_Flash_update_Deal
	movlw 3
	movwf _iic_transmit_24C02_byte.args.+0
	movfwl _Vbat_8_date+0
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1250:
.stabn	0x44, 0, 3196, LM1250-_Flash_update_Deal
	movlw 20
LM1251:
.stabn	0x44, 0, 3200, LM1251-_Flash_update_Deal
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1252:
.stabn	0x44, 0, 3201, LM1252-_Flash_update_Deal
	movlw 4
	movwf _iic_transmit_24C02_byte.args.+0
	movfw _Bat_low_Cnt+0
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1253:
.stabn	0x44, 0, 3196, LM1253-_Flash_update_Deal
	movlw 20
LM1254:
.stabn	0x44, 0, 3202, LM1254-_Flash_update_Deal
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1255:
.stabn	0x44, 0, 3208, LM1255-_Flash_update_Deal
Ltmp769:
	movfwl _BAT_cnt_recor+0
Ltmp770:
	sublw 20
	bgt LBB41_2
LBB41_1:
LM1256:
.stabn	0x44, 0, 3209, LM1256-_Flash_update_Deal
Ltmp771:
	banksel _BAT_cnt_recor
	clrf _BAT_cnt_recor+0
Ltmp772:
LBB41_2:
LM1257:
.stabn	0x44, 0, 3211, LM1257-_Flash_update_Deal
	movlw 6
	banksel _iic_transmit_24C02_byte.args.
	movwf _iic_transmit_24C02_byte.args.+0
	movfwl _BAT_cnt_recor+0
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1258:
.stabn	0x44, 0, 3212, LM1258-_Flash_update_Deal
	movlw 20
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1259:
.stabn	0x44, 0, 3215, LM1259-_Flash_update_Deal
	movfwl _Car_Cont_NG_Flage+0
	movwf _Flash_update_Deal.temp.+1
LM1260:
.stabn	0x44, 0, 3216, LM1260-_Flash_update_Deal
	banksel _BAT_cnt_recor
	movfw _BAT_cnt_recor+0
	addwf _BAT_cnt_recor+0, W
	banksel _Flash_update_Deal.temp.
	movwf _Flash_update_Deal.temp.+0
LM1261:
.stabn	0x44, 0, 3217, LM1261-_Flash_update_Deal
	movlw 32
	addwf _Flash_update_Deal.temp.+0, F
LM1262:
.stabn	0x44, 0, 3218, LM1262-_Flash_update_Deal
	movfw _Flash_update_Deal.temp.+0
	movwf _iic_transmit_24C02_byte.args.+0
	movfw _Flash_update_Deal.temp.+1
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1263:
.stabn	0x44, 0, 3212, LM1263-_Flash_update_Deal
	movlw 20
LM1264:
.stabn	0x44, 0, 3219, LM1264-_Flash_update_Deal
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1265:
.stabn	0x44, 0, 3220, LM1265-_Flash_update_Deal
	movfwl _Vbat_8_date+0
	movwf _Flash_update_Deal.temp.+1
LM1266:
.stabn	0x44, 0, 3221, LM1266-_Flash_update_Deal
	banksel _BAT_cnt_recor
	movfw _BAT_cnt_recor+0
	addwf _BAT_cnt_recor+0, W
	banksel _Flash_update_Deal.temp.
	movwf _Flash_update_Deal.temp.+0
LM1267:
.stabn	0x44, 0, 3222, LM1267-_Flash_update_Deal
	incf _Flash_update_Deal.temp.+0, F
LM1268:
.stabn	0x44, 0, 3217, LM1268-_Flash_update_Deal
	movlw 32
LM1269:
.stabn	0x44, 0, 3223, LM1269-_Flash_update_Deal
	addwf _Flash_update_Deal.temp.+0, F
LM1270:
.stabn	0x44, 0, 3224, LM1270-_Flash_update_Deal
	movfw _Flash_update_Deal.temp.+0
	movwf _iic_transmit_24C02_byte.args.+0
	movfw _Flash_update_Deal.temp.+1
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
LM1271:
.stabn	0x44, 0, 3212, LM1271-_Flash_update_Deal
	movlw 20
LM1272:
.stabn	0x44, 0, 3225, LM1272-_Flash_update_Deal
	movwf _delay_ms.args.+0
	clrf _delay_ms.args.+1
	clrf _delay_ms.args.+2
	clrf _delay_ms.args.+3
	call _delay_ms
LM1273:
.stabn	0x44, 0, 3226, LM1273-_Flash_update_Deal
	return
Ltmp773:
Lfunc_end82:
Lfunc_end83:
LM1274:
.stabn 0xc0,0,0, LM1243-_Flash_update_Deal
.stabs "temp8data:10;",0x80,0,0,_Flash_update_Deal.temp.+1
.stabn 0xe0,0,0, LM1273-_Flash_update_Deal
.stabn 0xc0,0,0, LM1243-_Flash_update_Deal
.stabs "temp8data_adr:10;",0x80,0,0,_Flash_update_Deal.temp.+0
.stabn 0xe0,0,0, LM1273-_Flash_update_Deal
.stabf LM1274-_Flash_update_Deal

	_Poweron_24C02_Self_inspec_sec .section rom
	.global	_Poweron_24C02_Self_inspec
_Poweron_24C02_Self_inspec:
Lfunc_begin84:
.stabs "Poweron_24C02_Self_inspec:f:16", 0x24,0,0,_Poweron_24C02_Self_inspec
.stabn 0xc0, 0, 0, _Poweron_24C02_Self_inspec
.stabn 0xe0, 0, 0, _Poweron_24C02_Self_inspec
LM1275:
.stabn	0x44, 0, 3228, LM1275-_Poweron_24C02_Self_inspec
Lfunc_begin85:
LM1276:
.stabn	0x44, 0, 3232, LM1276-_Poweron_24C02_Self_inspec
	banksel 0
	movfw _R_SysMode_OK+0
Ltmp774:
	sublw 1
	bne LBB42_2
LBB42_1:
LM1277:
.stabn	0x44, 0, 3234, LM1277-_Poweron_24C02_Self_inspec
Ltmp775:
	bsf BSR,0
	clrf _Self_inspe_CNT+0
LM1278:
.stabn	0x44, 0, 3236, LM1278-_Poweron_24C02_Self_inspec
	goto LBB42_17
Ltmp776:
LBB42_2:
LM1279:
.stabn	0x44, 0, 3239, LM1279-_Poweron_24C02_Self_inspec
	movfwl _Self_inspe_CNT+0
Ltmp777:
	sublw 0
	beq LBB42_17
LBB42_3:
LM1280:
.stabn	0x44, 0, 3241, LM1280-_Poweron_24C02_Self_inspec
Ltmp778:
	movlw 1
	bsf BSR,0
	addwf _Self_inspe_CNT+0, W
	movwf _Self_inspe_CNT+0
LM1281:
.stabn	0x44, 0, 3243, LM1281-_Poweron_24C02_Self_inspec
	sublw 10
	bne LBB42_5
LBB42_4:
LM1282:
.stabn	0x44, 0, 3245, LM1282-_Poweron_24C02_Self_inspec
Ltmp779:
	movlw 16
	bcf BSR,0
	movwf _iic_transmit_24C02_byte.args.+0
	movlw 85
	movwf _iic_transmit_24C02_byte.args.+1
	call _iic_transmit_24C02_byte
Ltmp780:
LBB42_5:
LM1283:
.stabn	0x44, 0, 3248, LM1283-_Poweron_24C02_Self_inspec
	banksel _Self_inspe_CNT
	movfw _Self_inspe_CNT+0
Ltmp781:
	sublw 15
LBB42_6:
LBB42_7:
LM1284:
.stabn	0x44, 0, 3252, LM1284-_Poweron_24C02_Self_inspec
Ltmp782:
	movfw _Self_inspe_CNT+0
Ltmp783:
	sublw 25
LBB42_8:
LBB42_9:
LM1285:
.stabn	0x44, 0, 3257, LM1285-_Poweron_24C02_Self_inspec
Ltmp784:
	movfw _Self_inspe_CNT+0
Ltmp785:
	sublw 30
	bne LBB42_14
LBB42_10:
LM1286:
.stabn	0x44, 0, 3260, LM1286-_Poweron_24C02_Self_inspec
Ltmp786:
	movlw 16
	movwfl _iic_receive_24C02_byte.args.+0
	call _iic_receive_24C02_byte
	movfw _iic_receive_24C02_byte.frame.+0
	movwf _Poweron_24C02_Self_inspec.temp.+0
LM1287:
.stabn	0x44, 0, 3261, LM1287-_Poweron_24C02_Self_inspec
	sublw 85
	bne LBB42_12
LBB42_11:
LM1288:
.stabn	0x44, 0, 3264, LM1288-_Poweron_24C02_Self_inspec
Ltmp787:
	bsf BSR,0
	clrf _Self_inspe_CNT+0
LM1289:
.stabn	0x44, 0, 3265, LM1289-_Poweron_24C02_Self_inspec
	goto LBB42_13
Ltmp788:
LBB42_12:
LBB42_13:
LBB42_14:
LM1290:
.stabn	0x44, 0, 3271, LM1290-_Poweron_24C02_Self_inspec
	banksel _Self_inspe_CNT
	movfw _Self_inspe_CNT+0
Ltmp789:
	sublw 80
	bgt LBB42_16
LBB42_15:
LM1291:
.stabn	0x44, 0, 3274, LM1291-_Poweron_24C02_Self_inspec
Ltmp790:
	clrf _Self_inspe_CNT+0
Ltmp791:
LBB42_16:
LBB42_17:
LM1292:
.stabn	0x44, 0, 3278, LM1292-_Poweron_24C02_Self_inspec
	banksel 0
	return
Ltmp792:
Lfunc_end84:
Lfunc_end85:
LM1293:
.stabn 0xc0,0,0, LM1276-_Poweron_24C02_Self_inspec
.stabs "temp8data:10;",0x80,0,0,_Poweron_24C02_Self_inspec.temp.+0
.stabn 0xe0,0,0, LM1292-_Poweron_24C02_Self_inspec
.stabf LM1293-_Poweron_24C02_Self_inspec

	_Charge_Bat_data_Err_Deal_sec .section rom
	.global	_Charge_Bat_data_Err_Deal
_Charge_Bat_data_Err_Deal:
Lfunc_begin86:
.stabs "Charge_Bat_data_Err_Deal:f:16", 0x24,0,0,_Charge_Bat_data_Err_Deal
.stabn 0xc0, 0, 0, _Charge_Bat_data_Err_Deal
.stabn 0xe0, 0, 0, _Charge_Bat_data_Err_Deal
LM1294:
.stabn	0x44, 0, 3281, LM1294-_Charge_Bat_data_Err_Deal
Lfunc_begin87:
LM1295:
.stabn	0x44, 0, 3282, LM1295-_Charge_Bat_data_Err_Deal
	banksel 0
	clrf _Charge_Bat_data_Err_Deal.temp.+0
LM1296:
.stabn	0x44, 0, 3283, LM1296-_Charge_Bat_data_Err_Deal
Ltmp793:
	movfw _R_SysMode_OK+0
Ltmp794:
	sublw 1
	beq LBB43_2
LBB43_1:
LM1297:
.stabn	0x44, 0, 3284, LM1297-_Charge_Bat_data_Err_Deal
Ltmp795:
	goto LBB43_7
Ltmp796:
LBB43_2:
LM1298:
.stabn	0x44, 0, 3285, LM1298-_Charge_Bat_data_Err_Deal
	movlw 52
	movwf _iic_receive_byte.args.+0
	call _iic_receive_byte
	movfw _iic_receive_byte.frame.+0
	movwf _Charge_Bat_data_Err_Deal.temp.+0
LM1299:
.stabn	0x44, 0, 3287, LM1299-_Charge_Bat_data_Err_Deal
Ltmp797:
	movfwl _coulomb_data+13
Ltmp798:
	sublw 0
	beq LBB43_4
LBB43_3:
LM1300:
.stabn	0x44, 0, 3295, LM1300-_Charge_Bat_data_Err_Deal
Ltmp799:
	goto LBB43_7
Ltmp800:
LBB43_4:
LM1301:
.stabn	0x44, 0, 3298, LM1301-_Charge_Bat_data_Err_Deal
	movfw _Charge_Bat_data_Err_Deal.temp.+0
Ltmp801:
	sublw 0xac
	beq LBB43_6
LBB43_5:
LM1302:
.stabn	0x44, 0, 3301, LM1302-_Charge_Bat_data_Err_Deal
Ltmp802:
	movlw 52
	movwf _iic_transmit_byte.args.+0
	movlw 0xac
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1303:
.stabn	0x44, 0, 3303, LM1303-_Charge_Bat_data_Err_Deal
	movlw 53
	movwf _iic_transmit_byte.args.+0
	movlw 4
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
LM1304:
.stabn	0x44, 0, 3305, LM1304-_Charge_Bat_data_Err_Deal
	movlw 54
	movwf _iic_transmit_byte.args.+0
	movlw 101
	movwf _iic_transmit_byte.args.+1
	call _iic_transmit_byte
Ltmp803:
LBB43_6:
LBB43_7:
LM1305:
.stabn	0x44, 0, 3308, LM1305-_Charge_Bat_data_Err_Deal
	return
Ltmp804:
Lfunc_end86:
Lfunc_end87:
LM1306:
.stabn 0xc0,0,0, LM1295-_Charge_Bat_data_Err_Deal
.stabs "Readdata:10;",0x80,0,0,_Charge_Bat_data_Err_Deal.temp.+0
.stabn 0xe0,0,0, LM1305-_Charge_Bat_data_Err_Deal
.stabf LM1306-_Charge_Bat_data_Err_Deal

	_LED_PIN_on_off_Deal_sec .section rom
	.global	_LED_PIN_on_off_Deal
_LED_PIN_on_off_Deal:
Lfunc_begin88:
.stabs "LED_PIN_on_off_Deal:f:16", 0x24,0,0,_LED_PIN_on_off_Deal
.stabn 0xc0, 0, 0, _LED_PIN_on_off_Deal
.stabn 0xe0, 0, 0, _LED_PIN_on_off_Deal
LM1307:
.stabn	0x44, 0, 3311, LM1307-_LED_PIN_on_off_Deal
Lfunc_begin89:
	banksel 0
	movfw _LED_PIN_on_off_Deal.args.+0
LM1308:
.stabn	0x44, 0, 3312, LM1308-_LED_PIN_on_off_Deal
Ltmp805:
	movwf _LED_PIN_on_off_Deal.temp.+0
	movfwl _WHITE_ON+0
Ltmp806:
	sublw 1
LBB44_1:
LBB44_2:
LM1309:
.stabn	0x44, 0, 3345, LM1309-_LED_PIN_on_off_Deal
	return
Ltmp807:
Lfunc_end88:
Lfunc_end89:
LM1310:
.stabn 0xc0,0,0, LM1307-_LED_PIN_on_off_Deal
.stabs "enble:10;",0x80,0,0,_LED_PIN_on_off_Deal.args.+0
.stabn 0xe0,0,0, LM1309-_LED_PIN_on_off_Deal
.stabf LM1310-_LED_PIN_on_off_Deal

	_LED_PIN_qu_fan_Deal_sec .section rom
	.global	_LED_PIN_qu_fan_Deal
_LED_PIN_qu_fan_Deal:
Lfunc_begin90:
.stabs "LED_PIN_qu_fan_Deal:f:16", 0x24,0,0,_LED_PIN_qu_fan_Deal
.stabn 0xc0, 0, 0, _LED_PIN_qu_fan_Deal
.stabn 0xe0, 0, 0, _LED_PIN_qu_fan_Deal
LM1311:
.stabn	0x44, 0, 3348, LM1311-_LED_PIN_qu_fan_Deal
Lfunc_begin91:
LM1312:
.stabn	0x44, 0, 3349, LM1312-_LED_PIN_qu_fan_Deal
	banksel 0
	movfwl _WHITE_ON+0
Ltmp808:
	sublw 1
	bne LBB45_2
LBB45_1:
LM1313:
.stabn	0x44, 0, 3351, LM1313-_LED_PIN_qu_fan_Deal
Ltmp809:
	movlw 0 
	btfsc _PT33, _PT33 
	movlw 1
	xorlw 0xff
	btfsc 05h, 0 
	bsf _PT33, _PT33 
	btfss 05h, 0 
	bcf _PT33, _PT33
Ltmp810:
LBB45_2:
LM1314:
.stabn	0x44, 0, 3361, LM1314-_LED_PIN_qu_fan_Deal
	return
Ltmp811:
Lfunc_end90:
Lfunc_end91:
LM1315:
.stabf LM1315-_LED_PIN_qu_fan_Deal

	_Data_16_to_8_data_Deal_sec .section rom
	.global	_Data_16_to_8_data_Deal
_Data_16_to_8_data_Deal:
Lfunc_begin92:
.stabs "Data_16_to_8_data_Deal:f168=10;;", 0x24,0,0,_Data_16_to_8_data_Deal
.stabn 0xc0, 0, 0, _Data_16_to_8_data_Deal
.stabn 0xe0, 0, 0, _Data_16_to_8_data_Deal
LM1316:
.stabn	0x44, 0, 3364, LM1316-_Data_16_to_8_data_Deal
Lfunc_begin93:
	banksel 0
	movfw _Data_16_to_8_data_Deal.args.+1
LM1317:
.stabn	0x44, 0, 3366, LM1317-_Data_16_to_8_data_Deal
Ltmp812:
	movwf _Data_16_to_8_data_Deal.temp.+1
	movfw _Data_16_to_8_data_Deal.args.+0
	movwf _Data_16_to_8_data_Deal.temp.+0
	movwf _hex_greater_than_compare.args.+0
	movfw _Data_16_to_8_data_Deal.temp.+1
	movwf _hex_greater_than_compare.args.+1
	movlw 0xfe
	movwf _hex_greater_than_compare.args.+2
	clrf _hex_greater_than_compare.args.+3
	call _hex_greater_than_compare
	movfw _hex_greater_than_compare.frame.+0
Ltmp813:
	sublw 0
	beq LBB46_2
LBB46_1:
LM1318:
.stabn	0x44, 0, 3367, LM1318-_Data_16_to_8_data_Deal
Ltmp814:
	movlw 0xfe
	movwf _Data_16_to_8_data_Deal.temp.+2
	goto LBB46_3
LBB46_2:
LM1319:
.stabn	0x44, 0, 3369, LM1319-_Data_16_to_8_data_Deal
	movfw _Data_16_to_8_data_Deal.temp.+0
	movwf _Data_16_to_8_data_Deal.temp.+2
Ltmp815:
LBB46_3:
LM1320:
.stabn	0x44, 0, 3371, LM1320-_Data_16_to_8_data_Deal
	movfw _Data_16_to_8_data_Deal.temp.+2
	movwf _Data_16_to_8_data_Deal.frame.+0
	return
Ltmp816:
Lfunc_end92:
Lfunc_end93:
LM1321:
.stabn 0xc0,0,0, LM1316-_Data_16_to_8_data_Deal
.stabs "data16_original:2;",0x80,0,0,_Data_16_to_8_data_Deal.args.+0
.stabn 0xe0,0,0, LM1320-_Data_16_to_8_data_Deal
.stabn 0xc0,0,0, LM1317-_Data_16_to_8_data_Deal
.stabs "data8_returm:10;",0x80,0,0,_Data_16_to_8_data_Deal.temp.+2
.stabn 0xe0,0,0, LM1320-_Data_16_to_8_data_Deal
.stabf LM1321-_Data_16_to_8_data_Deal


	_pdo_src_list_h_app_init.c_Init .section rom,flag=1
	_pdo_src_list_h:
		addpcw
		retlw 136
		retlw 19
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
		retlw 40
		retlw 35
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
		retlw 224
		retlw 46
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
		retlw 152
		retlw 58
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
		retlw 32
		retlw 78
		retlw 0
		retlw 0
		retlw 178
		retlw 12
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
	.ends


	_source_capabilities_extended_message_app_init.c_Init .section rom,flag=1
	_source_capabilities_extended_message:
		addpcw
		retlw 192
		retlw 45
		retlw 11
		retlw 2
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 48
		retlw 16
		retlw 0
		retlw 0
		retlw 0
		retlw 2
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 4
		retlw 1
		retlw 27
	.ends


	_status_message_app_init.c_Init .section rom,flag=1
	_status_message:
		addpcw
		retlw 0
		retlw 8
		retlw 2
		retlw 0
		retlw 0
	.ends


	_battery_capabilities_message_app_init.c_Init .section rom,flag=1
	_battery_capabilities_message:
		addpcw
		retlw 255
		retlw 0
		retlw 90
		retlw 165
		retlw 255
		retlw 255
		retlw 255
		retlw 255
		retlw 0
	.ends


	_pdo_sourcecap_app_init.c_Init .section rom,flag=1
	_pdo_sourcecap:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 40
		retlw 44
		retlw 209
		retlw 2
		retlw 0
		retlw 44
		retlw 193
		retlw 3
		retlw 0
		retlw 44
		retlw 177
		retlw 4
		retlw 0
		retlw 69
		retlw 65
		retlw 6
		retlw 0
		retlw 60
		retlw 33
		retlw 120
		retlw 192
		retlw 60
		retlw 33
		retlw 220
		retlw 192
	.ends


	_pdo_sourcecap_45_app_init.c_Init .section rom,flag=1
	_pdo_sourcecap_45:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 40
		retlw 44
		retlw 209
		retlw 2
		retlw 0
		retlw 44
		retlw 193
		retlw 3
		retlw 0
		retlw 44
		retlw 177
		retlw 4
		retlw 0
		retlw 225
		retlw 64
		retlw 6
		retlw 0
		retlw 60
		retlw 33
		retlw 120
		retlw 192
		retlw 60
		retlw 33
		retlw 220
		retlw 192
	.ends


	_pdo_sourcecap_30_app_init.c_Init .section rom,flag=1
	_pdo_sourcecap_30:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 40
		retlw 44
		retlw 209
		retlw 2
		retlw 0
		retlw 250
		retlw 192
		retlw 3
		retlw 0
		retlw 200
		retlw 176
		retlw 4
		retlw 0
		retlw 150
		retlw 64
		retlw 6
		retlw 0
		retlw 60
		retlw 33
		retlw 120
		retlw 192
		retlw 60
		retlw 33
		retlw 220
		retlw 192
	.ends


	_pdo_sourcecap_18_app_init.c_Init .section rom,flag=1
	_pdo_sourcecap_18:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 40
		retlw 200
		retlw 208
		retlw 2
		retlw 0
		retlw 150
		retlw 192
		retlw 3
		retlw 0
		retlw 120
		retlw 176
		retlw 4
		retlw 0
		retlw 90
		retlw 64
		retlw 6
		retlw 0
		retlw 60
		retlw 33
		retlw 120
		retlw 192
		retlw 60
		retlw 33
		retlw 220
		retlw 192
	.ends


	_multi_src_list_app_init.c_Init .section rom,flag=1
	_multi_src_list:
		addpcw
		retlw 136
		retlw 19
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
		retlw 40
		retlw 35
		retlw 0
		retlw 0
		retlw 208
		retlw 7
		retlw 0
		retlw 0
		retlw 224
		retlw 46
		retlw 0
		retlw 0
		retlw 220
		retlw 5
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 0
		retlw 184
		retlw 11
		retlw 0
		retlw 0
	.ends


	_pdo_sinkcap_app_init.c_Init .section rom,flag=1
	_pdo_sinkcap:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 56
		retlw 44
		retlw 65
		retlw 6
		retlw 0
	.ends


	_pdo_sinkcap_9_app_init.c_Init .section rom,flag=1
	_pdo_sinkcap_9:
		addpcw
		retlw 44
		retlw 145
		retlw 1
		retlw 56
		retlw 44
		retlw 209
		retlw 2
		retlw 0
	.ends


	_Vbat_Tab_app_init.c_Init .section rom,flag=1
	_Vbat_Tab:
		addpcw
		retlw 217
		retlw 214
		retlw 206
		retlw 200
		retlw 193
		retlw 187
		retlw 180
		retlw 173
		retlw 167
		retlw 163
		retlw 155
		retlw 148
		retlw 142
		retlw 135
		retlw 127
		retlw 120
		retlw 113
		retlw 107
		retlw 100
		retlw 87
		retlw 73
	.ends


	_VbatDisP_Tab_app_init.c_Init .section rom,flag=1
	_VbatDisP_Tab:
		addpcw
		retlw 99
		retlw 95
		retlw 90
		retlw 85
		retlw 80
		retlw 75
		retlw 70
		retlw 65
		retlw 60
		retlw 55
		retlw 50
		retlw 45
		retlw 40
		retlw 35
		retlw 30
		retlw 25
		retlw 20
		retlw 15
		retlw 10
		retlw 5
		retlw 1
		retlw 0
		retlw 0
	.ends


	_BAT_CO_OPEN_CNT_app_init.c .section bank3,uninit
	_BAT_CO_OPEN_CNT .ds 1
	.ends

	_pdo_src_list_app_init.c .section bank1,uninit
	_pdo_src_list .ds 56
	.ends

	_Self_inspe_CNT_app_init.c .section bank3,uninit
	_Self_inspe_CNT .ds 1
	.ends

	_Bat_low_Cnt_app_init.c .section bank0,uninit
	_Bat_low_Cnt .ds 1
	.ends

	_LCD_display_3S_Cnt_app_init.c .section bank6,uninit
	_LCD_display_3S_Cnt .ds 2
	.ends

	_R_DisCharge_SmallCurCnt_app_init.c .section bank0,uninit
	_R_DisCharge_SmallCurCnt .ds 1
	.ends

	_Discharge_MinCur_app_init.c .section bank0,uninit
	_Discharge_MinCur .ds 1
	.ends

	_Temp_app_init.c .section bank0,uninit
	_Temp .ds 10
	.ends

	_V_NO_Cha_flage_app_init.c .section bank3,uninit
	_V_NO_Cha_flage .ds 1
	.ends

	_V_NO_BAT_Charge_app_init.c .section bank3,uninit
	_V_NO_BAT_Charge .ds 1
	.ends

	_Bat_Protest_cnt_app_init.c .section bank3,uninit
	_Bat_Protest_cnt .ds 1
	.ends

	_Charge_low_power_F_app_init.c .section bank3,uninit
	_Charge_low_power_F .ds 1
	.ends

	_SOS_lighting_stop_app_init.c .section bank3,uninit
	_SOS_lighting_stop .ds 1
	.ends

	_statusKeyFlag_app_init.c .section bank3,uninit
	_statusKeyFlag .ds 1
	.ends

	_Be_statusKeyFlag_app_init.c .section bank3,uninit
	_Be_statusKeyFlag .ds 1
	.ends

	_Bat_low_sleep_flage_app_init.c .section bank3,uninit
	_Bat_low_sleep_flage .ds 1
	.ends

	_CA_Test_do_no_Slepp_app_init.c .section bank3,uninit
	_CA_Test_do_no_Slepp .ds 1
	.ends

	_hour2_dis_flage_app_init.c .section bank3,uninit
	_hour2_dis_flage .ds 1
	.ends

	_hour2_dis_cnt_app_init.c .section bank3,uninit
	_hour2_dis_cnt .ds 2
	.ends

	_ADD_IBAT_cnt_app_init.c .section bank3,uninit
	_ADD_IBAT_cnt .ds 2
	.ends

	_Charge_Bat_Start_Cnt_app_init.c .section bank3,uninit
	_Charge_Bat_Start_Cnt .ds 1
	.ends

	_CA_IN_Frist_No_Soure_app_init.c .section bank3,uninit
	_CA_IN_Frist_No_Soure .ds 1
	.ends

	_Frist_Bat_Connect_app_init.c .section bank3,uninit
	_Frist_Bat_Connect .ds 1
	.ends

	_Charge_HIG_Vbat_F_app_init.c .section bank3,uninit
	_Charge_HIG_Vbat_F .ds 1
	.ends

	_DIS_low_bater_Cnt_app_init.c .section bank3,uninit
	_DIS_low_bater_Cnt .ds 1
	.ends

	_Bat_low_RE_Cnt_app_init.c .section bank0,uninit
	_Bat_low_RE_Cnt .ds 1
	.ends

	_Car_Cont_NG_Flage_app_init.c .section bank6,uninit
	_Car_Cont_NG_Flage .ds 1
	.ends

	_R_DisCharge_OutTime_app_init.c .section bank0,uninit
	_R_DisCharge_OutTime .ds 1
	.ends

	_bat_full_cnt_app_init.c .section bank0,uninit
	_bat_full_cnt .ds 1
	.ends

	_Flash_Bat_RCR_data_app_init.c .section bank3,uninit
	_Flash_Bat_RCR_data .ds 1
	.ends

	_R_SysMode_OK_app_init.c .section bank0,uninit
	_R_SysMode_OK .ds 1
	.ends

	_Flash_Bat_Vol_data_app_init.c .section bank3,uninit
	_Flash_Bat_Vol_data .ds 1
	.ends

	_Car_low_bat_cnt_app_init.c .section bank3,uninit
	_Car_low_bat_cnt .ds 1
	.ends

	_Bat_low2_Cnt_app_init.c .section bank3,uninit
	_Bat_low2_Cnt .ds 1
	.ends

	_Charge_low_power_CNT_app_init.c .section bank3,uninit
	_Charge_low_power_CNT .ds 1
	.ends

	_Port_NTC_NG_LOW_POWER_Flage_app_init.c .section bank3,uninit
	_Port_NTC_NG_LOW_POWER_Flage .ds 1
	.ends

	_Port_NTC_NG_LOW_POWER_Cnt_app_init.c .section bank3,uninit
	_Port_NTC_NG_LOW_POWER_Cnt .ds 1
	.ends

	_open_to_12hour_Cnt_app_init.c .section bank3,uninit
	_open_to_12hour_Cnt .ds 2
	.ends

	_TYPEC_sleep_distime_cnt_app_init.c .section bank3,uninit
	_TYPEC_sleep_distime_cnt .ds 1
	.ends

	_TYPEC_sleep_time_cnt_app_init.c .section bank3,uninit
	_TYPEC_sleep_time_cnt .ds 2
	.ends

	_Frist_start_sink_app_init.c .section bank0,uninit
	_Frist_start_sink .ds 1
	.ends

	_Frist_Bat_100ms_Cnt_app_init.c .section bank3,uninit
	_Frist_Bat_100ms_Cnt .ds 1
	.ends

	_V_NO_BAT_Cnt_app_init.c .section bank3,uninit
	_V_NO_BAT_Cnt .ds 1
	.ends

	_V_NO_Charge_app_init.c .section bank3,uninit
	_V_NO_Charge .ds 1
	.ends

	_MiroB_dis_Cnt_app_init.c .section bank0,uninit
	_MiroB_dis_Cnt .ds 1
	.ends

	_MiroB_charge_Cnt_app_init.c .section bank0,uninit
	_MiroB_charge_Cnt .ds 1
	.ends

	_delay_Check_C_Vol_app_init.c .section bank3,uninit
	_delay_Check_C_Vol .ds 1
	.ends

	_I_All_IN_Do_app_init.c .section bank3,uninit
	_I_All_IN_Do .ds 2
	.ends

	_BAT_real_app_init.c .section bank6,uninit
	_BAT_real .ds 1
	.ends

	_car_OK_Flage_app_init.c .section bank3,uninit
	_car_OK_Flage .ds 1
	.ends

	_car_low_bater_Cnt_app_init.c .section bank3,uninit
	_car_low_bater_Cnt .ds 1
	.ends

	_Flash_Bat_Value_data_app_init.c .section bank3,uninit
	_Flash_Bat_Value_data .ds 1
	.ends

	_BAT_cnt_recor_app_init.c .section bank6,uninit
	_BAT_cnt_recor .ds 1
	.ends

	_Charge_bat_low_power_F_app_init.c .section bank3,uninit
	_Charge_bat_low_power_F .ds 1
	.ends

	_Charge_bat_low_power_CNT_app_init.c .section bank3,uninit
	_Charge_bat_low_power_CNT .ds 1
	.ends

	_Charge_low_Vbat_CNT_app_init.c .section bank3,uninit
	_Charge_low_Vbat_CNT .ds 1
	.ends

	_uart_read_temp_app_init.c .section bank3,uninit
	_uart_read_temp .ds 1
	.ends

	_A1_closeTIME_app_init.c .section bank3,uninit
	_A1_closeTIME .ds 2
	.ends

	_Temp_limit_discharge_app_init.c .section bank3,uninit
	_Temp_limit_discharge .ds 1
	.ends

	_Temp_limit_I_app_init.c .section bank3,uninit
	_Temp_limit_I .ds 1
	.ends

	_Temp_limit_count_app_init.c .section bank3,uninit
	_Temp_limit_count .ds 1
	.ends

	_Temp_close_limit_count_app_init.c .section bank3,uninit
	_Temp_close_limit_count .ds 1
	.ends

	_ADD_percent_accu_app_init.c .section bank3,uninit
	_ADD_percent_accu .ds 1
	.ends

	_R_data_tx_app_init.c .section bank0,uninit
	_R_data_tx .ds 1
	.ends

	_R_count_tx_app_init.c .section bank0,uninit
	_R_count_tx .ds 1
	.ends

	_R_SysMode_OK_bak_app_init.c .section bank0,uninit
	_R_SysMode_OK_bak .ds 1
	.ends

	_R_SysMode_BE_app_init.c .section bank0,uninit
	_R_SysMode_BE .ds 1
	.ends

	_Charge_up_Cnt_app_init.c .section bank0,uninit
	_Charge_up_Cnt .ds 1
	.ends

	_DisCharge_down_Cnt_app_init.c .section bank0,uninit
	_DisCharge_down_Cnt .ds 1
	.ends

	_R_Charge_level_app_init.c .section bank0,uninit
	_R_Charge_level .ds 1
	.ends

	_R_Charge_level_up_Cnt_app_init.c .section bank0,uninit
	_R_Charge_level_up_Cnt .ds 1
	.ends

	_R_Charge_level_down_Cnt_app_init.c .section bank0,uninit
	_R_Charge_level_down_Cnt .ds 1
	.ends

	_bat_dis_full_cnt_app_init.c .section bank3,uninit
	_bat_dis_full_cnt .ds 1
	.ends

	_flash_count_app_init.c .section bank3,uninit
	_flash_count .ds 1
	.ends

	_sos_state_app_init.c .section bank3,uninit
	_sos_state .ds 1
	.ends

	_sos_count_app_init.c .section bank3,uninit
	_sos_count .ds 1
	.ends

	.@_app_peripheral_init_sec@_app_peripheral_init.temp. .section bank1,uninit
	_app_peripheral_init.temp. .ds 1
	.ends

	.@_peripheral_typec_init_sec@_peripheral_typec_init.args. .section bank1,uninit
	_peripheral_typec_init.args. .ds 2
	.ends

	.@_peripheral_typec_init_sec@_peripheral_typec_init.temp. .section bank1,uninit
	_peripheral_typec_init.temp. .ds 4
	.ends

	.@_peripheral_pd_init_sec@_peripheral_pd_init.temp. .section bank1,uninit
	_peripheral_pd_init.temp. .ds 3
	.ends

	.@_peripheral_typec_UFP_init_sec@_peripheral_typec_UFP_init.args. .section bank1,uninit
	_peripheral_typec_UFP_init.args. .ds 2
	.ends

	.@_peripheral_typec_UFP_init_sec@_peripheral_typec_UFP_init.temp. .section bank1,uninit
	_peripheral_typec_UFP_init.temp. .ds 4
	.ends

	.@_peripheral_typec_DRP_init_sec@_peripheral_typec_DRP_init.args. .section bank1,uninit
	_peripheral_typec_DRP_init.args. .ds 2
	.ends

	.@_peripheral_typec_DRP_init_sec@_peripheral_typec_DRP_init.temp. .section bank1,uninit
	_peripheral_typec_DRP_init.temp. .ds 4
	.ends

	.@_Bat_Vaule_deal_sec@_Bat_Vaule_deal.temp. .section bank1,uninit
	_Bat_Vaule_deal.temp. .ds 5
	.ends

	.@_Bat_low_deal_sec@_Bat_low_deal.temp. .section bank1,uninit
	_Bat_low_deal.temp. .ds 1
	.ends

	.@_app_power_PDO_rerest_sec@_app_power_PDO_rerest.temp. .section bank1,uninit
	_app_power_PDO_rerest.temp. .ds 1
	.ends

	.@_BSP_Temp_Control_sec@_BSP_Temp_Control.temp. .section bank1,uninit
	_BSP_Temp_Control.temp. .ds 3
	.ends

	.@_app_power_capabilities_switch_h_sec@_app_power_capabilities_switch_h.temp. .section bank1,uninit
	_app_power_capabilities_switch_h.temp. .ds 1
	.ends

	.@_CA_CB_Port_Statu_sec@_CA_CB_Port_Statu.temp. .section bank1,uninit
	_CA_CB_Port_Statu.temp. .ds 2
	.ends

	.@_app_power_capabilities_switch_l_sec@_app_power_capabilities_switch_l.temp. .section bank1,uninit
	_app_power_capabilities_switch_l.temp. .ds 1
	.ends

	.@_Vin_vol_charge_deal_sec@_Vin_vol_charge_deal.temp. .section bank1,uninit
	_Vin_vol_charge_deal.temp. .ds 4
	.ends

	.@_Miro_in_deal_sec@_Miro_in_deal.temp. .section bank1,uninit
	_Miro_in_deal.temp. .ds 3
	.ends

	.@_Sub_sim_tx_sec@_Sub_sim_tx.args. .section bank1,uninit
	_Sub_sim_tx.args. .ds 1
	.ends

	.@_Sub_sim_tx_sec@_Sub_sim_tx.temp. .section bank1,uninit
	_Sub_sim_tx.temp. .ds 1
	.ends

	.@_Sinck_in9V_max_sec@_Sinck_in9V_max.temp. .section bank1,uninit
	_Sinck_in9V_max.temp. .ds 3
	.ends

	.@_Sinck_in_recover_max_sec@_Sinck_in_recover_max.temp. .section bank1,uninit
	_Sinck_in_recover_max.temp. .ds 3
	.ends

	.@_IAP_inti_deal_sec@_IAP_inti_deal.temp. .section bank1,uninit
	_IAP_inti_deal.temp. .ds 1
	.ends

	.@_IAP_inti_deal_dis_sec@_IAP_inti_deal_dis.temp. .section bank1,uninit
	_IAP_inti_deal_dis.temp. .ds 1
	.ends

	.@_iap_signal_detect_sec@_iap_signal_detect.args. .section bank1,uninit
	_iap_signal_detect.args. .ds 1
	.ends

	.@_iap_signal_detect_sec@_iap_signal_detect.temp. .section bank1,uninit
	_iap_signal_detect.temp. .ds 2
	.ends

	.@_app_power_capabilities_switch_h_1_sec@_app_power_capabilities_switch_h_1.temp. .section bank1,uninit
	_app_power_capabilities_switch_h_1.temp. .ds 1
	.ends

	.@_app_power_capabilities_switch_h_2_sec@_app_power_capabilities_switch_h_2.temp. .section bank1,uninit
	_app_power_capabilities_switch_h_2.temp. .ds 1
	.ends

	.@_BSP_I2C_VbatCheck_sec@_BSP_I2C_VbatCheck.frame. .section bank1,uninit
	_BSP_I2C_VbatCheck.frame. .ds 2
	.ends

	.@_BSP_I2C_VbatCheck_sec@_BSP_I2C_VbatCheck.temp. .section bank1,uninit
	_BSP_I2C_VbatCheck.temp. .ds 3
	.ends

	.@_BSP_I2C_7203_Data_sec@_BSP_I2C_7203_Data.temp. .section bank1,uninit
	_BSP_I2C_7203_Data.temp. .ds 5
	.ends

	.@_BSP_I2C_BATVaule_Deal_sec@_BSP_I2C_BATVaule_Deal.temp. .section bank1,uninit
	_BSP_I2C_BATVaule_Deal.temp. .ds 4
	.ends

	.@_Flash_update_Deal_sec@_Flash_update_Deal.temp. .section bank1,uninit
	_Flash_update_Deal.temp. .ds 2
	.ends

	.@_Poweron_24C02_Self_inspec_sec@_Poweron_24C02_Self_inspec.temp. .section bank1,uninit
	_Poweron_24C02_Self_inspec.temp. .ds 1
	.ends

	.@_Charge_Bat_data_Err_Deal_sec@_Charge_Bat_data_Err_Deal.temp. .section bank1,uninit
	_Charge_Bat_data_Err_Deal.temp. .ds 1
	.ends

	.@_LED_PIN_on_off_Deal_sec@_LED_PIN_on_off_Deal.args. .section bank1,uninit
	_LED_PIN_on_off_Deal.args. .ds 1
	.ends

	.@_LED_PIN_on_off_Deal_sec@_LED_PIN_on_off_Deal.temp. .section bank1,uninit
	_LED_PIN_on_off_Deal.temp. .ds 1
	.ends

	.@_Data_16_to_8_data_Deal_sec@_Data_16_to_8_data_Deal.args. .section bank1,uninit
	_Data_16_to_8_data_Deal.args. .ds 2
	.ends

	.@_Data_16_to_8_data_Deal_sec@_Data_16_to_8_data_Deal.frame. .section bank1,uninit
	_Data_16_to_8_data_Deal.frame. .ds 1
	.ends

	.@_Data_16_to_8_data_Deal_sec@_Data_16_to_8_data_Deal.temp. .section bank1,uninit
	_Data_16_to_8_data_Deal.temp. .ds 3
	.ends



	.global	_pdo_src_list_h
	.global	_source_capabilities_extended_message
	.global	_status_message
	.global	_battery_capabilities_message
	.global	_pdo_sourcecap
	.global	_pdo_sourcecap_45
	.global	_pdo_sourcecap_30
	.global	_pdo_sourcecap_18
	.global	_multi_src_list
	.global	_pdo_sinkcap
	.global	_pdo_sinkcap_9
	.global	_Vbat_Tab
	.global	_VbatDisP_Tab
	.global	_BAT_CO_OPEN_CNT
	.global	_pdo_src_list
	.global	_Self_inspe_CNT
	.global	_Bat_low_Cnt
	.global	_LCD_display_3S_Cnt
	.global	_R_DisCharge_SmallCurCnt
	.global	_Discharge_MinCur
	.global	_Temp
	.global	_V_NO_Cha_flage
	.global	_V_NO_BAT_Charge
	.global	_Bat_Protest_cnt
	.global	_Charge_low_power_F
	.global	_SOS_lighting_stop
	.global	_statusKeyFlag
	.global	_Be_statusKeyFlag
	.global	_Bat_low_sleep_flage
	.global	_CA_Test_do_no_Slepp
	.global	_hour2_dis_flage
	.global	_hour2_dis_cnt
	.global	_ADD_IBAT_cnt
	.global	_Charge_Bat_Start_Cnt
	.global	_CA_IN_Frist_No_Soure
	.global	_Frist_Bat_Connect
	.global	_Charge_HIG_Vbat_F
	.global	_DIS_low_bater_Cnt
	.global	_Bat_low_RE_Cnt
	.global	_Car_Cont_NG_Flage
	.global	_R_DisCharge_OutTime
	.global	_bat_full_cnt
	.global	_Flash_Bat_RCR_data
	.global	_R_SysMode_OK
	.global	_Flash_Bat_Vol_data
	.global	_Car_low_bat_cnt
	.global	_Bat_low2_Cnt
	.global	_Charge_low_power_CNT
	.global	_Port_NTC_NG_LOW_POWER_Flage
	.global	_Port_NTC_NG_LOW_POWER_Cnt
	.global	_open_to_12hour_Cnt
	.global	_TYPEC_sleep_distime_cnt
	.global	_TYPEC_sleep_time_cnt
	.global	_Frist_start_sink
	.global	_Frist_Bat_100ms_Cnt
	.global	_V_NO_BAT_Cnt
	.global	_V_NO_Charge
	.global	_MiroB_dis_Cnt
	.global	_MiroB_charge_Cnt
	.global	_delay_Check_C_Vol
	.global	_I_All_IN_Do
	.global	_BAT_real
	.global	_car_OK_Flage
	.global	_car_low_bater_Cnt
	.global	_Flash_Bat_Value_data
	.global	_BAT_cnt_recor
	.global	_Charge_bat_low_power_F
	.global	_Charge_bat_low_power_CNT
	.global	_Charge_low_Vbat_CNT
	.global	_uart_read_temp
	.global	_A1_closeTIME
	.global	_Temp_limit_discharge
	.global	_Temp_limit_I
	.global	_Temp_limit_count
	.global	_Temp_close_limit_count
	.global	_ADD_percent_accu
	.global	_R_data_tx
	.global	_R_count_tx
	.global	_R_SysMode_OK_bak
	.global	_R_SysMode_BE
	.global	_Charge_up_Cnt
	.global	_DisCharge_down_Cnt
	.global	_R_Charge_level
	.global	_R_Charge_level_up_Cnt
	.global	_R_Charge_level_down_Cnt
	.global	_bat_dis_full_cnt
	.global	_flash_count
	.global	_sos_state
	.global	_sos_count

